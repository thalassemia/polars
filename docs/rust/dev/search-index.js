var searchIndex = new Map(JSON.parse('[\
["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkIdIter","ChunkedArray","ChunkedArrayLayout","FAST_EXPLODE_LIST","Multi","MultiNoNull","SORTED_ASC","SORTED_DSC","Settings","Single","SingleNoNull","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add","add","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","all","all","all_kleene","amortized_iter","amortized_iter","amortized_iter_with_name","amortized_iter_with_name","any","any_kleene","append","apply","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_amortized_generic","apply_amortized_same_type","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values_generic","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arg_unique","arithmetic","as_array","as_binary","as_binary","as_list","as_ref","as_ref_dtype","as_string","as_string","binary_zip_and_apply_amortized","bitand","bitand","bitand","bitand","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","cast","cast","cast","cast","cast","cast","cast","cast","cast_and_apply_in_place","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","checked_div","checked_div_num","chunk_id","chunks","chunks_mut","clear","clone","clone","clone_into","clone_into","collect","comparison","complement","cont_slice","contains","data_views","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","difference","div","div","div","div","divide","drop","drop","drop","drop","dtype","empty","eq","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","explode_and_offsets","explode_and_offsets","explode_and_offsets","extend","extend","fill_null_with_values","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","filter","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","for_each_amortized","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iterator_par","from_name","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_like","full_null_with_dtype","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_as_series","get_flags","get_inner","get_inner","get_object","get_object_unchecked","get_sorted_flag","get_unchecked","get_values_size","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples_perfect","gt","gt","gt","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","head","init","init","init","init_rand","inner_dtype","inner_dtype","insert","intersection","intersects","into","into","into","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_no_null_iter","into_series","into_series","into_time","is_all","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter","iter_names","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","max","max","max_as_series","max_as_series","max_as_series","max_as_series","mean","mean","median","median","median","median_as_series","median_as_series","median_as_series","min","min","min_as_series","min_as_series","min_as_series","min_as_series","min_max","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","none_to_nan","not","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","object","offsets","offsets","offsets","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_as_series","prune_empty_chunks","quantile","quantile","quantile","quantile_as_series","quantile_as_series","quantile_as_series","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","rem","rem","rem","rem","remainder","remove","rename","reverse","reverse","reverse","reverse","reverse","reverse","reverse","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","scatter","scatter","scatter_single","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","scatter_with","set","set","set","set","set","set_fast_explode","set_inner_dtype","set_null_count","set_sorted_flag","set_sorted_flag","shift","shift","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shrink_to_fit","slice","sort","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","sort_with","std","std_as_series","std_as_series","std_as_series","sub","sub","sub","sub","sub","sub_assign","subtract","sum","sum","sum_as_series","sum_as_series","sum_as_series","sum_as_series","symmetric_difference","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_logical","to_ndarray","to_ndarray","to_owned","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","toggle","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_amortized_generic","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","type_id","union","unique","unique","unique","unique","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_as_series","var_as_series","var_as_series","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","width","with_chunk","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_option","append_option","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_value","append_value","append_value","append_value","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","fixed_size_list","from","from","from","from","from","from","from","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","init","init","init","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","into","into","into","into","list","new","new","new","new","new","new","new","new","new","new","new","new_with_values_type","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","StructIter","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","init","init","init","init","into","into","into","into","into_iter","into_iter","into_iter","into_iter","new","new","next","next","next","next","next_back","next_back","next_back","par","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","list","string","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","One","Reinterpret","SlicedArray","SortMultipleOptions","SortOptions","Zero","__clone_box","__clone_box","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast_unchecked","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","descending","descending","drop","drop","drop","eq","eq","eq","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","fmt","fmt","from","from","from","from","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","hash","hash","init","init","init","into","into","into","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","maintain_order","max","mean","median","min","min_max","multithreaded","multithreaded","n_unique","new","new","new_from_index","not_equal","not_equal_missing","nulls_last","nulls_last","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique","var","vzip","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_order_descending","with_order_descending","with_order_descendings","with_order_reversed","with_order_reversed","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_array","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","slice_sorted_non_null_and_offset","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_apply_fields","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","append","append","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref","as_ref","as_ref_dtype","as_slice","as_time_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","build_local","call_categorical_merge_operation","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast_time_unit","cast_time_unit","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","chunks","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","days","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","drain_iter_and_finish","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","field_by_name","fields","fields_mut","find","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_owned","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","full_null","full_null","get","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_categories","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_optional","get_rev_map","get_str","get_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash_impl","hour","hours","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_empty","is_empty","is_enum","is_enum","is_float","is_float","is_global","is_integer","is_integer","is_known","is_list","is_local","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter","iter_str","last","len","len","len","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","max_as_series","merge_dtypes","merge_map","microseconds","milliseconds","min_as_series","minute","minutes","month_end","month_end","month_start","month_start","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","name","name","name","name","nanosecond","nanoseconds","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","null_count","parse_from_str_slice","parse_from_str_slice","partial_cmp","partial_cmp","physical","precision","rechunk","ref_field","register_value","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","rename","round","round","rows_encode","same_src","scale","second","seconds","set_name","set_time_unit","set_time_unit","set_time_zone","size_hint","sort","sort_with","strftime","strftime","strftime","strict_cast","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","time_unit","time_unit","time_zone","to_arrow","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","total_null_count","truncate","truncate","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unnest","uses_lexical_ordering","value","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_validity_typed","zero","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","performance","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","constants","context","context_trace","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","feature_gated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_warning_function","init","init","init","into","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","lazy","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Date","Datetime","Duration","Float32","Float32","Float64","Float64","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Null","Null","Row","String","String","Struct","Time","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","Abs","Agg","AggExpr","AggGroups","AggregationContext","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","Any","Any","Any","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","Backward","BackwardFill","Base64Encode","BatchedCsvReader","BatchedParquetReader","Binary","Binary","Binary","Binary","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","BinaryExpr","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","Boolean","Boolean","Boolean","Boolean","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","Both","Bounds","BoundsIter","Brotli","BrotliLevel","C","Cache","Cast","CatIter","Categorical","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Cbrt","Ceil","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","ColumnNotFound","Columns","Columns","CommentPrefix","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","Count","Count","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","DataPoint","DataType","Date","Date","Date","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","Datetime","DatetimeArgs","DatetimeChunked","DatetimeMethods","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","Duration","Duration","Duration","Duration","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","Earliest","EndsWith","Enum","Enum","Eq","EqValidity","Exclude","Excluded","Explode","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","FieldRef","FieldsMapper","FieldsNameMapper","FileMetaData","FileMetaDataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","Filter","Find","First","First","First","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float","Float16","Float32","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","Forward","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","HashMap","Head","HexEncode","Higher","IDX_DTYPE","INTEGER_RE","IO","Idx","Idx","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","Implode","InProcessQuery","IndexColumn","IndexOfSchema","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8","Int8Chunked","Int8Type","Interpolate","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLastDistinct","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","Item","Join","Join","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","Last","Last","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","Left","Left","Left","Left","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","Linear","List","List","List","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","Literal","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","Max","Max","Max","MaxBound","MaxHorizontal","Mean","Mean","Mean","MeanHorizontal","Median","Median","MeltArgs","Microsecond","Microseconds","Midpoint","Millisecond","Milliseconds","Min","Min","Min","Min","MinBound","MinHorizontal","Minus","Mode","Modulus","Monday","Multi","Multiply","NULL","NUnique","NUnique","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","Nanoseconds","Native","Nearest","Nearest","Nearest","Necessary","Negate","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","None","None","None","Not","NotEq","NotEqValidity","Nth","Null","Null","Null","Null","Null","Null","Null","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","One","OneToMany","OneToOne","Operator","OptState","Or","Ordinal","Out","OutOfBounds","Outer","Output","Over","OwnedBatchedCsvReader","OwnedObject","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","PartitionedAggregation","PathIterator","Physical","Physical","PhysicalExpr","PhysicalIoHelper","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","Plus","PolarsArray","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsMonthEnd","PolarsMonthStart","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","PrimitiveChunkedBuilder","Quantile","Quantile","QuantileAggSeries","QuantileInterpolOptions","QuoteStyle","Raise","Raise","Random","Random","Range","Range","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Replace","Reshape","RevMapping","Reverse","Reverse","Right","Right","Right","Right","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Round","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","Saturday","Scalar","Scalar","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaFieldNotFound","SchemaMismatch","SchemaRef","SearchSortedSide","Second","Select","Selector","SerReader","SerWriter","SerializeOptions","Series","Series","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","Slice","Slice","Slice","Slice","SlicedArray","SlicedGroups","Snappy","Sort","Sort","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","Std","Std","Str","StrCat","String","String","String","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","Struct","Struct","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructNameSpace","StructOwned","SubPlan","Sum","Sum","SumHorizontal","Sunday","Tail","TakeChunked","TemporalExpr","TemporalMethods","Ternary","Then","Thursday","Time","Time","Time","Time32","Time64","TimeChunked","TimeMethods","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Tuesday","UInt16","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","UdfSchema","Uncompressed","Union","Union","UnionArgs","Unique","UniqueKeepStrategy","Unknown","Unknown","UnknownKind","UpperBound","Uppercase","UserDefinedFunction","Utf8","Utf8","Utf8View","ValueCounts","ValueIterT","ValueT","Var","Var","VarAggSeries","VecHash","Wednesday","When","Wildcard","Window","Window","WindowBound","WindowMapping","WindowType","Xor","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_outer_join","_collect_post_opt","_create_left_df_from_slice","_finish_left_join","_join_suffix_name","_left_join_from_series","_outer_join_from_series","_sum_as_series","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","abs","add","add","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","all","all_horizontal","allocator","allow_parallel","allow_parallel","allows_predicate_pushdown","allows_projection_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","append_null","append_opt_series","append_option","append_series","append_value","apply","apply","apply","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_min","arg_sort","arg_sort","arg_sort","arg_sort_by","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_where","args","arity","arr","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array","arrow_schema","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_expression","as_fd","as_list","as_partitioned_aggregator","as_ptr","as_raw_fd","as_ref","as_ref","as_ref_dtype","as_series","as_single_ptr","as_slice","as_stats_evaluator","as_stats_evaluator","as_string","as_struct","as_time","assume_init","assume_init","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","batched","batched","batched","batched","batched_borrowed","binary","binary","binary_expr","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","boxed","builder","cache","cache","cache","cache","call","call","call_categorical_merge_operation","call_udf","call_udf","call_unchecked","cancel","cast","cast","cast","cast","cast","cast","cast_all","cast_unchecked","cat","cat","cause","cbrt","ceil","ceil","center","century","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","check_sorted","check_sorted","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","clip","clip_max","clip_max","clip_min","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_inner","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","closed_window","cloud","cloud_options","cloud_options","cloud_options","cmp","cmp","coalesce","coalesce","coalesce","coalesce","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","compare","compression","compression","compute_schema","concat","concat","concat_expr","concat_impl","concat_impl","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","contains","contains","contains","contains","contains_chunked","contains_chunked","contains_literal","convert_inner_type","convert_to_unsigned_index","count","count","count_matches","count_matches_many","count_rows","create_enum_data_type","create_left_df_chunked","create_writer","create_writer","created_by","cross_join","cross_join","cross_join_dfs","cum_count","cum_count","cum_fold_exprs","cum_max","cum_max","cum_min","cum_min","cum_prod","cum_prod","cum_reduce_exprs","cum_sum","cum_sum","cumulative_eval","data_pagesize_limit","data_type","data_type","data_type","datatypes","date_format","date_ranges","datetime","datetime","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","day","day","day","days","days","days","days_only","ddof","ddof","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_arrays","default_join_ids","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","descending","descending","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","df","diagonal","diff","diff","diff","display","distinct_count","div","div","divide","dot","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","drop_nulls","dst_offset","dt","dt","dtype","dtype","dtype","dtype_col","dtype_cols","dtype_overwrite","duration","eager","eager","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_data_type","ensure_is_constant_duration","eol_char","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","evaluate","evaluate_io","evaluate_on_groups","evaluate_partitioned","every","exact","exclude","exclude_dtype","execute","explain","explode","explode","explode","explode_and_offsets","expr","expr","extend_constant","extension","extension","extract","extract","extract_all","extract_all_many","extract_groups","fast_explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","field","field","field_by_index","field_by_name","fields","fields","file_caching","file_caching","fill_nan","fill_nan","fill_null","fill_null","fill_null","fill_null_with_strategy","fill_null_with_values","filter","filter","filter","filter","filter","finalize","find","find_chunked","find_literal","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","finish_with_scan_ops","finishes_this_batch","first","first","first","first","fixed_size_list","flatten","float_precision","float_sorted_arg_max","float_type","floor","floor","floor_div","floor_div_series","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","fmt_str","fn_params","fn_params","fold_exprs","force_parallel","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","from_iter_trusted_length","from_iter_utf8_trusted_len","from_iter_values","from_par_iter","from_par_iter","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_type","from_vec","from_vec","from_zeroable_vec","full","full","full","full_null","full_null","fun","function_expr","function_with_options","gather","gather","gather_every","ge","get","get","get","get","get","get","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_at_index","get_at_index_mut","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","get_field","get_field","get_fields","get_fields_lens","get_full","get_metadata","get_mut","get_mut_unchecked","get_names","get_names","get_names","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_sequential_row_statistics","get_unchecked","get_unchecked","get_unchecked","glob","glob","glob","group_by","group_by_dynamic","group_by_dynamic","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","gt","gt","gt_eq","gt_eq","has_header","has_validity","has_validity","has_window_function","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_join_inner","hash_join_outer","head","head","head","hex_decode","hex_encode","hive_options","hor_str_concat","hour","hour","hour","hour","hours","hours","how","how","id_vars","idx","ignore_errors","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","include_bom","include_boundaries","include_header","include_header","increment_strong_count","increment_strong_count_in","index_cols","index_column","index_column","index_of","index_of","index_of","indexes_to_usizes","infer_file_schema","infer_schema_len","infer_schema_len","infer_schema_length","infer_schema_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_array","inner_join","inner_join","inner_mut","input_fields","insert_at_index","int_range","int_ranges","interpol","interpolate","interpolate","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_data","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_list_name_space","into_list_name_space","into_raw","into_reader_with_file_handle","into_series","into_series","into_thrift","into_vec","into_vec","into_vec","is_asof","is_between","is_between","is_cloud_url","is_compressed","is_constant_duration","is_empty","is_empty","is_empty","is_finished","is_finite","is_first_distinct","is_first_distinct","is_first_distinct","is_full_days","is_in","is_in","is_infinite","is_last_distinct","is_last_distinct","is_last_distinct","is_leap_year","is_leap_year","is_leap_year","is_literal","is_nan","is_not_nan","is_not_null","is_not_null","is_not_null","is_null","is_null","is_null","is_null","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_write_vectored","is_zero","iso_year","iso_year","iso_year","iter","iter","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","iter_paths","join","join","join","join","join_asof","join_asof_by","join_builder","join_literal","join_many","join_nulls","join_nulls","json_encode","keep","key_value_metadata","key_value_metadata","label","last","last","last","last","last","lazy","lazy","le","left_by","left_join","left_join","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","len","len","len","len","len","len","limit","limit","limit_reached","line_terminator","list","lit","lit","lit","lit","logical_and","logical_or","logical_plan","logical_plan","low_memory","low_memory","low_memory","low_memory","low_memory","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","lt","lt","lt_eq","lt_eq","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","max","max","max","max","max","max_as_series","max_as_series","max_value","mean","mean","mean","mean","mean","mean","median","median","median","median","median","median","median","median_as_series","median_as_series","melt","memory_map","memory_map","memory_mapped","merge","merge_dtypes","metadata","metadata","method","microsecond","microseconds","microseconds","millennium","milliseconds","milliseconds","min","min","min","min","min","min","min_as_series","min_as_series","min_max","min_periods","min_periods","min_periods","min_value","minute","minute","minute","minute","minutes","minutes","missing_is_null","mode","mode","month","month","month","month","month_end","month_start","months","months_only","mul","mul","mul","multiply","multithreaded","multithreaded","n_chunks","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_threads","n_threads","n_unique","n_unique","n_unique","n_unique","n_unique","name","name","name","name","name","name","nan_max","nan_min","nan_propagating_aggregate","nanosecond","nanosecond","nanosecond","nanoseconds","nanoseconds","nanoseconds","ne","needs_checks","neg","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_cyclic","new_empty","new_from_index","new_from_index","new_from_str","new_in","new_inserting_at_index","new_int_range","new_multi","new_null","new_paths","new_paths","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next","next_batches","next_batches","next_batches","nodes","nodes_owned","not","not","not_equal","not_equal_missing","nth","null","null","null","null","null_count","null_count","null_count","null_count","null_values","nulls_last","nulls_last","num_rows","num_rows","offset","offset","offset","offsets","on","optimize","options","or","ordinal","ordinal","ordinal_day","ordinal_year","otherwise","otherwise","outer_join","outer_join","output_schema","over","over_with_options","parallel","parallel","parallel","parse","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","parse_options","parsed_int","partial_cmp","partial_cmp","path","path","path","path","paths","paths","paths","period","period","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","predicate_pushdown","predicate_pushdown","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_as_series","product","profile","projection","projection_pushdown","projection_pushdown","provide","ptr_eq","quantile","quantile","quantile","quantile","quantile_as_series","quantile_as_series","quarter","quarter","quarter","queue","quote_char","quote_char","quote_style","raise_if_empty","rank","rank","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","rem","remainder","remove","rename","rename","rename","rename_fields","repeat","repeat_by","repeat_by","replace","replace","replace","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_time_zone","reshape","resolve_homedir","return_type","reverse","reverse","reverse","reverse","reverse","reverse","right_by","right_on","rolling","rolling","rolling","rolling_map","rolling_map","rolling_map","rolling_map_float","rolling_max","rolling_max","rolling_max_by","rolling_max_by","rolling_mean","rolling_mean","rolling_mean_by","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min","rolling_min_by","rolling_min_by","rolling_quantile","rolling_quantile","rolling_quantile_by","rolling_quantile_by","rolling_std","rolling_std","rolling_std_by","rolling_std_by","rolling_sum","rolling_sum","rolling_sum_by","rolling_sum_by","rolling_var","rolling_var","rolling_var_by","rolling_var_by","round","round","round","round_ms","round_ns","round_sig_figs","round_sig_figs","round_us","row_estimate","row_estimate","row_group_size","row_groups","row_index","row_index","row_index","row_index","row_index","row_index","row_index","rows_left","rows_right","same_type","same_type","sample_frac","sample_n","sample_size","scan","scan","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","scatter","scatter_single","scatter_with","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema_descr","schema_overwrite","search_sorted","second","second","second","second","seconds","seconds","seek","select","select_seq","separator","separator","serialize_options","series","set","set_dtype","set_dtype_at_index","set_low_memory","set_parallel","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_sorted_flag","set_validity","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_remove","shift_remove_index","shrink_dtype","shrink_to_fit","shrink_to_fit","shuffle","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_json","sink_parquet","skip_rows","skip_rows","skip_rows","skip_rows_after_header","slice","slice","slice","slice","slice","slice","slice","slice","slice_pushdown","slice_pushdown","slice_typed","slice_typed","slice_typed_unchecked","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","sort","sort","sort","sort","sort","sort","sort_by","sort_by_exprs","sort_with","sort_with","source","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","std","std","std","std","std","std_as_series","std_as_series","store","str","str_concat","str_head","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","streamable","streaming","streaming","strftime","strict","strict_cast","strings","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","strong_count","struct_","sub","sub","subtract","suffix","suffix","suffix","suffix","suffix_fields","sum","sum","sum","sum","sum","sum","sum_as_series","super_type","sync_update","tail","tail","tail","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked","take_validity","ternary_expr","then","then","time_format","time_ranges","time_unit","time_unit","time_zone","timestamp","to_alp","to_alp","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","to_dummies","to_field","to_field","to_integer","to_list","to_lowercase","to_lowercase","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_supertype","to_supertypes","to_titlecase","to_uppercase","to_uppercase","tolerance","tolerance_str","top_k","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","truncate_ms","truncate_no_offset_ms","truncate_no_offset_ns","truncate_no_offset_us","truncate_ns","truncate_ns","truncate_ragged_lines","truncate_us","truncate_us","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_thrift","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","try_new","try_new","try_new","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_serialize","try_unwrap","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","udf","unique","unique","unique","unique","unique","unique","unique_stable","unique_stable","unique_stable","unique_stable","unnest","unwrap","unwrap_or_clone","upper_bound","upsample","upsample_stable","use_statistics","use_statistics","use_statistics","utf8","validate","validation","validity","validity","value","value_counts","value_counts","value_name","value_unchecked","value_vars","values","values_iter","values_iter","var","var","var","var","var","var","var_as_series","var_as_series","variable_name","vec_hash","vec_hash_combine","version","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warn_if_unsorted","weak_count","week","week","week","weekday","weekday","weekday","weekday","weeks","weeks","weeks_only","weights","when","when","when","window_size","window_size","window_size","with","with_ambiguous","with_batch_size","with_batch_size","with_batch_size","with_cache","with_capacity","with_capacity","with_capacity","with_chunk_size","with_chunk_size","with_coalesce","with_column","with_column","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns_seq","with_comment_prefix","with_comment_prefix","with_compression","with_compression","with_compression","with_compression","with_compression","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","with_decimal_comma","with_dtype","with_dtype_overwrite","with_dtype_overwrite","with_encoding","with_encoding","with_eol_char","with_eol_char","with_extension","with_extension","with_float_precision","with_fractional_seconds","with_glob","with_has_header","with_has_header","with_hive_partition_columns","with_hms","with_hms","with_hour","with_hours","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_infer_schema_length","with_json_format","with_json_format","with_line_terminator","with_low_memory","with_low_memory","with_metadata","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","with_missing_is_null","with_month","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_threads","with_n_threads","with_nanoseconds","with_null_value","with_null_values","with_null_values","with_optimizations","with_parse_options","with_path","with_path","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_pl_flavor","with_pl_flavor","with_predicate","with_predicate_pushdown","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection_pushdown","with_quote_char","with_quote_char","with_quote_char","with_quote_style","with_raise_if_empty","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_group_size","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_same_dtype","with_sample_size","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_schema_overwrite","with_schema_overwrite","with_second","with_seconds","with_separator","with_separator","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows","with_skip_rows_after_header","with_skip_rows_after_header","with_slice_pushdown","with_statistics","with_streaming","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","with_truncate_ragged_lines","with_try_parse_dates","with_try_parse_dates","with_type_coercion","with_validity","with_validity","with_validity_typed","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_varint","write_vectored","xor","year","year","year","year","zip","zip_with","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","aggs","apply","args","by_column","cache_hits","contexts","df","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","offset","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","selection","slice","sort_options","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","output_type","partition_by","predicate","returns_scalar","right","sort_options","strict","truthy","decimals","digits","has_max","has_min","limit","limit","method","n","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","include_nulls","groups","rolling","data_type","high","low","error","error","msg","msg","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","day","days","fn_params","hour","hour","hours","is_leap_year","is_leap_year","iso_year","iso_year","microseconds","milliseconds","min_periods","minute","minute","minutes","month","month","nanosecond","nanosecond","nanoseconds","ordinal","ordinal","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","quarter","quarter","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","second","seconds","string","warn_if_unsorted","week","week","weekday","weekday","window_size","year","year","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","parse_bytes","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_from_with_unit","try_from_with_unit","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","from_str","from_untyped_config","hash","init","init","into","into","max_retries","options","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","max_retries","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_data_type","dtype","dtype","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","get_unchecked","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","new","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BinaryExpr","Boolean","BooleanFunction","Categorical","CategoricalFunction","Cbrt","Ceil","Clip","Coalesce","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Diff","DropNans","DropNulls","EndsWith","Explode","ExtendConstant","Extract","ExtractAll","ExtractGroups","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Interpolate","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","MinHorizontal","Mode","Negate","Not","NullCount","Pow","PowFunction","Random","Range","Rank","RepeatBy","Replace","Replace","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","RoundSF","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","SumHorizontal","Tail","TemporalExpr","Titlecase","ToDecimal","ToInteger","ToPhysical","Unique","UpperBound","Uppercase","ValueCounts","cat","pow","rolling","rolling_by","closed","ignore_nulls","ignore_nulls","decimals","digits","has_max","has_min","limit","limit","method","n","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","mode","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","Any","Left","Right","SearchSortedSide","binary_search_array","slice_sorted_non_null_and_offset","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","slice_typed","slice_typed_unchecked","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_concat","str_head","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","Ascending","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_sum_as_series","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","as_ref","as_series","as_series","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","categorical","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","date","datetime","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop_nulls","dtype","duration","eq","eq","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_object","get_object_chunked_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_sorted_flag","iter","len","limit","list","lit","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","max","max_as_series","mean","mean_as_series","median","median_as_series","min","min_as_series","mul","mul","mul","mul","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_as_series","rechunk","rem","rem","rem","rename","rename","reshape","reverse","reverse","rolling_map","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","std","std_as_series","str","str_value","strict_cast","struct_","sub","sub","sub","sub","sum","sum_as_series","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","time","to_arrow","to_dummies","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique_stable","unpack","unstable","var","var_as_series","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","add_to","checked","div","divide","divide","mul","multiply","multiply","rem","remainder","remainder","sub","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array"],"q":[[0,"polars"],[17,"polars::chunked_array"],[866,"polars::chunked_array::arithmetic"],[894,"polars::chunked_array::builder"],[1151,"polars::chunked_array::builder::list"],[1168,"polars::chunked_array::collect"],[1182,"polars::chunked_array::float"],[1184,"polars::chunked_array::from_iterator_par"],[1188,"polars::chunked_array::iterator"],[1258,"polars::chunked_array::iterator::par"],[1260,"polars::chunked_array::object"],[1331,"polars::chunked_array::object::builder"],[1354,"polars::chunked_array::object::registry"],[1382,"polars::chunked_array::ops"],[1580,"polars::chunked_array::ops::arity"],[1615,"polars::chunked_array::ops::float_sorted_arg_max"],[1617,"polars::chunked_array::ops::gather"],[1620,"polars::chunked_array::ops::search_sorted"],[1649,"polars::chunked_array::ops::sort"],[1656,"polars::chunked_array::ops::sort::arg_bottom_k"],[1657,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1664,"polars::chunked_array::ops::sort::options"],[1677,"polars::chunked_array::temporal"],[1684,"polars::chunked_array::temporal::conversion"],[1687,"polars::datatypes"],[3043,"polars::datatypes::categorical"],[3060,"polars::datatypes::categorical::revmap"],[3066,"polars::datatypes::categorical::string_cache"],[3085,"polars::docs"],[3088,"polars::error"],[3172,"polars::error::PolarsError"],[3176,"polars::error::constants"],[3179,"polars::frame"],[3432,"polars::frame::explode"],[3461,"polars::frame::group_by"],[3696,"polars::frame::group_by::GroupByMethod"],[3697,"polars::frame::group_by::GroupsProxy"],[3699,"polars::frame::group_by::aggregations"],[3712,"polars::frame::group_by::expr"],[3715,"polars::frame::row"],[3822,"polars::functions"],[3824,"polars::prelude"],[8727,"polars::prelude::AggExpr"],[8734,"polars::prelude::BooleanFunction"],[8737,"polars::prelude::DslPlan"],[8788,"polars::prelude::Expr"],[8822,"polars::prelude::FunctionExpr"],[8842,"polars::prelude::GroupByMethod"],[8843,"polars::prelude::GroupsProxy"],[8845,"polars::prelude::LiteralValue"],[8848,"polars::prelude::PolarsError"],[8852,"polars::prelude::StringFunction"],[8866,"polars::prelude::aggregations"],[8879,"polars::prelude::arity"],[8914,"polars::prelude::array"],[8933,"polars::prelude::binary"],[8949,"polars::prelude::cat"],[8950,"polars::prelude::chunkedarray"],[9018,"polars::prelude::chunkedarray::string"],[9056,"polars::prelude::chunkedarray::string::infer"],[9086,"polars::prelude::cloud"],[9133,"polars::prelude::cloud::options"],[9141,"polars::prelude::datatypes"],[9406,"polars::prelude::datatypes::categorical"],[9423,"polars::prelude::datatypes::categorical::revmap"],[9429,"polars::prelude::datatypes::categorical::string_cache"],[9433,"polars::prelude::datetime"],[9436,"polars::prelude::default_arrays"],[9442,"polars::prelude::dt"],[9494,"polars::prelude::expr"],[9497,"polars::prelude::fixed_size_list"],[9517,"polars::prelude::float_sorted_arg_max"],[9519,"polars::prelude::function_expr"],[9641,"polars::prelude::function_expr::BooleanFunction"],[9644,"polars::prelude::function_expr::FunctionExpr"],[9664,"polars::prelude::function_expr::StringFunction"],[9678,"polars::prelude::function_expr::cat"],[9680,"polars::prelude::function_expr::pow"],[9684,"polars::prelude::function_expr::rolling"],[9713,"polars::prelude::function_expr::rolling_by"],[9742,"polars::prelude::gather"],[9745,"polars::prelude::mode"],[9746,"polars::prelude::nan_propagating_aggregate"],[9750,"polars::prelude::null"],[9780,"polars::prelude::search_sorted"],[9786,"polars::prelude::series"],[9808,"polars::prelude::slice"],[9811,"polars::prelude::sort"],[9818,"polars::prelude::sort::arg_bottom_k"],[9819,"polars::prelude::sort::arg_sort_multiple"],[9826,"polars::prelude::sort::options"],[9839,"polars::prelude::strings"],[9893,"polars::prelude::udf"],[9899,"polars::prelude::utf8"],[9903,"polars::series"],[10304,"polars::series::arithmetic"],[10325,"polars::series::arithmetic::checked"],[10331,"polars::series::ops"],[10357,"polars::series::unstable"],[10381,"dyn_clone::sealed"],[10382,"polars_core::datatypes"],[10383,"polars_core::chunked_array"],[10384,"num_traits"],[10385,"num_traits::cast"],[10386,"polars_core::series"],[10387,"polars_error"],[10388,"core::result"],[10389,"polars_core::series::arithmetic::borrowed"],[10390,"polars_core::frame::group_by::proxy"],[10391,"polars_core::chunked_array::object"],[10392,"core::option"],[10393,"polars_arrow::array"],[10394,"alloc::boxed"],[10395,"core::iter::traits::iterator"],[10396,"polars_core::chunked_array::list::iterator"],[10397,"core::ops::function"],[10398,"core::marker"],[10399,"alloc::borrow"],[10400,"polars_core::series::unstable"],[10401,"polars_core::datatypes::dtype"],[10402,"alloc::string"],[10403,"polars_core::chunked_array::ops::sort::options"],[10404,"polars_core::series::arithmetic::borrowed::checked"],[10405,"core::slice::iter"],[10406,"core::iter::adapters::map"],[10407,"alloc::vec"],[10408,"core::iter::traits::double_ended"],[10409,"polars_arrow::offset"],[10410,"core::iter::traits::collect"],[10411,"core::fmt"],[10412,"polars_utils::iter::fallible"],[10413,"core::convert"],[10414,"polars_arrow::bitmap::immutable"],[10415,"polars_core::chunked_array::from_iterator"],[10416,"core::borrow"],[10417,"rayon::iter"],[10418,"polars_arrow::pushable"],[10419,"polars_arrow::trusted_len"],[10420,"polars_core::datatypes::any_value"],[10421,"polars_core::series::series_trait"],[10422,"polars_core::chunked_array::logical"],[10423,"polars_core::datatypes::time_unit"],[10424,"core::iter::traits::exact_size"],[10425,"polars_core::chunked_array::iterator"],[10426,"bitflags::iter"],[10427,"core::ops::range"],[10428,"polars_arrow::legacy::kernels::rolling::no_nulls"],[10429,"polars_core::datatypes::field"],[10430,"polars_core::chunked_array::ops::rolling_window"],[10431,"polars_ops::chunked_array::scatter"],[10432,"polars_utils::index"],[10433,"ahash::random_state"],[10434,"polars_utils::hashing"],[10435,"ndarray"],[10436,"ndarray::dimension::dim"],[10437,"ndarray::data_repr"],[10438,"either"],[10439,"core::any"],[10440,"polars_core::chunked_array::arithmetic::numeric"],[10441,"polars_core::chunked_array::builder::list::anonymous"],[10442,"polars_core::chunked_array::builder::list::boolean"],[10443,"polars_core::chunked_array::builder::list::primitive"],[10444,"polars_core::chunked_array::builder::list"],[10445,"polars_core::chunked_array::builder"],[10446,"polars_core::chunked_array::builder::list::binary"],[10447,"polars_core::chunked_array::builder::list::null"],[10448,"polars_core::chunked_array::builder::string"],[10449,"polars_arrow::array::binview"],[10450,"polars_core::chunked_array::builder::boolean"],[10451,"polars_core::chunked_array::builder::null"],[10452,"polars_core::chunked_array::builder::primitive"],[10453,"core::clone"],[10454,"polars_core::series::implementations::null"],[10455,"polars_core::chunked_array::collect"],[10456,"polars_core::chunked_array::float"],[10457,"polars_core::chunked_array::from_iterator_par"],[10458,"polars_arrow::array::boolean"],[10459,"polars_arrow::array::fixed_size_list"],[10460,"polars_arrow::datatypes"],[10461,"polars_arrow::bitmap::utils::iterator"],[10462,"polars_arrow::bitmap::utils::zip_validity"],[10463,"alloc::sync"],[10464,"polars_core::chunked_array::object::builder"],[10465,"polars_core::chunked_array::object::registry"],[10466,"polars_core::chunked_array::ops"],[10467,"core::hash"],[10468,"polars_arrow::legacy::array::slice"],[10469,"polars_core::chunked_array::ops::arity"],[10470,"polars_arrow::array::static_array"],[10471,"core::error"],[10472,"polars_arrow::array::primitive"],[10473,"polars_core::chunked_array::ops::search_sorted"],[10474,"polars_core::utils"],[10475,"polars_row::row"],[10476,"chrono::naive::datetime"],[10477,"chrono_tz::timezones"],[10478,"chrono::naive::time"],[10479,"polars_core::chunked_array::logical::struct_"],[10480,"polars_core::chunked_array::logical::categorical"],[10481,"polars_core::chunked_array::logical::categorical::builder"],[10482,"polars_arrow::array::static_array_collect"],[10483,"bytemuck::zeroable"],[10484,"polars_core::chunked_array::logical::categorical::revmap"],[10485,"polars_core::chunked_array::logical::categorical::merge"],[10486,"polars_arrow::types"],[10487,"polars_arrow::datatypes::physical_type"],[10488,"chrono::time_delta"],[10489,"chrono::naive::date"],[10490,"smartstring::config"],[10491,"smartstring"],[10492,"core::cmp"],[10493,"polars_time::windows::duration"],[10494,"polars_core::frame"],[10495,"polars_core::chunked_array::logical::categorical::string_cache"],[10496,"polars_error::warning"],[10497,"polars_parquet::parquet::error"],[10498,"regex::error"],[10499,"alloc::collections"],[10500,"std::io::error"],[10501,"simdutf8::basic"],[10502,"planus::errors"],[10503,"polars_core::schema"],[10504,"polars_core::series::from"],[10505,"hashbrown::set"],[10506,"polars_arrow::datatypes::schema"],[10507,"polars_core::frame::row"],[10508,"polars_core::frame::group_by"],[10509,"polars_time::group_by::dynamic"],[10510,"polars_lazy::frame"],[10511,"polars_core::frame::explode"],[10512,"polars_core::chunked_array::ndarray"],[10513,"polars_arrow::array::struct_"],[10514,"polars_arrow::record_batch"],[10515,"polars_utils::idx_vec"],[10516,"rayon::iter::plumbing"],[10517,"polars_plan::logical_plan::aexpr"],[10518,"polars_core::frame::group_by::into_groups"],[10519,"core::iter::adapters::copied"],[10520,"core::iter::adapters::zip"],[10521,"polars_utils::float"],[10522,"polars_arrow::types::native"],[10523,"polars_core::frame::group_by::aggregations::agg_list"],[10524,"polars_core::frame::group_by::aggregations"],[10525,"polars_core::frame::group_by::expr"],[10526,"polars_core::frame::row::av_buffer"],[10527,"polars_utils::arena"],[10528,"polars_plan::logical_plan::alp"],[10529,"polars_ops::frame::join::hash_join"],[10530,"polars_ops::frame::join::args"],[10531,"polars_ops::chunked_array::gather::chunked"],[10532,"polars_ops::frame"],[10533,"polars_io::csv::read::reader"],[10534,"polars_io::predicates"],[10535,"polars_io::mmap"],[10536,"polars_plan::dsl::expr"],[10537,"core::alloc"],[10538,"polars_plan::logical_plan::anonymous_scan"],[10539,"polars_lazy::scan::ndjson"],[10540,"polars_lazy::scan::anonymous_scan"],[10541,"polars_plan::dsl::expr_dyn_fn"],[10542,"polars_plan::logical_plan::visitor"],[10543,"polars_plan::dsl::function_expr"],[10544,"polars_ops::series::ops::arg_min_max"],[10545,"polars_plan::dsl::array"],[10546,"polars_plan::dsl::list"],[10547,"polars_io::ipc::ipc_stream"],[10548,"std::io"],[10549,"polars_ops::chunked_array::binary"],[10550,"polars_time::chunkedarray::string"],[10551,"polars_lazy::physical_plan::expressions"],[10552,"std::os::fd::owned"],[10553,"polars_ops::chunked_array::list"],[10554,"std::os::fd::raw"],[10555,"polars_ops::series::ops"],[10556,"polars_ops::chunked_array::strings"],[10557,"core::mem::maybe_uninit"],[10558,"polars_ops::chunked_array::strings::namespace"],[10559,"polars_io::csv::read::read_impl::batched"],[10560,"polars_io::csv::write::writer"],[10561,"polars_io::ipc::write"],[10562,"polars_io::parquet::read::reader"],[10563,"polars_io::parquet::read::read_impl"],[10564,"polars_io::parquet::write::writer"],[10565,"polars_io::parquet::write::batched_writer"],[10566,"polars_plan::dsl::binary"],[10567,"polars_plan::dsl::udf"],[10568,"polars_lazy::frame::exitable"],[10569,"hashbrown::map"],[10570,"polars_plan::dsl::cat"],[10571,"polars_ops::series::ops::round"],[10572,"polars_time::series"],[10573,"polars_time::chunkedarray::rolling_window"],[10574,"polars_time::windows::bounds"],[10575,"polars_time::windows::group_by"],[10576,"polars_time::windows::window"],[10577,"polars_io::csv::read::options"],[10578,"polars_io::csv::write::options"],[10579,"polars_io::ipc::ipc_file"],[10580,"polars_ops::chunked_array::interpolate"],[10581,"polars_io::json"],[10582,"polars_io::parquet::read::options"],[10583,"polars_io::parquet::write::options"],[10584,"polars_ops::frame::join::asof"],[10585,"polars_ops::series::ops::is_between"],[10586,"polars_lazy::scan::csv"],[10587,"polars_ops::series::ops::rank"],[10588,"polars_lazy::scan::ipc"],[10589,"polars_lazy::scan::parquet"],[10590,"polars_plan::logical_plan"],[10591,"polars_plan::dsl::arity"],[10592,"polars_plan::dsl::function_expr::boolean"],[10593,"polars_plan::dsl::function_expr::cat"],[10594,"polars_plan::dsl::function_expr::pow"],[10595,"polars_plan::dsl::function_expr::strings"],[10596,"polars_plan::dsl::functions::temporal"],[10597,"polars_plan::dsl::options"],[10598,"polars_plan::frame::opt_state"],[10599,"polars_plan::logical_plan::lit"],[10600,"polars_plan::logical_plan::options"],[10601,"polars_parquet::parquet::metadata::file_metadata"],[10602,"polars_arrow::legacy::kernels::rolling"],[10603,"polars_arrow::legacy::kernels::time"],[10604,"polars_lazy::scan::file_list_reader"],[10605,"polars_io::cloud::options"],[10606,"polars_parquet::parquet::metadata::column_order"],[10607,"polars_ops::chunked_array::binary::namespace"],[10608,"std::path"],[10609,"polars_io::shared"],[10610,"polars_ops::frame::join::cross_join"],[10611,"polars_lazy::dsl::eval"],[10612,"polars_time::chunkedarray::date"],[10613,"polars_time::chunkedarray::datetime"],[10614,"polars_time::chunkedarray::duration"],[10615,"core::default"],[10616,"polars_parquet::parquet::metadata::row_metadata"],[10617,"polars_core::series::ops"],[10618,"polars_plan::dsl::dt"],[10619,"polars_arrow::scalar"],[10620,"polars_lazy::dsl::list"],[10621,"polars_lazy::physical_plan::state"],[10622,"crossterm::command"],[10623,"polars_plan::dsl::struct_"],[10624,"polars_io::ndjson::core"],[10625,"std::fs"],[10626,"polars_plan::logical_plan::apply"],[10627,"polars_plan::dsl::function_expr::list"],[10628,"polars_plan::dsl::function_expr::array"],[10629,"polars_plan::dsl::function_expr::range"],[10630,"polars_plan::dsl::function_expr::binary"],[10631,"polars_plan::dsl::function_expr::datetime"],[10632,"polars_plan::dsl::function_expr::struct_"],[10633,"std::ffi::os_str"],[10634,"core::ffi::c_str"],[10635,"alloc::ffi::c_str"],[10636,"polars_parquet::arrow::read::statistics"],[10637,"polars_arrow::array::growable::structure"],[10638,"polars_arrow::array::struct_::mutable"],[10639,"polars_arrow::legacy::array::default_arrays"],[10640,"polars_arrow::buffer::immutable"],[10641,"polars_arrow::array::list"],[10642,"polars_core::named_from"],[10643,"polars_plan::dsl::function_expr::schema"],[10644,"polars_arrow::legacy::array"],[10645,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[10646,"polars_time::chunkedarray::time"],[10647,"polars_ops::frame::join"],[10648,"parquet_format_safe::parquet_format"],[10649,"polars_ops::series::ops::various"],[10650,"polars_arrow::array::struct_::iterator"],[10651,"polars_ops::frame::join::asof::groups"],[10652,"polars_ops::chunked_array::list::namespace"],[10653,"polars_plan::dsl::name"],[10654,"polars_io::options"],[10655,"polars_core::chunked_array::ops::aggregate"],[10656,"polars_core::chunked_array::ops::aggregate::quantile"],[10657,"polars_time::month_end"],[10658,"polars_time::month_start"],[10659,"polars_arrow::legacy::index"],[10660,"polars_ops::chunked_array::strings::split"],[10661,"core::pin"],[10662,"core::io::borrowed_buf"],[10663,"parquet_format_safe::thrift::varint::decode"],[10664,"polars_time::chunkedarray::rolling_window::dispatch"],[10665,"polars_time::round"],[10666,"polars_parquet::parquet::metadata::schema_descriptor"],[10667,"polars_core::chunked_array::ops::aggregate::var"],[10668,"polars_plan::dsl::string"],[10669,"polars_ops::series::ops::to_dummies"],[10670,"polars_time::truncate"],[10671,"std::sync::rwlock"],[10672,"polars_time::upsample"],[10673,"polars_core::hashing::vector_hasher"],[10674,"core::num::nonzero"],[10675,"alloc::collections::btree::map"],[10676,"polars_ops::chunked_array::array::namespace"],[10677,"polars_ops::chunked_array::array"],[10678,"polars_time::chunkedarray::string::patterns"],[10679,"polars_time::chunkedarray::string::infer"],[10680,"polars_arrow::legacy::array::fixed_size_list"],[10681,"polars_plan::dsl::function_expr::rolling"],[10682,"polars_plan::dsl::function_expr::rolling_by"],[10683,"polars_arrow::legacy::array::null"],[10684,"polars_arrow::bitmap::mutable"],[10685,"polars_arrow::array::utf8"],[10686,"polars_arrow::array::binary"],[10687,"polars_core::series::iterator"],[10688,"polars_core"],[10689,"polars_core::chunked_array::iterator::par"],[10690,"polars_core::chunked_array::ops::float_sorted_arg_max"],[10691,"polars_core::chunked_array::ops::gather"],[10692,"polars_core::chunked_array::ops::sort"],[10693,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[10694,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[10695,"polars_core::chunked_array::temporal"],[10696,"polars_core::chunked_array::temporal::conversion"],[10697,"polars_core::chunked_array::temporal::time"],[10698,"polars_core::chunked_array::logical::date"],[10699,"polars_core::chunked_array::logical::datetime"],[10700,"polars_core::chunked_array::logical::decimal"],[10701,"polars_core::chunked_array::logical::duration"],[10702,"polars_core::datatypes::aliases"],[10703,"polars_utils::aliases"],[10704,"polars_core::chunked_array::logical::time"],[10705,"polars_error::constants"],[10706,"polars_core::functions"],[10707,"polars_io::utils"],[10708,"polars_io::parquet::metadata"],[10709,"polars_arrow::legacy::prelude"],[10710,"polars_ops::series::ops::rolling"],[10711,"polars_parquet::parquet::write"],[10712,"polars_ops::frame::join::general"],[10713,"polars_ops::series::ops::abs"],[10714,"polars_plan::dsl::functions::selectors"],[10715,"polars_plan::dsl::functions::horizontal"],[10716,"polars_plan::dsl::functions::arity"],[10717,"polars_plan::dsl"],[10718,"polars_plan::dsl::functions::range"],[10719,"polars_plan::dsl::functions::index"],[10720,"polars_ops::chunked_array"],[10721,"polars_plan::dsl::functions::coerce"],[10722,"polars_plan::dsl::functions::syntactic_sugar"],[10723,"polars_time::base_utc_offset"],[10724,"polars_time"],[10725,"polars_ops::series::ops::clip"],[10726,"polars_io"],[10727,"polars_ops::series::ops::horizontal"],[10728,"polars_lazy::dsl::functions"],[10729,"polars_plan::dsl::functions::concat"],[10730,"polars_ops::series::ops::index"],[10731,"polars_io::csv::read::parser"],[10732,"polars_ops::series::ops::cum_agg"],[10733,"polars_ops::series::ops::diff"],[10734,"polars_time::dst_offset"],[10735,"polars_ops::series::ops::floor_divide"],[10736,"polars_ops::chunked_array::strings::concat"],[10737,"polars_ops::chunked_array::datetime::replace_time_zone"],[10738,"polars_time::date_range"],[10739,"polars_io::csv::read::utils"],[10740,"polars_ops::series::ops::is_first_distinct"],[10741,"polars_ops::series::ops::is_in"],[10742,"polars_ops::series::ops::is_last_distinct"],[10743,"polars_io::parquet::read::utils"],[10744,"polars_ops::series::ops::negate"],[10745,"polars_ops::series::ops::not"],[10746,"polars_ops::series::ops::int_range"],[10747,"polars_plan::dsl::functions::repeat"],[10748,"polars_ops::chunked_array::repeat_by"],[10749,"polars_ops::series::ops::replace"],[10750,"polars_ops::chunked_array::strings::strip"],[10751,"polars_time::chunkedarray"],[10752,"polars_io::cloud"],[10753,"polars_ops::chunked_array::mode"],[10754,"polars_ops::chunked_array::nan_propagating_aggregate"],[10755,"polars_arrow::legacy::array::utf8"]],"if":"``````{{}b}`````````{{}d}```````````{{{f{c}}h}b{}}0{{{f{{l{j}}}}}d}{{{f{{l{n}}}}{f{{l{n}}}}}}{{{l{c}}e}{}A`{AbAd}}{{{f{{l{Af}}}}{f{{l{Af}}}}}}{{{l{Ah}}{l{Ah}}}}{{{f{{l{Ah}}}}{f{{Al{Aj}}}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}}{{{l{Af}}{l{Af}}}}{{{l{n}}{l{n}}}}{{{f{{l{c}}}}e}{}A`{AbAd}}{{{f{{l{n}}}}{f{An}}}}{{{l{c}}{l{c}}}{}A`}{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{Bh}}}}{f{Bj}}}B`}{{{f{{l{{Bl{c}}}}}}{f{Bj}}}B`Bn}{{{f{{l{n}}}}{f{Bj}}}B`}{{{f{{l{j}}}}{f{Bj}}}B`}{{{f{{l{Ah}}}}{f{Bj}}}B`}{{{f{{l{Af}}}}{f{Bj}}}B`}{{{f{{l{c}}}}{f{Bj}}}B`A`}{{{f{{l{Af}}}}}d}{{}C`}{{{f{{l{Af}}}}}{{Cb{d}}}}{{{f{{l{j}}}}}{{Cl{{`{{Cj{}{{Cd{{Cb{{Ch{Cf}}}}}}}}}}}}}}{{{f{{l{Bh}}}}}{{Cl{{`{{Cj{}{{Cd{{Cb{{Ch{Cf}}}}}}}}}}}}}}{{{f{{l{j}}}}{f{An}}}{{Cl{{`{{Cj{}{{Cd{{Cb{{Ch{Cf}}}}}}}}}}}}}}{{{f{{l{Bh}}}}{f{An}}}{{Cl{{`{{Cj{}{{Cd{{Cb{{Ch{Cf}}}}}}}}}}}}}}64{{{f{Cn{l{c}}}}{f{{l{c}}}}}b{{Dd{}{{D`{Db}}}}}}{{{f{{l{j}}}}c}{{l{j}}}{{Dh{{Cb{B`}}}{{Df{{Cb{B`}}}}}}Dj}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Dh{Cb}{{Df{Cb}}}}Dj}}{{{f{{l{{Bl{c}}}}}}e}{{l{{Bl{c}}}}}Bn{{Dh{{Cb{{f{c}}}}}{{Df{{Cb{c}}}}}}Dj}}{{{f{{l{n}}}}c}{{l{n}}}{{Dh{{Cb{{f{An}}}}}{{Df{{Cb{{Dl{An}}}}}}}}Dj}}{{{f{{l{Af}}}}c}{{l{Af}}}{{Dh{{Cb{d}}}{{Df{{Cb{d}}}}}}Dj}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dh{{Cb{{f{{Al{Aj}}}}}}}{{Df{{Cb{{Dl{{Al{Aj}}}}}}}}}}Dj}}{{{f{{l{j}}}}c}{{l{j}}}{{E`{Dn}{{Df{B`}}}}}}{{{f{{l{Bh}}}}e}{{l{g}}}{}{{E`{{Cb{Dn}}}{{Df{{Cb{c}}}}}}Dj}Dd}{{{f{{l{j}}}}e}{{l{g}}}{}{{E`{{Cb{Dn}}}{{Df{{Cb{c}}}}}}Dj}Dd}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{E`{Dn}{{Df{B`}}}}}}{{{f{{l{Eb}}}}c}B`{{Dh{{f{B`}}}{{Df{B`}}}}}}{{{f{{l{Ed}}}}c}B`{{Dh{{f{B`}}}{{Df{B`}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dd{}{{E`{Cb}{{Df{{Cb{e}}}}}}}Dd}{{{l{c}}e}{{l{c}}}A`{{Dh{}{{Df{}}}}Dj}}{{{f{{l{c}}}}{f{Dh}}}{{l{c}}}A`}{{{f{{l{Ah}}}}{f{Dh}}}{{l{Ah}}}}{{{f{{l{Af}}}}{f{Dh}}}{{l{Af}}}}{{{f{{l{n}}}}{f{Dh}}}{{l{n}}}}{{{f{{l{Af}}}}{f{Dh}}}{{l{c}}}Dd}{{{f{{l{c}}}}{f{Dh}}}{{l{e}}}A`Dd}{{{f{{l{n}}}}{f{Dh}}}{{l{c}}}Dd}{{{f{{l{Ah}}}}{f{Dh}}}{{l{c}}}Dd}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{E`{{f{{Al{Aj}}}}}{{Df{{f{{Al{Aj}}}}}}}}}}{{{f{Cn{l{c}}}}e}bA`{{Dh{}{{Df{}}}}Dj}}{{{f{{l{n}}}}c}{{l{n}}}{{E`{{f{An}}}{{Df{{f{An}}}}}}}}{{{f{{l{c}}}}Efg}{{l{i}}}Dd{}{{E`{}{{Df{e}}}}}Dd}{{{f{{l{n}}}}c}{{l{n}}}{{E`{{f{An}}{f{CnEh}}}}}}{{{f{{l{j}}}}{f{Dh}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{Bh}}}}{f{Dh}}}{{Bd{{l{Bh}}Bb}}}}{{{f{{l{Ah}}}}e{f{Cn{Al{c}}}}}b{}{{Dh{{Cb{{f{{Al{Aj}}}}}}{f{c}}}{{Df{c}}}}}}{{{f{{l{{Bl{c}}}}}}g{f{Cn{Al{e}}}}}bBn{}{{Dh{{Cb{{f{c}}}}{f{e}}}{{Df{e}}}}}}{{{f{{l{Af}}}}e{f{Cn{Al{c}}}}}b{}{{Dh{{Cb{d}}{f{c}}}{{Df{c}}}}}}{{{f{{l{n}}}}e{f{Cn{Al{c}}}}}b{}{{Dh{{Cb{{f{An}}}}{f{c}}}{{Df{c}}}}}}{{{f{{l{j}}}}e{f{Cn{Al{c}}}}}b{}{{Dh{{Cb{B`}}{f{c}}}{{Df{c}}}}}}{{{f{{l{c}}}}g{f{Cn{Al{e}}}}}bA`{}{{Dh{Cb{f{e}}}{{Df{e}}}}}}{{{f{{l{n}}}}c}{{l{n}}}{{Dh{{f{An}}}{{Df{{Dl{An}}}}}}Dj}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dh{{f{{Al{Aj}}}}}{{Df{{Dl{{Al{Aj}}}}}}}}Dj}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Dh{}{{Df{}}}}Dj}}{{{f{{l{Af}}}}c}{{l{Af}}}{{Dh{d}{{Df{d}}}}Dj}}{{{f{{l{j}}}}c}{{l{j}}}{{Dh{B`}{{Df{B`}}}}Dj}}{{{f{{l{{Bl{c}}}}}}e}{{l{{Bl{c}}}}}Bn{{Dh{{f{c}}}{{Df{c}}}}Dj}}{{{f{{l{c}}}}g}{{l{i}}}Dd{}{{E`{}{{Df{e}}}}}Dd}{{{f{{l{n}}}}Ej}{{l{El}}}}{{{f{{l{En}}}}Ej}{{l{El}}}}{{{f{{l{Af}}}}Ej}{{l{El}}}}{{{f{{l{Ah}}}}Ej}{{l{El}}}}{{{f{{l{c}}}}Ej}{{l{El}}}A`}{{{f{{l{n}}}}{f{{Al{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{c}}}}{f{{Al{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}A`}{{{f{{l{En}}}}{f{{Al{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{Af}}}}{f{{Al{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{Ah}}}}{f{{Al{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{{Bl{c}}}}}}}{{Bd{{l{El}}Bb}}}Bn}{{{f{{l{c}}}}}{{Bd{{l{El}}Bb}}}A`}{{{f{{l{n}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{Ah}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{Af}}}}}{{Bd{{l{El}}Bb}}}}`{{{f{{l{Bh}}}}}{{f{{l{Bh}}}}}}{{{f{{l{n}}}}}{{l{Ah}}}}{{{f{{l{Ah}}}}}{{f{{l{Ah}}}}}}{{{f{{l{j}}}}}{{f{{l{j}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Dd}{{{f{{l{c}}}}}{{f{Ef}}}Dd}{{{f{{l{n}}}}}{{f{{l{n}}}}}}0{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}DdDd{{E`{{Cb{Dn}}CbCb}{{Df{{Cb{B`}}}}}}}}{{{l{Af}}{l{Af}}}}{{{f{{l{Af}}}}{f{{l{Af}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Fb}{{C`C`}C`}{{{f{CnC`}}C`}b}23410{{{f{C`}}}Aj}043521{{{f{c}}}{{f{e}}}{}{}}00{{{f{Cnc}}}{{f{Cne}}}{}{}}00``{{{f{{l{n}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{j}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{Af}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{Ah}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{Ef}}}{{Bd{B`Bb}}}A`}{{{f{{l{En}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{Bh}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}e}{{l{g}}}A`{{Dh{}{{Df{}}}}Dj}A`}7564123{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Fd}{{{f{{l{c}}}}e}{{Bd{B`Bb}}}FdAd}{{{f{{l{c}}}}}{{Fl{{Ff{{Ch{Cf}}}}{Fj{{f{{Ch{Cf}}}}}{{Df{Fh}}}}}}}Dd}{{{f{{l{c}}}}}{{f{{Fn{{Ch{Cf}}}}}}}Dd}{{{f{Cn{l{c}}}}}{{f{Cn{Fn{{Ch{Cf}}}}}}}Dd}{{{f{{l{c}}}}}{{l{c}}}Dd}0{{{f{C`}}}C`}{{{f{c}}{f{Cne}}}b{}{}}0``{C`C`}{{{f{{l{c}}}}}{{Bd{{f{Al}}Bb}}}A`}{{{f{C`}}C`}d}{{{f{{l{c}}}}}{{`{G`}}}A`}{{}{{l{c}}}Dd}{{}C`}{Fh{{f{c}}}{}}00{Fh{{f{Cnc}}}{}}00{{C`C`}C`}{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}{{{l{c}}e}{}A`{AbAd}}{{{f{{l{c}}}}e}{}A`{AbAd}}{{{l{c}}{l{c}}}{}A`}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{Cn{l{c}}}}}bDd}{Fhb}00{{{f{{l{c}}}}}{{f{Ef}}}Dd};{{{f{C`}}{f{C`}}}d}{{{f{{l{Af}}}}{f{{l{Af}}}}}{{l{Af}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Af}}}}{{{f{{l{n}}}}{f{An}}}{{l{Af}}}}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{Af}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Af}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Af}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Af}}}A`}{{{f{{l{Ah}}}}{f{{Al{Aj}}}}}{{l{Af}}}}{{{f{{l{c}}}}e}{{l{Af}}}A`Ad}143526807{{{f{{l{j}}}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}{{{f{{l{n}}}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}{{{f{{l{Bh}}}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}{{{f{Cn{l{c}}}}{f{{l{c}}}}}bA`}{{{f{CnC`}}c}b{{Gh{}{{Cd{C`}}}}}}{{{f{{l{Af}}}}d}{{Bd{{l{Af}}Bb}}}}{{{f{{l{Ah}}}}{f{{Al{Aj}}}}}{{Bd{{l{Ah}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}A`}{{{f{{l{Ah}}}}{f{{l{Af}}}}}{{Bd{{l{Ah}}Bb}}}}{{{f{{l{n}}}}{f{{l{Af}}}}}{{Bd{{l{n}}Bb}}}}{{{f{{l{Bh}}}}{f{{l{Af}}}}}{{Bd{{l{Bh}}Bb}}}}{{{f{{l{En}}}}{f{{l{Af}}}}}{{Bd{{l{En}}Bb}}}}{{{f{{l{Af}}}}{f{{l{Af}}}}}{{Bd{{l{Af}}Bb}}}}{{{f{{l{j}}}}{f{{l{Af}}}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{c}}}}{f{{l{Af}}}}}{{Bd{{l{c}}Bb}}}A`}{{{f{{l{{Bl{c}}}}}}{f{{l{Af}}}}}{{Bd{{l{{Bl{c}}}}Bb}}}Bn}{{{f{{l{c}}}}}{{Cb{Fh}}}Dd}`{{{f{{l{Bh}}}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{l{{Bl{c}}}}}}{f{CnGj}}}{{Bd{bGl}}}Bn}{{{f{{l{j}}}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{l{n}}}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{l{Af}}}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{l{Ah}}}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{l{c}}}}{f{CnGj}}}{{Bd{bGl}}}A`}{{{f{C`}}{f{CnGj}}}{{Bd{bGl}}}}0000{{{f{{l{c}}}}e}bDd{{E`{Cb}}}}{{{f{{l{j}}}}c}b{{E`{{Cb{Dn}}}}}}{{{f{{l{Bh}}}}c}b{{E`{{Cb{Dn}}}}}}{c{{l{e}}}Cf{{Dd{}{{Gn{c}}}}}}{cc{}}00{Aj{{Cb{C`}}}}{AjC`}00{{{f{An}}c}{{l{e}}}Gh{{Dd{}{{Gn{}}}}Dd}}{{{f{{l{c}}}}e}{{l{c}}}{{Dd{}{{Gn{}}}}Dd}Gh}{{{f{An}}{Fn{{Ch{Cf}}}}}{{l{c}}}Dd}{{{f{An}}{Fn{{Ch{Cf}}}}Ef}{{l{c}}}Dd}{g{{Bd{ic}}}{}{}{{H`{c}{{Cd{e}}}}}{}}0{e{{l{Ah}}}{{Hb{{Al{Aj}}}}}{{Gh{}{{Cd{{Cb{c}}}}}}}}{c{{l{j}}}{{Gh{}{{Cd{{Cb{{Ch{Cf}}}}}}}}}}{c{{l{j}}}{{Gh{}{{Cd{{Cb{B`}}}}}}}}{c{{l{e}}}{{Gh{}{{Cd{{Gf{Fn{Cb{Hd}}}}}}}}}A`}{e{{l{n}}}{{Hf{An}}}{{Gh{}{{Cd{c}}}}}}{e{{l{j}}}{{Hh{B`}}}{{Gh{}{{Cd{c}}}}}}{e{{l{{Bl{c}}}}}Bn{{Gh{}{{Cd{{Cb{c}}}}}}}}{e{{l{n}}}{{Hb{An}}}{{Gh{}{{Cd{{Cb{c}}}}}}}}{e{{l{Ah}}}{{Hf{{Al{Aj}}}}}{{Gh{}{{Cd{c}}}}}}{c{{l{Af}}}{{Gh{}{{Cd{d}}}}}}{c{{l{Af}}}{{Gh{}{{Cd{{Cb{d}}}}}}}}{c{{l{e}}}{{Gh{}{{Cd{Cb}}}}}A`}{cC`{{Gh{}{{Cd{C`}}}}}}{{{f{An}}c}{{l{Af}}}{{Cj{}{{Cd{{Cb{d}}}}}}}}{{{f{An}}e}{{l{n}}}{{Hb{An}}}{{Cj{}{{Cd{{Cb{c}}}}}}}}{{{f{An}}e}{{l{{Bl{c}}}}}Bn{{Cj{}{{Cd{{Cb{c}}}}}}}}{{{f{An}}c}{{l{e}}}{{Cj{}{{Cd{Cb}}}}}A`}{{{f{An}}e}{{l{Ah}}}{{Hb{{Al{Aj}}}}}{{Cj{}{{Cd{{Cb{c}}}}}}}}7{e{{l{En}}}{{Hf{{Al{Aj}}}}}{{Gh{}{{Cd{c}}}}}}{e{{l{En}}}{{Hb{{Al{Aj}}}}}{{Gh{}{{Cd{{Cb{c}}}}}}}}8:<{c{{l{j}}}{{Gh{}{{Cd{{Cb{B`}}}}}}}}{e{{l{Ah}}}{{Hb{{Al{Aj}}}}}{{Gh{}{{Cd{{Cb{c}}}}}}}}={e{{l{j}}}{{Hh{B`}}}{{Gh{}{{Cd{c}}}}}}{e{{l{n}}}{{Hf{An}}}{{Gh{}{{Cd{c}}}}}}{e{{l{{Bl{c}}}}}Bn{{Gh{}{{Cd{{Cb{c}}}}}}}}{{{f{An}}c}{{l{e}}}{{Cj{}{{Cd{}}}}}A`}{{{f{An}}c}{{l{Af}}}{{Cj{}{{Cd{d}}}}}}{{{f{An}}e}{{l{{Bl{c}}}}}Bn{{Cj{}{{Cd{c}}}}}}{{{f{An}}e}{{l{Ah}}}{{Hb{{Al{Aj}}}}}{{Cj{}{{Cd{c}}}}}}{{{f{An}}e}{{l{n}}}{{Hb{An}}}{{Cj{}{{Cd{c}}}}}}`{{{f{An}}}{{Cb{C`}}}}{e{{l{Ah}}}{{Hb{{Al{Aj}}}}HjHl}{{Hn{}{{Cd{{Cb{c}}}}}}}}{c{{l{e}}}{{Hn{}{{Cd{Cb}}}}}A`}{c{{l{Af}}}{{Hn{}{{Cd{{Cb{d}}}}}}}}{c{{l{j}}}{{Hn{}{{Cd{{Cb{B`}}}}}}}}{e{{l{n}}}{{Hb{An}}HjHl}{{Hn{}{{Cd{{Cb{c}}}}}}}}{e{{l{n}}}{{Hf{An}}HjHlI`}{{Hn{}{{Cd{c}}}}}}{c{{l{Af}}}{{Hn{}{{Cd{d}}}}}}{e{{l{Ah}}}{{Hf{{Al{Aj}}}}HjHlI`}{{Hn{}{{Cd{c}}}}}}{{c{f{An}}Ef}{{l{j}}}{{Hn{}{{Cd{{Cb{B`}}}}}}}}{{{f{An}}{f{{Al{c}}}}}{{l{n}}}{{Hb{An}}}}{{{f{An}}{f{{Al{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{An}}{f{{Al{d}}}}}{{l{Af}}}}{{{f{An}}{f{Al}}}{{l{c}}}A`}{{{f{An}}{f{{Al{c}}}}}{{l{Ah}}}{{Hb{{Al{Aj}}}}}}{{{f{An}}{f{{Al{{Cb{c}}}}}}}{{l{Ah}}}{{Hb{{Al{Aj}}}}}}{{{f{An}}{f{{Al{{Cb{c}}}}}}}{{l{n}}}{{Hb{An}}}}{{{f{An}}{f{{Al{{Cb{d}}}}}}}{{l{Af}}}}{{{f{An}}{f{{Al{Cb}}}}}{{l{c}}}A`}{{{f{An}}{f{{Al{{Cb{c}}}}}}}{{l{{Bl{c}}}}}Bn}{c{{l{Af}}}{{Ib{}{{Cd{{Cb{d}}}}}}}}{c{{l{e}}}{{Ib{}{{Cd{Cb}}}}}A`}{{{f{An}}Fn}{{l{c}}}A`}{{{f{An}}Fn{Cb{Hd}}}{{l{c}}}A`}{{{f{An}}cFh}{{l{{Bl{c}}}}}Bn}{{{f{An}}Fh}{{l{c}}}A`}{{{f{An}}{f{{Al{Aj}}}}Fh}{{l{Ah}}}}{{{f{An}}{f{B`}}Fh}{{l{j}}}}{{{f{An}}{f{{Al{Aj}}}}Fh}{{l{En}}}}{{{f{An}}{f{B`}}Fh}{{l{Bh}}}}{{{f{An}}dFh}{{l{Af}}}}{{{f{An}}{f{An}}Fh}{{l{n}}}}{{{f{An}}Fh}{{l{Ah}}}}{{{f{An}}Fh}{{l{En}}}}{{{f{An}}Fh}{{l{Af}}}}{{{f{An}}Fh}{{l{{Bl{c}}}}}Bn}:{{{f{An}}Fh}{{l{n}}}}{{{f{An}}Fh}{{l{j}}}}{{{f{An}}Fh}{{l{Bh}}}}{{{f{{l{c}}}}Fh}{{l{c}}}Dd}{{{f{An}}Fh{f{Ef}}}{{l{j}}}}{{{f{An}}Fh{f{Ef}}Fh}{{l{Bh}}}}{{{f{{l{c}}}}Fh}CbDd}{{{f{{l{n}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{{Bl{c}}}}}}Fh}{{Bd{IdBb}}}Bn}{{{f{{l{Bh}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{Ah}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{En}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{j}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{c}}}}Fh}{{Bd{IdBb}}}A`}{{{f{{l{Af}}}}Fh}{{Bd{IdBb}}}}{{{f{{l{En}}}}Fh}Id}{{{f{{l{j}}}}Fh}Id}{{{f{{l{{Bl{c}}}}}}Fh}IdBn}{{{f{{l{c}}}}Fh}IdA`}{{{f{{l{Bh}}}}Fh}Id}{{{f{{l{Ah}}}}Fh}Id}{{{f{{l{Af}}}}Fh}Id}{{{f{{l{n}}}}Fh}Id}{{{f{{l{Bh}}}}Fh}{{Cb{B`}}}}{{{f{{l{j}}}}Fh}{{Cb{B`}}}}{{{f{{l{c}}}}}C`Dd}{{{f{{l{j}}}}}B`}{{{f{{l{Bh}}}}}B`}{{{f{{l{{Bl{c}}}}}}Fh}{{Cb{{f{If}}}}}Bn}0{{{f{C`}}}Ih}{{{f{{l{c}}}}Fh}CbDd}{{{f{{l{En}}}}}Fh}{{{f{{l{j}}}}}Fh}{{{f{{l{Bh}}}}}Fh}{{{f{{l{n}}}}}Fh}{{{f{{l{c}}}}dd}{{Bd{BjBb}}}A`}{{{f{{l{n}}}}dd}{{Bd{BjBb}}}}{{{f{{l{Af}}}}dd}{{Bd{BjBb}}}}{{{f{{l{Ah}}}}dd}{{Bd{BjBb}}}}{{{f{{l{Bh}}}}dd}{{Bd{BjBb}}}}{{{f{{l{{Bl{c}}}}}}dd}{{Bd{BjBb}}}Bn}{{{f{{l{En}}}}dd}{{Bd{BjBb}}}}{{{f{{l{j}}}}dd}{{Bd{BjBb}}}}{{{f{{l{c}}}}FhdFh}BjFb}{{{f{{l{Ah}}}}{f{{Al{Aj}}}}}{{l{Af}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Af}}}A`}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Af}}}}{{{f{{l{n}}}}{f{An}}}{{l{Af}}}}{{{f{{l{c}}}}e}{{l{Af}}}A`Ad}{{{f{{l{Af}}}}{f{{l{Af}}}}}{{l{Af}}}}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{Af}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Af}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Af}}}}758013264{{{f{{l{c}}}}}dDd}{{{f{{l{c}}}}{Cb{Fh}}}{{l{c}}}Dd}{{}Fh}00{{FhIj{Cb{Il}}}{{l{c}}}A`}{{{f{{l{Bh}}}}}Ef}{{{f{{l{j}}}}}Ef}{{{f{CnC`}}C`}b}{{C`C`}C`}{{{f{C`}}C`}d}{ce{}{}}00{{{l{In}}}{{Jb{J`In}}}}{{{l{Jd}}Jf{Cb{Eh}}}{{Jb{JhJd}}}}{{{l{Jj}}{Cb{Fh}}Fh}{{Bd{{Jb{JlJj}}Bb}}}}{{{l{Jj}}{Cb{Fh}}Fh}{{Jb{JlJj}}}}{{{l{Jd}}Jf}{{Jb{JnJd}}}}{{{f{{l{{Bl{c}}}}}}}{}Bn}{{{f{{l{Af}}}}}}{{{f{{l{En}}}}}}{{{f{{l{j}}}}}}{{{f{{l{Bh}}}}}}{{{f{{l{Ah}}}}}}{{{f{{l{n}}}}}}{{{f{{l{c}}}}}{}A`}{C`}{{{f{{l{c}}}}}{{`{HjHlK`G`Ib}}}A`}{{{l{c}}}B`Dd}{{{l{Jj}}}B`}{{{l{Jd}}}{{Jb{KbJd}}}}{{{f{C`}}}d}{{{f{{l{c}}}}}dDd}1{{{f{{l{c}}}}}{{l{Af}}}Kd}000{{{f{{l{c}}}}}{{l{Af}}}Dd}02{{{f{{l{c}}}}}IhDd}{{{f{{l{c}}}}}{{`{Kf}}}Dd}{{{f{C`}}}{{Kh{C`}}}}{{{f{C`}}}{{Kj{C`}}}}{{{f{{l{c}}}}}{{Fl{{Ff{{Ch{Cf}}}}{Fj{{f{{Ch{Cf}}}}}{{Df{{Cb{{f{Hd}}}}}}}}}}}Dd}`{{{f{{l{c}}}}}CbDd}{{{f{{l{c}}}}}{{Cb{Fh}}}Dd}{{{f{{l{c}}}}}{{Kl{c}}}Dd}{{{l{c}}{l{c}}}{}A`}{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}{{{l{c}}}{}A`}{{{f{{l{c}}}}}{}A`}01{{{f{{l{c}}}}}FhDd}{{{f{{l{c}}}}e}{{l{c}}}A`{AbKn}}00{{{f{{l{c}}}}Fh}{{l{c}}}Dd}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{Af}}}}{{{f{{l{Af}}}}{f{{l{Af}}}}}{{l{Af}}}}{{{f{{l{Ah}}}}{f{{Al{Aj}}}}}{{l{Af}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Af}}}}{{{f{{l{n}}}}{f{An}}}{{l{Af}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Af}}}}{{{f{{l{c}}}}e}{{l{Af}}}A`Ad}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Af}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Af}}}A`}582716430{{{f{{l{c}}}}}CbA`}{{{f{{l{Af}}}}}{{Cb{d}}}}{{{f{{l{n}}}}}B`}{{{f{{l{c}}}}}B`A`}{{{f{{l{Af}}}}}B`}{{{f{{l{Ah}}}}}B`}{{{f{{l{c}}}}}{{Cb{L`}}}A`}{{{f{{l{Af}}}}}{{Cb{L`}}}}{{{f{{l{Eb}}}}}{{Cb{L`}}}}{{{f{{l{Ed}}}}}{{Cb{Ij}}}}{{{f{{l{c}}}}}{{Cb{L`}}}Fb}{{{f{{l{Ed}}}}}B`}{{{f{{l{c}}}}}B`Fb}{{{f{{l{Eb}}}}}B`}<=;:89{{{f{{l{c}}}}}{{Cb{Gf}}}A`}{{{f{An}}{f{Al}}}{{l{c}}}A`}{{{f{An}}{f{{Al{Aj}}}}FhFh}{{l{Af}}}}{{{f{{l{c}}}}e}{}A`{AbAd}}{{{l{c}}{l{c}}}{}A`}{{{l{c}}e}{}A`{AbAd}}{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{c}}}}}{{Bd{FhBb}}}A`}{{{f{{l{Ah}}}}}{{Bd{FhBb}}}}{{{f{{l{n}}}}}{{Bd{FhBb}}}}{{{f{{l{c}}}}}{{f{An}}}Dd}{{{f{An}}c}{{l{El}}}{{Hb{{Al{{Cb{Lb}}}}}}}}{{{f{An}}c}{{l{Ld}}}{{Hb{{Al{{Cb{Lf}}}}}}}}{{{f{An}}c}{{l{Ah}}}{{Hb{{Al{{Cb{{f{{Al{Aj}}}}}}}}}}}}{{{f{An}}c}{{l{Af}}}{{Hb{{Al{{Cb{d}}}}}}}}{{{f{An}}c}{{l{n}}}{{Hb{{Al{{Dl{An}}}}}}}}{{{f{An}}c}{{l{Eb}}}{{Hb{{Al{L`}}}}}}{{{f{An}}c}{{l{n}}}{{Hb{{Al{{Cb{{f{An}}}}}}}}}}{{{f{An}}c}{{l{Eb}}}{{Hb{{Al{{Cb{L`}}}}}}}}{{{f{An}}c}{{l{n}}}{{Hb{{Al{{f{An}}}}}}}}{{{f{An}}c}{{l{El}}}{{Hb{{Al{Lb}}}}}}{{{f{An}}c}{{l{Lh}}}{{Hb{{Al{Lj}}}}}}{{{f{An}}c}{{l{n}}}{{Hb{{Al{{Cb{Eh}}}}}}}}{{{f{An}}c}{{l{Ah}}}{{Hb{{Al{{f{{Al{Aj}}}}}}}}}}{{{f{An}}c}{{l{In}}}{{Hb{{Al{Ll}}}}}}{{{f{An}}c}{{l{Ah}}}{{Hb{{Al{{Dl{{Al{Aj}}}}}}}}}}{{{f{An}}c}{{l{Ln}}}{{Hb{{Al{{Cb{Aj}}}}}}}}{{{f{An}}c}{{l{n}}}{{Hb{{Al{Eh}}}}}}{{{f{An}}c}{{l{n}}}{{Hb{{Al{{Cb{{Dl{An}}}}}}}}}}{{{f{An}}c}{{l{Af}}}{{Hb{{Al{d}}}}}}{{{f{An}}c}{{l{M`}}}{{Hb{{Al{{Cb{Il}}}}}}}}{{{f{An}}{Mb{Ll}}}{{l{In}}}}{{{f{An}}{Mb{Il}}}{{l{M`}}}}{{{f{An}}e}{{l{{Bl{c}}}}}Bn{{Hb{{Al{{Cb{c}}}}}}}}{{{f{An}}{Mb{Lb}}}{{l{El}}}}{{{f{An}}c}{{l{Ah}}}{{Hb{{Al{{Cb{{Fn{Aj}}}}}}}}}}{{{f{An}}c}{{l{Ah}}}{{Hb{{Al{{Fn{Aj}}}}}}}}{{{f{An}}c}{{l{Ed}}}{{Hb{{Al{Ij}}}}}}{{{f{An}}c}{{l{Ln}}}{{Hb{{Al{Aj}}}}}}{{{f{An}}c}{{l{Lh}}}{{Hb{{Al{{Cb{Lj}}}}}}}}{{{f{An}}{Mb{Gb}}}{{l{Jd}}}}{{{f{An}}c}{{l{Ld}}}{{Hb{{Al{Lf}}}}}}{{{f{An}}c}{{l{In}}}{{Hb{{Al{{Cb{Ll}}}}}}}}{{{f{An}}c}{{l{Md}}}{{Hb{{Al{{Cb{Mf}}}}}}}}{{{f{An}}c}{{l{Md}}}{{Hb{{Al{Mf}}}}}}{{{f{An}}c}{{l{Ah}}}{{Hb{{Al{{Cb{{Dl{{Al{Aj}}}}}}}}}}}}{{{f{An}}c}{{l{Ed}}}{{Hb{{Al{{Cb{Ij}}}}}}}}{{{f{An}}c}{{l{Jd}}}{{Hb{{Al{Gb}}}}}}{{{f{An}}{f{{Al{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{An}}c}{{l{M`}}}{{Hb{{Al{Il}}}}}}{{{f{An}}c}{{l{Jd}}}{{Hb{{Al{{Cb{Gb}}}}}}}}{{{f{An}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{n}}}}FhFh}{{l{n}}}}{{{f{{l{c}}}}FhFh}{{l{c}}}A`}{{{f{{l{Af}}}}FhFh}{{l{Af}}}}{{{f{{l{Bh}}}}FhFh}{{l{Bh}}}}{{{f{{l{j}}}}FhFh}{{l{j}}}}{{{f{{l{{Bl{c}}}}}}FhFh}{{l{{Bl{c}}}}}Bn}{{{f{{l{Ah}}}}FhFh}{{l{Ah}}}}{{{f{{l{En}}}}FhFh}{{l{En}}}}{{{f{An}}{Fn{c}}}{{l{{Bl{c}}}}}Bn}{{{f{An}}{Fn{c}}Hd}{{l{{Bl{c}}}}}Bn}{{{f{An}}Fn}{{l{c}}}A`}{{{f{{l{c}}}}}{{l{c}}}Kd}{{{f{{l{Af}}}}}}{{{l{Af}}}}{C`C`}{{{f{{l{n}}}}{f{An}}}{{l{Af}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Af}}}A`}{{{f{{l{c}}}}e}{{l{Af}}}A`Ad}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Af}}}}{{{f{{l{Af}}}}{f{{l{Af}}}}}{{l{Af}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Af}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Af}}}}{{{f{{l{Ah}}}}{f{{Al{Aj}}}}}{{l{Af}}}}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{Af}}}}4{{{f{{l{Bh}}}}{f{{l{Bh}}}}}}2931487{{{f{{l{c}}}}}FhDd}`{{{f{{l{n}}}}}{{Bd{{Gd{Gb}}Bb}}}}{{{f{{l{j}}}}}{{Bd{{Gd{Gb}}Bb}}}}{{{f{{l{Bh}}}}}{{Bd{{Gd{Gb}}Bb}}}}`{{{f{{l{n}}}}}{{`{{Mh{}{{Cd{{Cb{{f{An}}}}}}}}}}}}{{{f{{l{j}}}}}{{`{{Mh{}{{Cd{{Cb{B`}}}}}}}}}}{{{f{Cn{l{j}}}}}{{`{Mj}}}}{{{f{{l{n}}}}}{{`{Mj}}}}{{{f{{l{c}}}}}B`A`}{{{f{Cn{l{c}}}}}bDd}{{{f{{l{c}}}}L`Ml}{{Bd{{Cb{L`}}Bb}}}Fb}{{{f{{l{Ed}}}}L`Ml}{{Bd{{Cb{Ij}}Bb}}}}{{{f{{l{Eb}}}}L`Ml}{{Bd{{Cb{L`}}Bb}}}}{{{f{{l{Ed}}}}L`Ml}{{Bd{B`Bb}}}}{{{f{{l{Eb}}}}L`Ml}{{Bd{B`Bb}}}}{{{f{{l{c}}}}L`Ml}{{Bd{B`Bb}}}Fb}{{{f{An}}FhL`}{{Bd{{l{Af}}Bb}}}}{{{f{An}}FhL`L`}{{Bd{{l{c}}Bb}}}A`}{{{f{An}}Fh}{{l{c}}}A`}{{{f{An}}FhL`L`}{{l{c}}}A`}{{{f{{l{c}}}}}{{l{c}}}Dd}{{{f{{l{c}}}}}{{f{Mn}}}Dd}{{{f{{l{M`}}}}}B`}{{{f{{l{El}}}}}B`}{{{f{{l{Ld}}}}}B`}{{{f{{l{Lh}}}}}B`}{{{f{{l{In}}}}}B`}{{{f{{l{Ln}}}}}B`}{{{f{{l{Md}}}}}B`}{{{f{{l{Jd}}}}}B`}{{{f{{l{Eb}}}}}B`}{{{f{{l{j}}}}}B`}{{{f{{l{Ed}}}}}B`}615:2940837{{{l{c}}e}{}A`{AbAd}}{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}{{{f{{l{c}}}}e}{}A`{AbAd}}{{{l{c}}{l{c}}}{}A`}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{CnC`}}C`}b}{{{f{Cn{l{c}}}}{f{An}}}bDd}{{{f{{l{Af}}}}}{{l{Af}}}}{{{f{{l{{Bl{c}}}}}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{c}}}}}{{l{c}}}A`}{{{f{{l{n}}}}}{{l{n}}}}{{{f{{l{Bh}}}}}{{l{Bh}}}}{{{f{{l{j}}}}}{{l{j}}}}{{{f{{l{En}}}}}{{l{En}}}}{{{f{{l{c}}}}{f{Dh}}N`}{{Bd{B`Bb}}}A`}{{{f{{l{c}}}}Fhe}{{Bd{{l{c}}Bb}}}Kd{{E`{{f{Cn{l{c}}}}}{{Df{Cb}}}}}}{{{f{{l{c}}}}L`dd{Cb{Il}}}{{Bd{{l{c}}Bb}}}Dd}{{{f{{l{c}}}}Fhdd{Cb{Il}}}{{Bd{{l{c}}Bb}}}Dd}{{{l{c}}{f{{Al{Lb}}}}e}{{Bd{B`Bb}}}Nb{{Gh{}{{Cd{Cb}}}}}}{{{f{{l{Af}}}}{f{{Al{Lb}}}}c}{{Bd{B`Bb}}}{{Gh{}{{Cd{{Cb{d}}}}}}}}{{{f{{l{n}}}}{f{{Al{Lb}}}}c}{{Bd{B`Bb}}}{{Gh{}{{Cd{{Cb{{f{An}}}}}}}}}}{{{f{{l{n}}}}c{Cb{{f{An}}}}}{{Bd{{l{n}}Bb}}}{{Gh{}{{Cd{Lb}}}}}}{{{f{{l{Af}}}}c{Cb{d}}}{{Bd{{l{Af}}Bb}}}{{Gh{}{{Cd{Lb}}}}}}{{{f{{l{c}}}}eCb}{{Bd{{l{c}}Bb}}}A`{{Gh{}{{Cd{Lb}}}}}}{{{f{{l{Ah}}}}c{Cb{{f{{Al{Aj}}}}}}}{{Bd{{l{Ah}}Bb}}}{{Gh{}{{Cd{Lb}}}}}}{{{f{{l{n}}}}ce}{{Bd{{l{n}}Bb}}}{{Gh{}{{Cd{Lb}}}}}{{Dh{{Cb{{f{An}}}}}{{Df{{Cb{Eh}}}}}}}}{{{f{{l{Ah}}}}ce}{{Bd{{l{Ah}}Bb}}}{{Gh{}{{Cd{Lb}}}}}{{Dh{{Cb{{f{{Al{Aj}}}}}}}{{Df{{Cb{{Fn{Aj}}}}}}}}}}{{{f{{l{Af}}}}ce}{{Bd{{l{Af}}Bb}}}{{Gh{}{{Cd{Lb}}}}}{{Dh{{Cb{d}}}{{Df{{Cb{d}}}}}}}}{{{f{{l{c}}}}eg}{{Bd{{l{c}}Bb}}}A`{{Gh{}{{Cd{Lb}}}}}{{Dh{Cb}{{Df{Cb}}}}}}{{{f{{l{c}}}}{f{{l{Af}}}}Cb}{{Bd{{l{c}}Bb}}}A`}{{{f{{l{n}}}}{f{{l{Af}}}}{Cb{{f{An}}}}}{{Bd{{l{n}}Bb}}}}{{{f{{l{Ah}}}}{f{{l{Af}}}}{Cb{{f{{Al{Aj}}}}}}}{{Bd{{l{Ah}}Bb}}}}{{{f{{l{Af}}}}{f{{l{Af}}}}{Cb{d}}}{{Bd{{l{Af}}Bb}}}}{{{f{CnC`}}C`d}b}{{{f{Cn{l{j}}}}}b}{{{f{Cn{l{j}}}}Ef}b}{{{f{Cn{l{c}}}}Lb}bDd}{{{f{Cn{l{c}}}}Ih}bDd}{{{f{CnC`}}Ih}b}{{{f{{l{c}}}}Gb}{{l{c}}}A`}{{{f{{l{n}}}}Gb}{{l{n}}}}{{{f{{l{Af}}}}Gb}{{l{Af}}}}{{{f{{l{En}}}}Gb}{{l{En}}}}{{{f{{l{{Bl{c}}}}}}Gb}{{l{{Bl{c}}}}}Bn}{{{f{{l{j}}}}Gb}{{l{j}}}}{{{f{{l{Ah}}}}Gb}{{l{Ah}}}}{{{f{{l{Bh}}}}Gb}{{l{Bh}}}}{{{f{{l{En}}}}Gb{Cb{{f{{Al{Aj}}}}}}}{{l{En}}}}{{{f{{l{Af}}}}Gb{Cb{d}}}{{l{Af}}}}{{{f{{l{c}}}}GbCb}{{l{c}}}A`}{{{f{{l{{Bl{c}}}}}}Gb{Cb{{Bl{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{Bh}}}}Gb{Cb{{f{B`}}}}}{{l{Bh}}}}{{{f{{l{n}}}}Gb{Cb{{f{An}}}}}{{l{n}}}}{{{f{{l{Ah}}}}Gb{Cb{{f{{Al{Aj}}}}}}}{{l{Ah}}}}{{{f{{l{j}}}}Gb{Cb{{f{B`}}}}}{{l{j}}}}{{{f{Cn{l{c}}}}}bDd}{{{f{{l{c}}}}GbFh}{{l{c}}}Dd}{{{f{{l{n}}}}d}{{l{n}}}}{{{f{{l{Ah}}}}d}{{l{Ah}}}}{{{f{{l{Af}}}}d}{{l{Af}}}}{{{f{{l{c}}}}d}{{l{c}}}A`}{{{f{{l{En}}}}d}{{l{En}}}}{{{f{{l{En}}}}Ej}{{l{En}}}}{{{f{{l{n}}}}Ej}{{l{n}}}}{{{f{{l{Ah}}}}Ej}{{l{Ah}}}}{{{f{{l{c}}}}Ej}{{l{c}}}A`}{{{f{{l{Af}}}}Ej}{{l{Af}}}}{{{f{{l{c}}}}Aj}{{Cb{L`}}}A`}{{{f{{l{Ed}}}}Aj}B`}{{{f{{l{Eb}}}}Aj}B`}{{{f{{l{c}}}}Aj}B`Fb}{{{l{c}}{l{c}}}{}A`}{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}{{{l{c}}e}{}A`{AbAd}}{{{f{{l{c}}}}e}{}A`{AbAd}}{{C`C`}C`}{{{f{CnC`}}C`}b}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{Af}}}}}{{Cb{Lb}}}}{{{f{{l{c}}}}}CbA`}{{{f{{l{Ah}}}}}Nd}{{{f{{l{Af}}}}}Nd}{{{f{{l{n}}}}}Nd}{{{f{{l{c}}}}}NdA`}8{{{f{{l{c}}}}{Cb{Fh}}}{{l{c}}}Dd}{{{f{{l{c}}}}{f{e}}}{{Bd{{l{c}}Bb}}}Dd{{Hb{{Al{Lb}}}}Nf}}{{{f{{l{c}}}}{f{{l{El}}}}}{{Bd{{l{c}}Bb}}}Dd}{{{f{{l{c}}}}{f{{Al{Nh}}}}Ih}{{l{c}}}Dd}{{{f{{l{c}}}}{f{{Al{Nh}}}}}{{l{c}}}Dd}{{{f{{l{c}}}}{f{{l{El}}}}}{{l{c}}}{{Dd{}{{Nj{Db}}}}Dd}}{{{f{{l{n}}}}{f{c}}}{{l{n}}}{{Hb{{Al{Lb}}}}Nf}}{{{f{{l{Ah}}}}{f{{l{El}}}}}{{l{Ah}}}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Dd{}{{Nj{Db}}}}Dd}{{Hb{{Al{Lb}}}}Nf}}{{{f{{l{n}}}}{f{{l{El}}}}}{{l{n}}}}{{{f{{l{Ah}}}}{f{c}}}{{l{Ah}}}{{Hb{{Al{Lb}}}}Nf}}`{{{f{{l{c}}}}dNl}{{Fn{{Fn{Nn}}}}}Dd}{{{f{{l{c}}}}}{{l{c}}}Kd}{{{f{{l{n}}}}Fh}{{Bd{B`Bb}}}}{{{f{Cn{l{Bh}}}}Ef}b}{{{f{Cn{l{j}}}}Ef}b}{{{f{{l{c}}}}}{{Bd{{Of{{O`{f}}{Od{{Ob{Fh}}}}}}Bb}}}A`}{{{f{{l{j}}}}}{{Bd{{Of{Oh{Od{{Ob{Fh}}}}}}Bb}}}}{{{f{c}}}e{}{}}0{{{f{{l{Ah}}}}}{{l{n}}}}{{{f{{l{c}}}}}{{Fn{Cb}}}A`}{{{f{{l{c}}}}}{{Oj{Fn{Fn{Cb}}}}}A`}{{{f{CnC`}}C`}b}{{{l{c}}{l{c}}}{}A`}{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}{{{f{{l{c}}}}}{}A`}{{{l{c}}}{}A`}10{{{f{{l{j}}}}c}{{Bd{{l{j}}Bb}}}{{E`{Dn}{{Df{{Bd{B`Bb}}}}}}}}{{{f{{l{j}}}}e}{{Bd{{l{g}}Bb}}}{}{{E`{{Cb{Dn}}}{{Df{{Bd{{Cb{c}}Bb}}}}}}Dj}Dd}{{{f{{l{Bh}}}}e}{{Bd{{l{g}}Bb}}}{}{{E`{{Cb{Dn}}}{{Df{{Bd{{Cb{c}}Bb}}}}}}Dj}Dd}{{{f{{l{Bh}}}}c}{{Bd{{l{Bh}}Bb}}}{{E`{Dn}{{Df{{Bd{B`Bb}}}}}}}}{{{f{{l{Bh}}}}c}{{Bd{{l{j}}Bb}}}{{E`{Dn}{{Df{{Bd{B`Bb}}}}}}}}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{Cb}{{Df{{Bd{{Cb{e}}g}}}}}}Dj}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{}{{Df{{Bd{eg}}}}}}}Dd}{c{{Bd{e}}}{}{}}00{{{f{An}}g}{{Bd{{l{i}}e}}}Cf{}{{Gh{}{{Cd{{Bd{ce}}}}}}}{{Dd{}{{Gn{c}}}}Dd}}111{{{f{{l{j}}}}{f{{l{c}}}}e}{{Bd{{l{j}}Bb}}}Dd{{E`{{Cb{Dn}}Cb}{{Df{{Bd{{Cb{B`}}Bb}}}}}}}}{{{f{c}}}Ol{}}00{{C`C`}C`}{{{f{{l{Ah}}}}}{{Bd{{l{Ah}}Bb}}}}{{{f{{l{{Bl{c}}}}}}}{{Bd{{l{{Bl{c}}}}Bb}}}Bn}{{{f{{l{Af}}}}}{{Bd{{l{Af}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}A`}{{{f{{l{n}}}}}{{Bd{{l{n}}Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{{f{{l{c}}}}Bb}}}Dd}{{{f{Cn{l{c}}}}}bDd}{{{f{{l{c}}}}Fh}{}Dd}{{{f{{l{c}}}}Aj}{{Cb{L`}}}A`}{{{f{{l{Ed}}}}Aj}B`}{{{f{{l{Eb}}}}Aj}B`}{{{f{{l{c}}}}Aj}B`Fb}{{{f{{l{Jd}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Af}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ln}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ah}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{{Bl{c}}}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}Bn}{{{f{{l{Jj}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Eb}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Lh}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{El}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Md}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{En}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{M`}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{n}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ed}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{In}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ld}}}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ld}}}}Nl{f{Cn{Al{Il}}}}}{{Bd{bBb}}}}{{{f{{l{En}}}}Nl{f{Cn{Al{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ah}}}}Nl{f{Cn{Al{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Ln}}}}Nl{f{Cn{Al{Il}}}}}{{Bd{bBb}}}}{{{f{{l{{Bl{c}}}}}}Nl{f{Cn{Al{Il}}}}}{{Bd{bBb}}}Bn}{{{f{{l{Ed}}}}Nl{f{Cn{Al{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Jj}}}}Nl{f{Cn{Al{Il}}}}}{{Bd{bBb}}}}{{{f{{l{El}}}}Nl{f{Cn{Al{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Eb}}}}Nl{f{Cn{Al{Il}}}}}{{Bd{bBb}}}}{{{f{{l{In}}}}Nl{f{Cn{Al{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Af}}}}Nl{f{Cn{Al{Il}}}}}{{Bd{bBb}}}}{{{f{{l{n}}}}Nl{f{Cn{Al{Il}}}}}{{Bd{bBb}}}}{{{f{{l{M`}}}}Nl{f{Cn{Al{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Jd}}}}Nl{f{Cn{Al{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Lh}}}}Nl{f{Cn{Al{Il}}}}}{{Bd{bBb}}}}{{{f{{l{Md}}}}Nl{f{Cn{Al{Il}}}}}{{Bd{bBb}}}}{ce{}{}}00{{{f{{l{Bh}}}}}Fh}{{{f{An}}c}{{l{e}}}Cf{{Dd{}{{Gn{c}}}}Dd}}{{{f{{l{c}}}}{Fn{{Ch{Cf}}}}}{{l{c}}}Dd}{{{l{c}}{f{An}}}{{l{c}}}Dd}{{{f{{Al{On}}}}e}c{}{{A@`{{f{{l{El}}}}}{{Df{c}}}}}}{{{f{{l{c}}}}Ih}{{l{c}}}Dd}{{{f{{l{c}}}}}{}A`}{{{l{c}}}{}A`}{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}{{{l{c}}{l{c}}}{}A`}23103232102323013223013232102323{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Dd{{E`{{Cb{Dn}}Cb}{{Df{{Cb{B`}}}}}}}}{{{f{{l{Bh}}}}{f{{l{c}}}}e}{{l{Bh}}}Dd{{E`{{Cb{Dn}}Cb}{{Df{{Cb{B`}}}}}}}}{{{f{{l{c}}}}{f{{l{Af}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Dd}````{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}c}e{}{}{}}{{c{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}g{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}c}g{}{}{}}{{c{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}g{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}65654654650654654````````````````{{{f{c}}h}b{}}000{{{f{CnA@j}}{f{Cf}}}b}{{{f{CnA@j}}}b}{{{f{CnA@l}}}b}{{{f{CnA@n}}c}b{{Cj{}{{Cd{{Cb{d}}}}}}Ib}}{{{f{Cn{AA`{c}}}}e}bA`{{Cj{}{{Cd{Cb}}}}Ib}}{{{f{Cn{AA`{c}}}}e}bA`{{Cj{}{{Cd{}}}}Ib}}{{{f{CnAAb}}}b}{{{f{CnAAd}}}b}65{{{f{CnAAf}}}b}{{{f{CnAAh}}}b}{{{f{CnA@n}}}b}{{{f{CnAAj}}}b}{{{f{Cn{AA`{c}}}}}bA`}{{{f{Cn{AAl{c}}}}}b{AAnNf}}{{{f{CnAB`}}}b}{{{f{CnABb}}}b}{{{f{Cn{ABd{c}}}}}bA`}{{{f{CnA@j}}{Cb{{f{Cf}}}}}b}{{{f{CnA@j}}{Cb{{f{B`}}}}}{{Bd{bBb}}}}{{{f{CnAAb}}{Cb{{f{B`}}}}}{{Bd{bBb}}}}{{{f{Cn{AA`{c}}}}{Cb{{f{Al}}}}}bA`}{{{f{Cn{AAl{c}}}}{Cb{e}}}b{AAnNf}{{Hb{c}}}}{{{f{CnAAd}}{Cb{c}}}b{}}{{{f{CnAAb}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnA@j}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnA@l}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnAAf}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnAAh}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnA@n}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnAAj}}{f{B`}}}{{Bd{bBb}}}}{{{f{Cn{AA`{c}}}}{f{B`}}}{{Bd{bBb}}}A`}{{{f{Cn{AA`{c}}}}{f{Al}}}bA`}{{{f{CnAAf}}c}b{{Cj{}{{Cd{{Cb{{f{An}}}}}}}}Ib}}{{{f{CnAAh}}c}b{{Cj{}{{Cd{{Cb{{f{{Al{Aj}}}}}}}}}}Ib}}{{{f{CnAAd}}c}b{}}{{{f{Cn{AAl{c}}}}e}b{AAnNf}{{Hb{c}}}}{{{f{CnAB`}}d}b}{{{f{Cn{ABd{c}}}}}bA`}{{{f{CnAAf}}c}b{{Cj{}{{Cd{{f{An}}}}}}}}{{{f{CnAAh}}c}b{{Cj{}{{Cd{{f{{Al{Aj}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}0000000000{{{f{Cnc}}}{{f{Cne}}}{}{}}0000000000`{{{f{{AAl{c}}}}}{{AAl{c}}}{AAnNf}}{{{f{AB`}}}AB`}{{{f{ABb}}}ABb}{{{f{{ABd{c}}}}}{{ABd{c}}}{ABfA`}}{{{f{c}}{f{Cne}}}b{}{}}000{{}A@j}{{}A@l}{Fh{{f{c}}}{}}0000000000{Fh{{f{Cnc}}}{}}0000000000{Fhb}0000000000{{{f{AAf}}}d}{{{f{AAh}}}d}{{{f{A@n}}}d}{{{f{{AA`{c}}}}}dA`}{{{f{AAb}}}d}{{{f{AAf}}}{{f{Mn}}}}{{{f{AAh}}}{{f{Mn}}}}{{{f{A@n}}}{{f{Mn}}}}{{{f{{AA`{c}}}}}{{f{Mn}}}A`}{{{f{AAb}}}{{f{Mn}}}}{AAd{{l{c}}}Dd}{{{f{CnA@j}}}{{l{j}}}}{{{f{CnA@l}}}{{l{j}}}}{{{f{CnAAj}}}{{l{j}}}}{{{f{CnAAb}}}{{l{j}}}}{{{AAl{An}}}{{l{n}}}}{{{AAl{{Al{Aj}}}}}{{l{Ah}}}}{AB`{{l{Af}}}}{ABbABh}{{{ABd{c}}}{{l{c}}}A`}`{cc{}}0000000000{{{f{An}}e}ABj{}{{Cj{}{{Cd{{Cb{c}}}}}}}}{{{f{An}}e}ABj{}{{Cj{}{{Cd{c}}}}}}{{{f{An}}{f{{Al{c}}}}}ABj{}}{{{f{An}}{f{{Al{{Cb{c}}}}}}}ABj{}}{{{f{Ef}}FhFh{f{An}}}{{Bd{{Ch{AAb}}Bb}}}}{{}Fh}0000000000{{{f{CnAAf}}}{{Ch{Cf}}}}{{{f{CnAAh}}}{{Ch{Cf}}}}{{{f{CnA@n}}}{{Ch{Cf}}}}{{{f{Cn{AA`{c}}}}}{{Ch{Cf}}}A`}{{{f{CnAAb}}}{{Ch{Cf}}}}{ce{}{}}0000000000`{{{f{An}}Fh{Cb{Ef}}}A@j}{{{f{An}}Fh{Cb{Ef}}}A@l}{{{f{An}}FhFh}AAf}{{{f{An}}FhFh}AAh}{{{f{An}}FhFh}A@n}{{{f{An}}Fh}AAj}{{{f{An}}FhFhEf}{{AA`{c}}}A`}{{{f{An}}Fh}{{AAl{c}}}{AAnNf}}{{{f{An}}Fh}AB`}{{{f{An}}Fh}ABb}{{{f{An}}Fh}{{ABd{c}}}A`}{{{f{An}}FhFhEfEf}{{AA`{c}}}A`}{{{f{CnAAd}}}b}{{{f{CnAB`}}}b}{{{f{CnABb}}}b}{{{f{Cn{ABd{c}}}}}bA`}{{{f{c}}}e{}{}}000{c{{Bd{e}}}{}{}}000000000000000000000{{{f{c}}}Ol{}}0000000000{ce{}{}}0000000000````````{{{f{CnAAb}}}b}{{{f{CnAAb}}{Cb{{f{B`}}}}}{{Bd{bBb}}}}{{{f{CnAAb}}{f{B`}}}{{Bd{bBb}}}}`{{{f{AAb}}}d}{{{f{AAb}}}{{f{Mn}}}}{{{f{CnAAb}}}{{l{j}}}}{{{f{Ef}}FhFh{f{An}}}{{Bd{{Ch{AAb}}Bb}}}}{{{f{CnAAb}}}{{Ch{Cf}}}}``{{ABl{f{An}}}{{l{c}}}Dd}{{ABn{f{{l{c}}}}}{{l{c}}}Dd}10{{ABn{f{An}}Ef}{{l{c}}}Dd}0{{ABl{f{An}}}{{Bd{{l{c}}e}}}Dd{}}{{ABn{f{{l{c}}}}}{{Bd{{l{c}}e}}}Dd{}}10{{ABn{f{An}}Ef}{{Bd{{l{c}}e}}}Dd{}}0`{AC`AC`}``{{ACb{f{An}}Ef}e{}{{ACd{c}}}}{{e{f{An}}Ef}ACd{}{{Hn{}{{Cd{c}}}}}}`````{{{f{c}}}{{f{e}}}{}{}}000{{{f{Cnc}}}{{f{Cne}}}{}{}}000{Fh{{f{c}}}{}}000{Fh{{f{Cnc}}}{}}000{Fhb}000{cc{}}000{{}Fh}000{ce{}{}}0000000{{{f{ACf}}}ACh}{{{f{ACj}}Ef}ACl}{{{f{CnACh}}}Cb}{{{f{CnACl}}}Cb}{{{f{CnACn}}}Cb}{{{f{Cn{AD`{c}}}}}CbCj}32{{{f{Cn{AD`{c}}}}}CbG`}`{{{f{ACh}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{ACl}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{{AD`{c}}}}}{{Gf{Fh{Cb{Fh}}}}}Cj}{c{{Bd{e}}}{}{}}0000000{{{f{c}}}Ol{}}000<<<<``````{{{f{c}}h}b{}}{e{{ADb{c}}}Bn{{Gh{}{{Cd{{f{c}}}}}}}}{e{{ADb{c}}}Bn{{Gh{}{{Cd{{Cb{{f{c}}}}}}}}}}{{ADde}g{}{{Gh{}{{Cd{c}}}}}{}}0{{{f{If}}}{{f{ADf}}}}{{{f{{ADb{c}}}}}{{f{ADf}}}Bn}{{{f{Cn{ADb{c}}}}}{{f{CnADf}}}Bn}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}`{{{f{{ADb{c}}}}}{{ADb{c}}}{ABfBn}}{{{f{c}}{f{Cne}}}b{}{}}{{{f{{ADb{c}}}}}{{f{ADd}}}Bn}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{{f{If}}}}{f{{f{If}}}}}d}{{{f{If}}{f{If}}}d}{{{f{{ADb{c}}}}{f{CnGj}}}{{Bd{bGl}}}{ADhBn}}{cc{}}{{FhADd}{{ADb{c}}}Bn}{{{f{{ADb{c}}}}Fh}{{Cb{{f{c}}}}}Bn}{{}ADd}{{{f{Hd}}{f{{ADb{c}}}}{f{{ADb{c}}}}}{{ADb{c}}}Bn}{{ADd{f{Hd}}}{{ADb{c}}}Bn}{{{f{Hd}}{f{{ADb{c}}}}}{{ADb{c}}}Bn}0{{}Fh}{ce{}{}}{{{f{{ADb{c}}}}}{}Bn}{{{f{{ADb{c}}}}Fh}dBn}0{{{f{c}}Fh}d{}}{{{f{{ADb{c}}}}}{{ADl{ADj}}}Bn}{{{f{{ADb{c}}}}}{{ADl{{f{c}}{Ff{c}}ADj}}}Bn}{{{f{{ADb{c}}}}}FhBn}0`{{{f{Cn{ADb{c}}}}{Cb{Hd}}}bBn}{{{f{Cn{ADb{c}}}}FhFh}bBn}{{{f{c}}FhFh}e{}{}}01{{{f{If}}}{{Ch{If}}}}{{{f{{ADb{c}}}}}{{Ch{Cf}}}Bn}{{{f{c}}}e{}{}}{g{{Bd{{ADb{c}}e}}}Bn{}{{Gh{}{{Cd{{Bd{{Cb{{f{c}}}}e}}}}}}}}{g{{Bd{{ADb{c}}e}}}Bn{}{{Gh{}{{Cd{{Bd{{f{c}}e}}}}}}}}{{ADdg}{{Bd{ie}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}{}}0{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}{{{f{If}}}{{f{An}}}}{{}{{f{An}}}}{{{f{{ADb{c}}}}}{{Cb{{f{Hd}}}}}Bn}{{{f{{ADb{c}}}}Fh}{{f{c}}}Bn}0{{{f{{ADb{c}}}}Fh}{}Bn}{{{f{{ADb{c}}}}}{{f{{ADn{{Fn{c}}}}}}}Bn}{{{f{{ADb{c}}}}}{}Bn}{{{f{{ADb{c}}}}}{{Ff{c}}}Bn}{ce{}{}}{{{ADb{c}}{Cb{Hd}}}{{ADb{c}}}Bn}{{{f{{ADb{c}}}}{Cb{Hd}}}{{Ch{Cf}}}Bn}1`{{{f{Cn{AE`{c}}}}}bBn}0{{{f{Cn{AE`{c}}}}{Cb{c}}}bBn}{{{f{Cn{AE`{c}}}}{f{ADf}}}bBn}{{{f{Cn{AE`{c}}}}c}bBn}{{{f{Cn{AE`{c}}}}{f{ADf}}}{{Bd{bBb}}}Bn}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{}{{AE`{c}}}Bn}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{AE`{c}}}{{l{{Bl{c}}}}}Bn}{cc{}}{{}Fh}{ce{}{}}{{{f{An}}Fh}{{AE`{c}}}Bn}{{{f{Cn{AE`{c}}}}}B`Bn}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}4````{{{f{CnAEb}}}b}{{{f{CnAEb}}{Cb{{f{ADf}}}}}b}{{{f{CnAEb}}{f{ADf}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}`?>={{{f{AEd}}{f{CnGj}}}{{Bd{bGl}}}}<{{{f{An}}Fh}{{Ch{AEb}}}}{{}{{ADn{Dh}}}}{{}ADd}>={{}d}`{{{Ch{Dh}}{ADn{Dh}}ADd}b}{{{f{CnAEb}}}B`}==<{ce{}{}}````````````````````````````````````````````{{{f{c}}h}b{}}00{{{f{{AEh{}{{AEf{c}}}}}}g}{{AEh{}{{AEf{c}}}}}{}{}{{Dh{{Cb{e}}}{{Df{{Cb{c}}}}}}Dj}}{{{f{AEj}}{f{Dh}}}AEj}{{{f{AEj}}{f{Dh}}}{{l{c}}}Dd}{{{f{{AEh{}{{AEf{c}}}}}}i{f{Cn{Al{g}}}}}b{}{}{}{{Dh{{Cb{e}}{f{g}}}{{Df{g}}}}}}{{{f{{AEh{}{{AEf{c}}}}}}g}{{AEh{}{{AEf{c}}}}}{}{}{{Dh{e}{{Df{c}}}}Dj}}{{{f{AEl}}Ej}{{l{El}}}}{{{f{AEl}}{f{{Al{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{AEn}}}{{Bd{{l{El}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}00{{{f{Cnc}}}{{f{Cne}}}{}{}}00{{{f{AF`}}{f{Ef}}}{{Bd{B`Bb}}}}0{{{f{Ej}}}Ej}{{{f{F`}}}F`}{{{f{AFb}}}AFb}{{{f{c}}{f{Cne}}}b{}{}}00{{}Ej}{{}F`}{Fh{{f{c}}}{}}00{Fh{{f{Cnc}}}{}}00``{Fhb}00{{{f{Ej}}{f{Ej}}}d}{{{f{F`}}{f{F`}}}d}{{{f{AFb}}{f{AFb}}}d}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000{{{f{AFf}}}{{Bd{B`Bb}}}}{{{f{AFf}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}`{{{f{AFh}}c}{{Bd{AFhBb}}}{}}{{{f{AFj}}{f{{l{Af}}}}}{{Bd{{l{c}}Bb}}}Dd}`{{{f{Ej}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{F`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AFb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{F`}}}Ej}{cc{}}{{{f{Ej}}}F`}11`{{{f{An}}cFh}AFl{}}{{{f{An}}Fh}AFn}`{{{f{AG`}}Fh}{{Bd{IdBb}}}}{{{f{AG`}}Fh}Id}??{{{f{Ej}}{f{Cnc}}}bAGb}{{{f{F`}}{f{Cnc}}}bAGb}{{{f{AFb}}{f{Cnc}}}bAGb}{{}Fh}00{ce{}{}}00{{{f{AGd}}}{{Bd{{l{Af}}Bb}}}}{{{f{AGf}}}{{Bd{{l{Af}}Bb}}}}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}0``{{{f{AGh}}}{{Cb{c}}}{}}{{{f{AGh}}}{{Cb{L`}}}}{{{f{AGj}}}{{Cb{c}}}{}}2{{{f{AGh}}}{{Cb{{Gf{cc}}}}}{}}``{{{f{AEn}}}{{Bd{FhBb}}}}{{}Ej}{{}F`}{{{f{AGl}}FhFh}{{l{c}}}Dd}88``{{{f{AFf}}}{{Bd{{Gd{Gb}}Bb}}}}{{{f{AGj}}L`Ml}{{Bd{{Cb{c}}Bb}}}{}}{{{f{AGn}}}B`}0{{{f{AH`}}}AH`}{{{f{AHb}}{f{Dh}}N`}{{Bd{B`Bb}}}}{{{f{AHd}}c{Cb{e}}}{{Bd{AHdBb}}}{{Gh{}{{Cd{Lb}}}}}{}}{{{f{AHd}}ci}{{Bd{AHdBb}}}{{Gh{}{{Cd{Lb}}}}}{}{}{{Dh{{Cb{e}}}{{Df{{Cb{g}}}}}}}}`{{{f{AHd}}{f{{l{Af}}}}{Cb{c}}}{{Bd{AHdBb}}}{}}{{{f{AHf}}Gb}{{l{c}}}Dd}{{{f{AHh}}Gbc}{{l{e}}}{}Dd}{{{f{AHj}}FhFh}AHj}0`{{{f{AEl}}d}{{l{c}}}Dd}{{{f{AEl}}Ej}{{l{c}}}Dd}{{{f{AHl}}Aj}{{Cb{L`}}}}{{{f{AGh}}}{{Cb{c}}}{}}{{{f{AHn}}{f{c}}}{{Bd{AHnBb}}}Nf}{{{f{AI`}}{f{c}}}AI`Nf}{{{f{AIb}}}{{Fn{{f{{Al{Aj}}}}}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}Ol{}}00{{{f{AEn}}}{{Bd{AEnBb}}}}8{ce{}{}}00{{Ejd}Ej}{{F`d}F`}101010{{F`c}F`{{Gh{}{{Cd{d}}}}}}{EjEj}{F`F`}`{{{f{AId}}{f{{l{Af}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Dd}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DdDd{{Dh{ff}{{Df{}}}}}{{Dh{f}{{Df{}}}}}{{Dh{f}{{Df{}}}}}Dd}{{{l{c}}{l{e}}gik}{{l{m}}}DdDd{{Dh{}{{Df{}}}}}{{Dh{}{{Df{}}}}}{{Dh{}{{Df{}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DdDdCf{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DdDd{{AIf{CbCb}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}g}bDdDd{{E`{CbCb}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DdDd{}{{E`{}{{Df{g}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}i{f{An}}}{{l{k}}}DdDd{CfAIh}{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{An}}}{{l{k}}}DdDdCf{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DdDdCf{{E`{}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DdDd{{E`{ff}{{Df{{Ch{Cf}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DdDd{{E`{ff}{{Df{{Ch{Cf}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DdDd{}{}{{E`{CbCb}{{Df{{Bd{{Cb{g}}i}}}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DdDdDd{{AIj{CbCbCb}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DdDdCfAIl{{E`{ff}{{Df{{Bd{gi}}}}}}}{{Dd{}{{Gn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{An}}}{{Bd{{l{m}}i}}}DdDdCfAIl{{E`{ff}{{Df{{Bd{gi}}}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DdDdAIl{{E`{ff}{{Df{{Bd{{Ch{Cf}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DdDdDd{}{}{{E`{CbCbCb}{{Df{{Bd{{Cb{i}}k}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{Cb}{{Df{{Bd{{Cb{e}}g}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{}{{Df{{Bd{eg}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{CfAIh}AIl{{E`{f}{{Df{{Bd{eg}}}}}}}{{Dd{}{{Gn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dd{{AIn{Cb}}}Dd}{{{f{{l{c}}}}e}{{l{g}}}DdAInDd}{{{f{{l{c}}}}g}{{l{i}}}DdCf{{E`{f}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}{{{l{c}}g}{{l{i}}}DdCf{{E`{}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dd{CfAIh}{{E`{f}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}0{{{f{{l{c}}}}}FhA`}0{{IhIh}Ih}{{{f{{l{El}}}}Lb}{{Bd{bBb}}}}{{{f{{AJ`{Lb}}}}Lb}{{Bd{bBb}}}}````{{{f{c}}h}b{}}{{AJb{f{c}}d}LbAIh}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{AJb}}}AJb}{{{f{c}}{f{Cne}}}b{}{}}{{}AJb}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{AJb}}{f{AJb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AJb}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{{f{AJb}}{f{Cnc}}}bAGb}{{}Fh}{ce{}{}}{{{f{{l{c}}}}}{{Gf{Fh{l{c}}}}}Dd}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}4`{{Fh{f{Cn{Fn{d}}}}}b}```{{{f{AHj}}FhFh}AHj}0{{Fh{f{{Al{B`}}}}{f{CnF`}}}{{Bd{{AJd{{l{El}}}}Bb}}}}{{{f{{Al{B`}}}}{f{{Al{d}}}}d}{{Bd{AJfBb}}}}{{{f{An}}{f{{Al{B`}}}}{f{{Al{d}}}}d}{{Bd{{l{En}}Bb}}}}{{{f{An}}{f{{Al{B`}}}}}{{Bd{{l{En}}Bb}}}}{{{f{B`}}}{{Bd{{Ch{Cf}}Bb}}}}{{{f{{Al{B`}}}}}{{Bd{AJfBb}}}}{{{f{{Al{B`}}}}}{{Bd{{l{En}}Bb}}}}0```````````77`{AJhGb}00{{{f{An}}}{{Bd{EhBb}}}}{{{f{An}}}{{Bd{AJjBb}}}}{{{f{AJl}}}Gb}333````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000000{{{f{AJn}}c}AJn{{E`{{f{B`}}}{{Df{B`}}}}}}{{{f{AK`}}}d}{{{f{Id}}}{{`{{Cj{}{{Cd{Id}}}}}}}}{{{f{Id}}{f{Cn{Fn{Id}}}}}b}{{AK`d}AK`}{{{f{{Jb{JlJj}}}}{f{{Jb{JlJj}}}}}}{{{f{Id}}{f{Id}}}Id}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{l{n}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Ah}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Af}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{AJn}}{f{Bj}}}B`}{{{f{CnAKb}}{Cb{{f{An}}}}}b}{{{f{CnAK`}}{f{AK`}}}{{Bd{bBb}}}}{{{f{CnAKb}}}b}{{{f{CnAKb}}{f{An}}}b}{{{f{AK`}}Ej}{{l{El}}}}{eAKd{}{{Gh{}{{Cd{c}}}}}}0{{ADde}AKf{}{{Gh{}{{Cd{c}}}}}}0{{{f{Id}}}Id}{{{f{{Jb{J`In}}}}}{{`{Ib}}}}{{{f{{Jb{JhJd}}}}}{{`{Ib}}}}{{{f{Ef}}}{{f{Ef}}}}{{{f{Mn}}}{{f{Ef}}}}{{{f{AKh}}}{{f{Ef}}}}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{Cb{{f{{Al{c}}}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{{Jb{KbJd}}}}}{{`{Ib}}}}{{{f{c}}}{{f{e}}}{}{}}000000000000000000000000000000000000000000{{{f{Cnc}}}{{f{Cne}}}{}{}}000000000000000000000000000000000000000000{Ef{{Ch{Ef}}}}{{{ALd{An}}}ALf}{{{f{AK`}}{f{AK`}}c}{{Bd{AK`Bb}}}ALh}{{{f{ALj}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{Jb{JlJj}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{Jb{J`In}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{Jb{JhJd}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{Jb{KbJd}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{{Jb{JnJd}}}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{AK`}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{AJn}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{Id}}{f{Ef}}}Id}{{{f{{Jb{JhJd}}}}Jf}{{Jb{JhJd}}}}{{{f{{Jb{JnJd}}}}Jf}{{Jb{JnJd}}}}`{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}00000000{{{f{{l{Ed}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Eb}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{AJn}}}{{f{{Fn{{Ch{Cf}}}}}}}}{{{f{{Jb{ce}}}}}{{Jb{ce}}}DdDd}{{{f{ALl}}}ALl}{{{f{ALf}}}ALf}{{{f{AK`}}}AK`}{{{f{AJn}}}AJn}{{{f{ALn}}}ALn}{{{f{Id}}}Id}{{{f{AM`}}}AM`}{{{f{Ef}}}Ef}{{{f{Mn}}}Mn}{{{f{Jf}}}Jf}{{{f{Ln}}}Ln}{{{f{Md}}}Md}{{{f{El}}}El}{{{f{M`}}}M`}{{{f{Ld}}}Ld}{{{f{Lh}}}Lh}{{{f{In}}}In}{{{f{Jd}}}Jd}{{{f{Ed}}}Ed}{{{f{Eb}}}Eb}{{{f{J`}}}J`}{{{f{Kb}}}Kb}{{{f{n}}}n}{{{f{Ah}}}Ah}{{{f{En}}}En}{{{f{Af}}}Af}{{{f{Jl}}}Jl}{{{f{Jh}}}Jh}{{{f{Jn}}}Jn}{{{f{AMb}}}AMb}{{{f{ADd}}}ADd}{{{f{AMd}}}AMd}{{{f{c}}{f{Cne}}}b{}{}}00000000000000000000000000000000{{{f{CnMn}}Ef}b}{AMfe{}{{AKd{c}}AIh}}0{{AMfADd}e{}{{AKf{c}}AIh}}0{{{f{Ef}}}d}00{{{ALd{An}}}Ef}{{{f{Mn}}}{{f{Ef}}}}{{{f{{Jb{JnJd}}}}}{{l{Jd}}}}{{}AMh}{{}ALl}{{}ALf}{{}Id}{{}AM`}{{}Ef}{{}ADd}{Fh{{f{c}}}{}}0{{{f{{Jb{ce}}}}}fDdDd}11111111111111111111111111111111111111111{Fh{{f{Cnc}}}{}}0{{{f{Cn{Jb{ce}}}}}{{f{Cn}}}DdDd}11111111111111111111111111111111111111111{{{f{{Jb{JlJj}}}}{f{{Jb{JlJj}}}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{AKbc}AK`{{Gh{}{{Cd{{Cb{{f{An}}}}}}}}}}{Fhb}00000000000000{{{f{CnAJn}}}b}1111111111111111111111111111{{{f{ALj}}}{{f{Ef}}}}{{{f{{Jb{JhJd}}}}}{{f{Ef}}}}{{{f{{Jb{KbJd}}}}}{{f{Ef}}}}{{{f{{Jb{J`In}}}}}{{f{Ef}}}}{{{f{{Jb{JnJd}}}}}{{f{Ef}}}}{{{f{{Jb{JlJj}}}}}{{f{Ef}}}}{{{f{AK`}}}{{f{Ef}}}}{{{f{AJn}}}{{f{Ef}}}}{{{f{Id}}}Ef}`{{{f{ALl}}{f{ALl}}}d}{{{f{Id}}{f{Id}}}d}{{{f{AM`}}{f{AM`}}}d}{{{f{Ef}}{f{Ef}}}d}{{{f{Ef}}{f{ADd}}}d}{{{f{Mn}}{f{Mn}}}d}{{{f{Jf}}{f{Jf}}}d}{{{f{ADd}}{f{ADd}}}d}{{{f{AMd}}{f{AMd}}}d}{{{f{Id}}{f{Id}}d}d}{{{f{AK`}}{f{{l{n}}}}}}{{{f{AK`}}{f{An}}}}{{{f{AK`}}{f{AK`}}}}{{{f{AJn}}{f{AJn}}}{{l{Af}}}}2310{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{{Jb{ce}}}}}MnDdDd}{{{f{AJn}}{f{An}}}{{Bd{B`Bb}}}}{{{f{AJn}}}{{f{{Al{B`}}}}}}{{{f{CnAJn}}}{{f{Cn{Fn{B`}}}}}}{{{f{ALf}}{f{An}}}{{Cb{Lb}}}}{{ALh{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{AKbAK`}{AMh{{ADn{ALf}}}}{{{f{ALl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{ALf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{ALn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Id}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{AM`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Ef}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{Mn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Jf}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{ADd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AMd}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}0{{{l{Jd}}}{{Jb{KbJd}}}}{{{l{In}}}{{Jb{J`In}}}}22222222222222{{{Cb{c}}}Id{{AMj{Id}}}}3{cIdAMl}4{{{f{ADd}}}Ef}{{{f{Id}}}Ef}6{IdEf}{{{f{AMn}}}Mn}{{{f{Id}}}Mn}99{{{f{AMd}}}Jf}::::::::::::::::::::{AN`ADd}{ANbADd}<<{{{f{ADd}}d}Ef}{{{l{El}}{ADn{ALf}}dALl}AK`}{{{f{An}}cJf}{{Jb{JnJd}}}{{Gh{}{{Cd{ANd}}}}}}{{{f{An}}cJf}{{Jb{JnJd}}}{{Gh{}{{Cd{{Cb{ANd}}}}}}}}{{{l{El}}ALl}AK`}{{{f{An}}c}{{Jb{J`In}}}{{Gh{}{{Cd{ANf}}}}}}{{{f{An}}c}{{Jb{J`In}}}{{Gh{}{{Cd{{Cb{ANf}}}}}}}}{{{f{An}}cJf}{{Jb{JhJd}}}{{Gh{}{{Cd{AJh}}}}}}{{{f{An}}cJf}{{Jb{JhJd}}}{{Gh{}{{Cd{{Cb{AJh}}}}}}}}{{{f{An}}c}{{Jb{KbJd}}}{{Gh{}{{Cd{AJl}}}}}}{{{f{An}}c}{{Jb{KbJd}}}{{Gh{}{{Cd{{Cb{AJl}}}}}}}}{{{ANj{ANh}}Ef}Mn}{{{f{{l{n}}}}{f{{ALd{An}}}}ALl}{{Bd{AK`Bb}}}}{{{Fn{c}}ADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{Fn{c}}ADd}{{AIh{}{{AKj{e}}{AKl{c}}{AKn{g}}}}}{AL`{ALb{e}}}ABf{{G`{}{{Cd{e}}}}IbHjHl}}{{FhcADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{FhADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{An}}dFhALl}AK`}{{{f{An}}Fh}AJn}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{ALf}}Lb}{{f{An}}}}{{{f{{Jb{JhJd}}}}Fh}{{Bd{IdBb}}}}{{{f{{Jb{JlJj}}}}Fh}{{Bd{IdBb}}}}{{{f{{Jb{J`In}}}}Fh}{{Bd{IdBb}}}}{{{f{{Jb{JnJd}}}}Fh}{{Bd{IdBb}}}}{{{f{{Jb{KbJd}}}}Fh}{{Bd{IdBb}}}}{{{f{ALj}}Fh}{{Bd{IdBb}}}}{{{f{AK`}}Fh}{{Bd{IdBb}}}}{{{f{AJn}}Fh}{{Bd{IdBb}}}}{{{f{{Jb{JlJj}}}}Fh}Id}{{{f{{Jb{KbJd}}}}Fh}Id}{{{f{{Jb{J`In}}}}Fh}Id}{{{f{{Jb{JnJd}}}}Fh}Id}{{{f{{Jb{JhJd}}}}Fh}Id}{{{f{ALj}}Fh}Id}{{{f{AK`}}Fh}Id}{{{f{AJn}}Fh}Id}{{{f{ALf}}}{{f{{ALd{An}}}}}}{{}Ef}000000000000000000000000{{{f{ALf}}Lb}{{Cb{{f{An}}}}}}{{{f{AK`}}}{{f{{ADn{ALf}}}}}}{{{f{Id}}}{{Cb{{f{An}}}}}}{{{f{ANl}}Fh}Id}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{AK`}}{f{{l{n}}}}}}{{{f{AK`}}{f{AK`}}}}{{{f{AK`}}{f{An}}}}{{{f{AJn}}{f{AJn}}}{{l{Af}}}}1320{{{f{Id}}{f{Cnc}}}bAGb}{{{f{AM`}}{f{Cnc}}}bAGb}{{{f{Ef}}{f{Cnc}}}bAGb}{{{f{Jf}}{f{Cnc}}}bAGb}{{{f{ADd}}{f{Cnc}}}bAGb}{{{f{AMd}}{f{Cnc}}}bAGb}{{{f{Id}}{f{Cnc}}d}bAGb}{{{f{{Jb{KbJd}}}}}{{l{Ld}}}}{{{f{{Jb{JnJd}}}}}{{l{Jd}}}}{{}Fh}000000000000000000000000000000000000000000{{{f{Ef}}}{{Cb{{f{Ef}}}}}}{{{f{ADd}}}{{Cb{{f{ADd}}}}}}{ce{}{}}0000000000000000000000000000000000000000000{{{f{AJn}}}}{{{Jb{JhJd}}}B`}{{{Jb{JlJj}}}B`}{{{Jb{JnJd}}}B`}{{{Jb{J`In}}}B`}{{{Jb{KbJd}}}B`}{{Nd{f{An}}}B`}{AK`B`}{AJnB`}{Id{{Bd{IdBb}}}}{{{f{Ef}}}d}00{{{f{Id}}}d}11{{{f{AK`}}}d}{{{f{AJn}}}d}1323{{{f{ALf}}}d}34440443434344443444434{{{f{ADd}}}d}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{ADl{cgADj}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{AJn}}}ACn}{{{f{AK`}}}ANn}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{ALf}}}Fh}{{{f{AK`}}}Fh}{{{f{AJn}}}Fh}{{{f{AK`}}{f{An}}}}{{{f{AK`}}{f{{l{n}}}}}}{{{f{AK`}}{f{AK`}}}}{{{f{AJn}}{f{AJn}}}{{l{Af}}}}3210{{{f{AK`}}{f{AK`}}}{{Bd{{Gf{AK`AK`}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gf{{l{j}}{l{j}}}}Bb}}}}{{{f{Ef}}{f{Ef}}}{{Bd{dBb}}}}{{{f{AK`}}}B`}{{{f{Ef}}{f{Ef}}}{{Bd{EfBb}}}}{{{f{CnAMh}}{f{{ADn{ALf}}}}}{{Bd{bBb}}}}{{{f{{Jb{JnJd}}}}}{{l{Jd}}}}03{{{f{{Jb{KbJd}}}}}{{l{Ld}}}}1{{{f{{Jb{JhJd}}}}{Cb{{f{AJj}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{{Jb{J`In}}}}{Cb{{f{AJj}}}}}{{Bd{{Jb{J`In}}Bb}}}}01{{{f{{Jb{JlJj}}}}{f{{Jb{JlJj}}}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{AK`}}}{{Bd{FhBb}}}}{{{f{AK`}}}{{f{An}}}}{{{f{AJn}}}{{f{{ANj{ANh}}}}}}{{{f{Mn}}}{{f{{ANj{ANh}}}}}}`{{{f{{Jb{KbJd}}}}}{{l{In}}}}:{{}c{}}0{{{f{An}}FhALl}AKb}{{{f{An}}c}{{Jb{J`In}}}{{Hb{{Al{{Cb{ANf}}}}}}}}{{{f{An}}c}{{Jb{KbJd}}}{{Hb{{Al{{Cb{AJl}}}}}}}}{{{f{An}}c}{{Jb{JnJd}}}{{Hb{{Al{ANd}}}}}}{{{f{An}}c}{{Jb{J`In}}}{{Hb{{Al{ANf}}}}}}{{{f{An}}c}{{Jb{KbJd}}}{{Hb{{Al{AJl}}}}}}{{{f{An}}c}{{Jb{JhJd}}}{{Hb{{Al{AJh}}}}}}{{{f{An}}c}{{Jb{JhJd}}}{{Hb{{Al{{Cb{AJh}}}}}}}}{{{f{An}}c}{{Jb{JnJd}}}{{Hb{{Al{{Cb{ANd}}}}}}}}{{EfId}Nd}{{{ADn{ALf}}}AMh}{{{f{An}}{f{{Al{B`}}}}}{{Bd{AJnBb}}}}{{{f{An}}Ef}Mn}{{{f{CnANn}}}Cb}{{{f{AK`}}{f{AK`}}}}{{{f{AK`}}{f{An}}}}{{{f{AK`}}{f{{l{n}}}}}}{{{f{AJn}}{f{AJn}}}{{l{Af}}}}3210{{{f{AK`}}}Fh}{{{f{AJn}}}Fh}{{{f{An}}{f{{Al{{f{An}}}}}}{f{An}}}{{Jb{KbJd}}}}{{{f{An}}{f{{Al{{f{An}}}}}}{f{An}}}{{Jb{J`In}}}}{{{f{Id}}{f{Id}}}{{Cb{AO`}}}}{{{f{Jf}}{f{Jf}}}{{Cb{AO`}}}}{{{f{AK`}}}{{f{{l{El}}}}}}{{{f{{Jb{JlJj}}}}}{{Cb{Fh}}}}{{{f{CnAJn}}}b}{{{f{AJn}}}{{f{Mn}}}}{{{f{CnAKb}}{f{An}}}{{Gf{Lbd}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{CnAJn}}{f{An}}}b}{{{f{{Jb{J`In}}}}{f{{l{n}}}}AOb{Cb{{f{AJj}}}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{{Jb{JhJd}}}}{f{{l{n}}}}AOb{Cb{{f{AJj}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{AJn}}}{{Bd{{l{En}}Bb}}}}{{{f{ALf}}{f{ALf}}}d}{{{f{{Jb{JlJj}}}}}Fh}{{{f{{Jb{KbJd}}}}}{{l{Ld}}}}{{{f{{Jb{JnJd}}}}}{{l{Jd}}}}{{{f{CnMn}}{ANj{ANh}}}b}{{{f{Cn{Jb{JhJd}}}}Jf}b}{{{f{Cn{Jb{JnJd}}}}Jf}b}{{{f{Cn{Jb{JhJd}}}}Eh}{{Bd{bBb}}}}{{{f{ANn}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{AK`}}d}AK`}{{{f{AK`}}Ej}AK`}{{{f{{Jb{KbJd}}}}{f{An}}}{{l{n}}}}{{{f{{Jb{JhJd}}}}{f{An}}}{{Bd{{l{n}}Bb}}}}{{{f{{Jb{J`In}}}}{f{An}}}{{l{n}}}}{{{f{Id}}{f{Ef}}}{{Cb{Id}}}}{{{f{{Jb{JlJj}}}}{f{{Jb{JlJj}}}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{Jb{JnJd}}}}}Jf}{{{f{{Jb{JhJd}}}}}Jf}{{{f{{Jb{JhJd}}}}}{{f{{Cb{Eh}}}}}}{{{f{AK`}}dd}{{Ch{Cf}}}}{{{f{Ef}}d}ADd}{{{f{Mn}}d}AMn}{JfAMd}{{{f{Ef}}{f{An}}d}AMn}{Jf{{f{An}}}}{{{f{AK`}}{f{{ALd{An}}}}AOd}AK`}{{{f{AK`}}}{{Bd{AK`Bb}}}}{{{f{AK`}}}AK`}{{{f{ADd}}}{{f{ADd}}}}{{{f{c}}}e{}{}}00000000000000000000000000000000{{{f{Ef}}}Ef}{{{f{ADd}}}AOf}{{{f{{Jb{KbJd}}}}{f{An}}}{{l{n}}}}{{{f{{Jb{J`In}}}}{f{An}}}{{l{n}}}}{{{f{{Jb{JhJd}}}}{f{An}}}{{Bd{{l{n}}Bb}}}}{{{f{c}}}Eh{}}00{{{f{AJn}}}Fh}{{{f{{Jb{J`In}}}}{Cb{{f{AJj}}}}{f{{l{n}}}}{f{An}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{{Jb{JhJd}}}}{Cb{{f{AJj}}}}{f{{l{n}}}}{f{An}}}{{Bd{{Jb{JhJd}}Bb}}}}{g{{Bd{AKde}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{{ADdg}{{Bd{AKfe}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{AMf{{Bd{eg}}}{}{{AKd{c}}AIh}{}}0{{AMfADd}{{Bd{eg}}}{}{{AKf{c}}AIh}{}}0{{{f{Id}}}{{Bd{cBb}}}Kn}{c{{Bd{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{Id}}{f{Ef}}}{{Bd{IdBb}}}}{{{f{Ef}}d}{{Bd{ADdBb}}}}{{{f{c}}}Ol{}}000000000000000000000000000000000000000000{{{f{ADd}}}ADd}{{{f{AK`}}}{{Bd{AK`Bb}}}}{AJnAOh}{{{f{AK`}}}d}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}cABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{Nd}}}{{f{Id}}}}{{{f{AK`}}}{{Bd{AOhBb}}}}2{{{f{Ef}}Id}d}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}gABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{ce{}{}}000000000000000000000000000000000000000000{Fhc{}}0{{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}{Cb{Hd}}}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{Ef}}}Id}```````````{{{f{AK`}}{f{AK`}}c}{{Bd{AK`Bb}}}ALh}{{ALh{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{{{f{AK`}}{f{AK`}}}{{Bd{{Gf{AK`AK`}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gf{{l{j}}{l{j}}}}Bb}}}}`````````{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{}AOj}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{{}b}{Fhb}{{{f{CnAOj}}}b}2{cc{}}6{{}Fh}{ce{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}{{}d}3```````````````````````{{{f{AOl}}}{{f{An}}}}>>>===`{{BbAOl}Bb}{BbBb}=={{{f{AOl}}}f}>===;;;`{{{f{AOn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AOl}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{Bb}}{f{CnGj}}}{{Bd{bGl}}}}0<<{cAOl{{AMj{{Dl{An}}}}}}{B@`Bb}{B@bBb}{B@dBb}{B@fBb}{cc{}}{B@hBb}{B@jBb}{{}{{Fj{{f{An}}AOn}{{Df{b}}}}}}{{}Fh}00{ce{}{}}00{cBbAIl}````{{{Fj{{f{An}}AOn}{{Df{b}}}}}b}{cBbB@l}{{{f{c}}}Eh{}}0{c{{Bd{e}}}{}{}}00000{{{f{c}}}Ol{}}00666``````````````````{{{f{c}}h}b{}}00{{{f{CnAOh}}{Fn{B`}}{f{B@n}}}{{Bd{bBb}}}}{{{f{AOh}}{f{Dh}}}{{Fn{B`}}}}0{{{f{AOh}}{f{{l{Af}}}}}{{Bd{AOhBb}}}}{{{f{AOh}}{f{{Al{{ANj{ANh}}}}}}}{{Bd{AOhBb}}}}0{{{f{AOh}}GbFh}AOh}{{{f{CnAOh}}}{{f{CnAOh}}}}{{{f{CnAOh}}{f{An}}e}{{Bd{{f{CnAOh}}Bb}}}BA`{{A@`{{f{B`}}}{{Df{c}}}}}}{{{f{CnAOh}}Fhe}{{Bd{{f{CnAOh}}Bb}}}BA`{{A@`{{f{B`}}}{{Df{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Cnc}}}{{f{Cne}}}{}{}}0000{{{f{AOh}}}AOh}{{{f{BAb}}}BAb}{{{f{BAd}}}BAd}2{{{f{c}}{f{Cne}}}b{}{}}00{{{f{AOh}}{f{An}}}{{Bd{{f{B`}}Bb}}}}{{{f{AOh}}e}{{Bd{{Fn{{f{B`}}}}Bb}}}{{Hb{An}}}{{Gh{}{{Cd{c}}}}}}{{}BAd}{{}AOh}{Fh{{f{c}}}{}}0000{Fh{{f{Cnc}}}{}}0000{Fhb}000{{{f{AOh}}{f{An}}}{{Bd{AOhBb}}}}1{{{f{CnAOh}}{f{An}}}{{Bd{B`Bb}}}}{{{f{AOh}}{f{{Al{c}}}}}AOh{{Hb{An}}}}{{{f{AOh}}{f{{BAf{{f{An}}Nl}}}}}AOh}{{{f{AOh}}{Cb{{f{{Al{c}}}}}}}{{Bd{AOhBb}}}{{Hb{An}}}}{{{f{AOh}}}{{Fn{Ef}}}}9{{{f{BAd}}{f{BAd}}}d}{{{f{AOh}}{f{AOh}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{AOh}}}Fh}`{{{f{AOh}}e}{{Bd{AOhBb}}}{{Hb{An}}}{{Gh{}{{Cd{c}}}}}}{{{f{AOh}}{Fn{B`}}}{{Bd{AOhBb}}}}{{{f{CnAOh}}{f{AOh}}}{{Bd{bBb}}}}{{{f{AOh}}}{{Fn{Mn}}}}{{{f{AOh}}AFb}{{Bd{AOhBb}}}}{{{f{AOh}}{f{{l{Af}}}}}{{Bd{AOhBb}}}}{{{f{BAb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BAd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AOh}}{f{CnGj}}}{{Bd{bGl}}}}0{cc{}}000{{{f{BAh}}}AOh}1{{{f{B@n}}}AOh}{AJnAOh}{g{{Bd{ic}}}{}{}{{H`{c}{{Cd{e}}}}}{}}{cAOh{{Gh{}{{Cd{B`}}}}}}{{{f{{Al{BAj}}}}}{{Bd{AOhBb}}}}{{{f{{Al{BAj}}}}{f{B@n}}}{{Bd{AOhBb}}}}{{c{f{B@n}}}{{Bd{AOhBb}}}{{Cj{}{{Cd{{f{BAj}}}}}}}}{{{f{AOh}}Fh}{{Cb{{Fn{Id}}}}}}{{{f{AOh}}{f{An}}}{{Cb{Fh}}}}{{{f{AOh}}}{{Fn{{f{An}}}}}}{{{f{AOh}}}{{Fn{{ANj{ANh}}}}}}{{{f{AOh}}}{{f{{Al{B`}}}}}}{{{f{CnAOh}}}{{f{Cn{Fn{B`}}}}}}{{{f{AOh}}Fh}{{Bd{BAjBb}}}}{{{f{AOh}}Fh{f{CnBAj}}}{{Bd{bBb}}}}{{{f{AOh}}Fh{f{CnBAj}}}b}{{{f{AOh}}}{{Cb{{Bd{EfBb}}}}}}`{{{f{AOh}}e}{{Bd{BAlBb}}}{{Hb{An}}}{{Gh{}{{Cd{c}}}}}}{{{f{AOh}}{Fn{B`}}{f{BAn}}}{{Bd{{Gf{B`{Fn{B`}}Bj}}Bb}}}}1{{{f{AOh}}{Fn{B`}}dd}{{Bd{BAlBb}}}}{{{f{BAd}}{f{Cnc}}}bAGb}{{{f{AOh}}{Cb{Fh}}}AOh}{{{f{AOh}}}Fh}{{{f{AOh}}{f{{Al{B`}}}}}{{Bd{AOhBb}}}}{{{f{CnAOh}}{f{{Al{B`}}}}}{{Bd{{f{CnAOh}}Bb}}}}{{{f{CnAOh}}{f{{Al{B`}}}}}{{f{CnAOh}}}}{{{f{AOh}}{BB`{Fh}}}f}{{{f{AOh}}{Mb{Fh}}}f}{{{f{AOh}}BBb}f}{{{f{AOh}}{BBd{Fh}}}f}{{{f{AOh}}{BBf{Fh}}}f}{{{f{AOh}}{f{An}}}f}{{{f{AOh}}{BBh{Fh}}}f}{{{f{AOh}}Fh}f}{{}Fh}0000{{{f{CnAOh}}Fhc}{{Bd{{f{CnAOh}}Bb}}}BA`}{ce{}{}}000000{{AOh{f{An}}}AJn}{{{f{AOh}}}{{Bd{{l{Af}}Bb}}}}{{{f{AOh}}}d}1{{{f{AOh}}}{{Ff{B`}}}}{{{f{AOh}}d}BBj}{{{f{AOh}}}BBl}{AOhBBn}{{{f{AOh}}}{{Bd{{Cb{B`}}Bb}}}}{{{f{AOh}}BAb}{{Bd{{Cb{B`}}Bb}}}}{{{f{AOh}}ce}{{Bd{AOhBb}}}{{BC`{{ANj{ANh}}}}}{{BC`{{ANj{ANh}}}}}}{{{f{AOh}}BCb}{{Bd{AOhBb}}}}3{{{f{AOh}}}Fh}{{{Fn{c}}}{{Bd{AOhBb}}}BA`}{{{Fn{B`}}}AOh}{{{Fn{B`}}}{{Bd{AOhBb}}}}{{{f{CnBBj}}}Cb}{{{f{CnBBl}}}Cb}{{{f{AOh}}}AOh}{{AOhe}{{Bd{cBb}}}{}{{Dh{AOh}{{Df{{Bd{cBb}}}}}}}}{{{f{CnAOh}}e}{{Bd{cBb}}}{}{{Dh{{f{CnAOh}}}{{Df{{Bd{cBb}}}}}}}}{{AOhgc}{{Bd{eBb}}}{}{}{{Dh{AOhc}{{Df{{Bd{eBb}}}}}}}}{{{f{CnAOh}}}{{Cb{B`}}}}{{{f{AOh}}{f{AOh}}}d}{{{f{CnAOh}}{f{An}}{f{An}}}{{Bd{{f{CnAOh}}Bb}}}}{{{f{CnAOh}}{f{An}}c}{{Bd{{f{CnAOh}}Bb}}}BA`}{{{f{CnAOh}}Fhc}{{Bd{{f{CnAOh}}Bb}}}BA`}18{{{f{AOh}}{Fn{B`}}{f{BCd}}}{{Bd{{Gf{B`{Fn{B`}}Bj}}Bb}}}}`{{{f{AOh}}{f{B`}}dd{Cb{Il}}}{{Bd{AOhBb}}}}0{{{f{AOh}}Fhdd{Cb{Il}}}{{Bd{AOhBb}}}}{{{f{AOh}}}B@n}{{{f{AOh}}{f{AOh}}}{{Bd{bBb}}}}{{{f{AOh}}e}{{Bd{AOhBb}}}{{Hb{An}}}{{Gh{}{{Cd{c}}}}}}{{{f{AOh}}Fh}{{Cb{{f{B`}}}}}}{{{f{AOh}}c}{{Bd{AOhBb}}}{{BCf{Fh}}}}2{{{f{AOh}}c}{{Bd{{Fn{B`}}Bb}}}{{BC`{{ANj{ANh}}}}}}{{{f{AOh}}e{f{{ADn{B@n}}}}}{{Bd{AOhBb}}}{{Hb{An}}}{{Gh{}{{Cd{c}}}}}}{{{f{AOh}}e{f{B@n}}}{{Bd{AOhBb}}}{{Hb{An}}}{{Gh{}{{Cd{c}}}}}}{{{f{CnAOh}}{f{{Al{c}}}}}{{Bd{bBb}}}{{Hb{An}}}}{{{f{AOh}}}{{Gf{FhFh}}}}{{{f{AOh}}Gb}AOh}{{{f{AOh}}}d}{{{f{CnAOh}}}b}{{{f{BBj}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{BBl}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{AOh}}GbFh}AOh}0{{{f{AOh}}cF`}{{Bd{AOhBb}}}{{BC`{{ANj{ANh}}}}}}{{{f{CnAOh}}cF`}{{Bd{{f{CnAOh}}Bb}}}{{BC`{{ANj{ANh}}}}}}{AOh{{`{{Cj{}{{Cd{AOh}}}}}}}}{{AOhFhd}{{Fn{AOh}}}}{{{f{AOh}}BAb}{{Bd{{Cb{B`}}Bb}}}}{{{f{AOh}}{Cb{Fh}}}AOh}{{{f{AOh}}{f{{l{El}}}}}{{Bd{AOhBb}}}}{{{f{AOh}}{f{{l{El}}}}}AOh}{{{f{AOh}}{f{{l{El}}}}d}AOh}{{{f{AOh}}}{{f{AOh}}}}{{{f{AOh}}BCh}{{Bd{{Of{Oh{Od{{Ob{Fh}}}}}}Bb}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Eh{}}{{{f{AOh}}FhcF`}{{Bd{AOhBb}}}{{BC`{{ANj{ANh}}}}}}{{{f{CnAOh}}{Cb{{f{An}}}}{Cb{{Oj{Eh{Fn{Eh}}}}}}}{{Bd{AOhBb}}}}{{{f{CnAOh}}{f{An}}e}{{Bd{{f{CnAOh}}Bb}}}BA`{{A@`{{f{B`}}}{{Df{{Bd{cBb}}}}}}}}{{{f{CnAOh}}Fhe}{{Bd{{f{CnAOh}}Bb}}}BA`{{A@`{{f{B`}}}{{Df{{Bd{cBb}}}}}}}}{c{{Bd{e}}}{}{}}0000{BCj{{Bd{AOhBb}}}}{{{Gf{{BCl{{Ch{Cf}}}}{f{{Al{AMn}}}}}}}{{Bd{AOhBb}}}}{{c{f{B@n}}}{{Bd{AOhBb}}}{{Cj{}{{Cd{{Bd{{f{BAj}}Bb}}}}}}}}{{{f{AOh}}{f{An}}}{{Bd{FhBb}}}}44444{{{f{c}}}Ol{}}0000{{{f{AOh}}{Cb{{f{{Al{Eh}}}}}}BAd{Cb{{Gf{GbFh}}}}}{{Bd{AOhBb}}}}{{{f{AOh}}d{Cb{{f{{Al{Eh}}}}}}BAd{Cb{{Gf{GbFh}}}}}{{Bd{AOhBb}}}}1{{{f{AOh}}c}{{Bd{AOhBb}}}{{BC`{Eh}}}}{{{f{AOh}}c{f{An}}AObAOb}{{Bd{AOhBb}}}{{BC`{Eh}}}}0{{{f{AOh}}{f{AOh}}}{{Bd{AOhBb}}}}{{{f{CnAOh}}{f{AOh}}}{{Bd{{f{CnAOh}}Bb}}}}{ce{}{}}0000{{{f{AOh}}}Fh}{{{f{CnAOh}}c}{{Bd{{f{CnAOh}}Bb}}}BA`}{{{f{CnAOh}}c{f{B@n}}}{{Bd{{f{CnAOh}}Bb}}}BA`}{{{f{CnAOh}}B`}{{f{CnAOh}}}}{{{f{AOh}}{f{An}}{Cb{Lb}}}{{Bd{AOhBb}}}}{{{f{CnAOh}}{f{An}}{Cb{Lb}}}{{f{CnAOh}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{BCb}}}BCb}{{{f{c}}{f{Cne}}}b{}{}}{{}BCb}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{BCb}}{f{BCb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCb}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{{f{BCb}}{f{Cnc}}}bAGb}`{{}Fh}{ce{}{}}`{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}```3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BAl}}}{{Bd{AOhBb}}}}`{{{f{BCn}}}{{f{{Al{{BD`{Lb}}}}}}}}{{{f{BAl}}c}{{Bd{AOhBb}}}{{E`{AOh}{{Df{{Bd{AOhBb}}}}}}HjHl}}{{{f{Bj}}}{{l{j}}}}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Cnc}}}{{f{Cne}}}{}{}}0000000{{{f{BCn}}}BCn}{{{f{Bj}}}Bj}{{{f{BAl}}}BAl}{{{f{BDb}}}BDb}{{{f{c}}{f{Cne}}}b{}{}}000:{{}BCn}{{}Bj}{Fh{{f{c}}}{}}000{{{f{BDd}}}f}1111{Fh{{f{Cnc}}}{}}0000000`{{BDfc}{}BDh}{Fhb}0000{{{f{CnBCn}}}b}111{{{f{BCn}}{f{BCn}}}d}{{{f{Bj}}{f{Bj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BDj}}}Lb}{{{f{BCn}}}{{f{{Al{Lb}}}}}}{{{f{BAl}}}{{Bd{AOhBb}}}}{{{f{CnBCn}}}{{f{Cn{Fn{Lb}}}}}}{{{f{BCn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Bj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BAl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BDb}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{An}}BDb}Eh}{cc{}}0000{{{Fn{{Fn{{Gf{Lb{BD`{Lb}}}}}}}}}BCn}{{{Fn{{Gf{{Fn{Lb}}{Fn{{BD`{Lb}}}}}}}}}BCn}{{{Fn{{Gf{Lb{BD`{Lb}}}}}}}BCn}3{BCnBj}44{BDlBDb}{g{{Bd{ic}}}{}{}{{H`{c}{{Cd{e}}}}}{}}{cBCn{{Gh{}{{Cd{{Gf{Lb{BD`{Lb}}}}}}}}}}{cBCn{{Hn{}{{Cd{{Gf{Lb{BD`{Lb}}}}}}}}}}{{{f{Bj}}Fh}BDj}{{{f{BAl}}}{{f{Bj}}}}{{{f{CnBAl}}}{{f{CnBj}}}}{{{f{Bj}}}{{l{El}}}}{{{f{BDn}}dd}{{Bd{BjBb}}}}{{{f{BAl}}}{{Bd{AOhBb}}}}{{{f{CnBj}}}{{f{CnBCn}}}}{{}Fh}0000000{ce{}{}}0000000{BjBCn}1{BCn}{{{f{BCn}}}}301{{{f{BDj}}}d}{{{f{Bj}}}d}{{{f{BCn}}}d}{{{f{BCn}}}{{BEb{{BE`{{Ff{Lb}}}}{Ff{{BD`{Lb}}}}}}}}{{{f{Bj}}}BEd}{{{f{BAl}}}{{Fn{B`}}}}{{{f{BAl}}{Cb{{Gf{GbFh}}}}}{{Fn{B`}}}}={{{f{BDj}}}Fh}{{{f{Bj}}}Fh}?????{{{Fn{Lb}}{Fn{{BD`{Lb}}}}d}BCn}{{{f{AOh}}{Fn{B`}}Bj{Cb{{Fn{Eh}}}}}BAl}{{{f{CnBEd}}}Cb}{{{f{CnBEd}}Fh}Cb}{{{f{BAl}}c}{{Bd{AOhBb}}}{{Dh{AOh}{{Df{{Bd{AOhBb}}}}}}HjHl}}{{{f{c}}}{}{}}{{{f{Bj}}}BDf}{{{f{BAl}}L`Ml}{{Bd{AOhBb}}}}{{BAle}BAl{{Hb{An}}}{{Gh{}{{Cd{c}}}}}}{{{f{Bj}}GbFh}BDd}{{{f{CnBCn}}}b}{{{f{CnBj}}}b}{{{f{BAl}}Aj}{{Bd{AOhBb}}}}{{{f{BAl}}}{{Bd{AOhBb}}}}{Bj{{Fn{Lb}}}}0{BAlBj}{{{f{CnBAl}}}Bj}{{{f{c}}}e{}{}}000{{{f{c}}}Eh{}}{c{{Bd{e}}}{}{}}000000000000000{{{f{c}}}Ol{}}0000000{BjBj}{{{f{Bj}}}{{f{BCn}}}}{{{f{Bj}}}{{f{{Fn{{Ob{Lb}}}}}}}};{ce{}{}}0000000`````{{{f{BCn}}c}B`{{Dh{{Gf{Lb{f{{BD`{Lb}}}}}}}{{Df{Cb}}}}HjHl}}{{{f{BCn}}c}B`{{Dh{{Gf{Lb{f{{BD`{Lb}}}}}}}{{Df{}}}}HjHl}}{{{f{{Al{{Ob{Lb}}}}}}c}B`{{Dh{{Ob{Lb}}}{{Df{Cb}}}}HjHl}}{{{f{{Al{{Ob{Lb}}}}}}c}B`{{Dh{{Ob{Lb}}}{{Df{}}}}HjHl}}{{{f{{Al{c}}}}e{Cb{{ADn{ADf}}}}}{{AJ`{c}}}{BEfBEh}{{Cj{}{{Cd{{Gf{LbLb}}}}}}Ib}}{{{f{{Al{c}}}}{f{Hd}}e{Cb{{ADn{ADf}}}}}{{AJ`{c}}}{BEfBEh}{{Cj{}{{Cd{{Gf{LbLb}}}}}}Ib}}{{{f{{l{c}}}}LbLb}{{l{c}}}Dd}{{{f{{Fn{{Ob{Lb}}}}}}{f{{Al{{Ch{Cf}}}}}}}d}{{{f{BEj}}{f{Bj}}}B`}{{BElBEl}BEl}0`{{{f{BEn}}{f{AOh}}{f{Bj}}}{{Bd{B`Bb}}}}{{{f{BEn}}}{{Bd{{f{An}}Bb}}}}````````````````````````````````````{{{f{c}}h}b{}}00{{{f{CnBF`}}Id}{{Cb{b}}}}{{{f{CnBFb}}{f{Id}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Cnc}}}{{f{Cne}}}{}{}}00{{{f{BF`}}}BF`}{{{f{BFb}}}BFb}{{{f{BAj}}}BAj}{{{f{c}}{f{Cne}}}b{}{}}00{{{f{{Al{c}}}}}Ef{{Hh{Ef}}}}{{}BAj}{Fh{{f{c}}}{}}00{Fh{{f{Cnc}}}{}}00{Fhb}00{{{f{BAj}}{f{BAj}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BAj}}{f{CnGj}}}{{Bd{bGl}}}}{{{Gf{{f{Ef}}Fh}}}BF`}{cc{}}{{{Gf{{f{Ef}}Fh}}}BFb}11{{eFh}B@n{{AMj{Ef}}}{{Cj{}{{Cd{{Fn{{Gf{Ehc}}}}}}}}}}{{}Fh}00{ce{}{}}00{BF`B`}{BFbB`}{{{f{Ef}}Fh}BF`}{{{f{Ef}}Fh}BFb}{{{Fn{Id}}}BAj}{{{f{CnBF`}}Fh}B`}{{{f{CnBFb}}Fh}B`}{{{f{{Al{BAj}}}}{Cb{Fh}}}{{Bd{B@nBb}}}}0{{{f{{Al{BAj}}}}{Cb{Fh}}}{{Bd{{Fn{Ef}}Bb}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}Ol{}}00<<<{{{f{{Al{AOh}}}}}{{Bd{AOhBb}}}}0`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AOh{f{{Al{{f{An}}}}}}{f{{Al{{f{An}}}}}}{Cb{{f{An}}}}{f{AOh}}}AOh}{{BBnc}{{Bd{AOhBb}}}{{Dh{BFd{f{Cn{BFh{BFf}}}}{f{Cn{BFh{BFj}}}}}{{Df{{Bd{bBb}}}}}}}}{{{f{BFl}}{f{{Al{Lb}}}}dd}AOh}{{{f{BFl}}{Gf{{Oj{{Fn{Lb}}{Fn{Nh}}}}{Oj{{Fn{On}}{Fn{Nh}}}}}}{f{AOh}}BFn}{{Bd{AOhBb}}}}{{{f{An}}{f{An}}}Eh}{{{f{BFl}}{f{AOh}}{f{B`}}{f{B`}}BFnd{Cb{{f{{Al{{f{An}}}}}}}}}{{Bd{AOhBb}}}}{{{f{BFl}}{f{AOh}}{f{B`}}{f{B`}}BFn}{{Bd{AOhBb}}}}{{{f{BG`}}}{{Bd{NdBb}}}}{{{f{BGb}}{f{{Al{Nh}}}}Ih}AOh}0{{{f{BGb}}{f{{Al{Nh}}}}}AOh}0{{{f{BGd}}{Cb{{Fn{{f{An}}}}}}{Cb{{f{An}}}}d}{{Bd{AOhBb}}}}{{BBnd}BBn}{{{BGf{c}}{Cb{{ADn{BGh}}}}}{{BGf{c}}}BGj}{{{f{B`}}}{{Bd{B`Bb}}}}{BGlBGl}{{{BGn{}{{Df{c}}}}{f{B`}}}c{}}{{BGlBGl}}{{{f{AOb}}Gb{Cb{{f{AJj}}}}}{{Bd{GbBb}}}}0{{{f{BH`}}{f{B`}}}{{Bd{B`Bb}}}}1{{BHbc}BBn{{Hb{{Al{BGl}}}}}}5`{{BGl{f{An}}}BGl}{{}BGl}{{BGld}BGl}{c{{Bd{BGlBb}}}{{Hb{{Al{BGl}}}}}}{{{f{{ADn{ce}}}}}{{f{e}}}{}BHd}{{BHfd}BHf}`{{{f{BHh}}}d}0{{{f{BHj}}}d}1`{{BGlc}BGl{{AMj{BGl}}}}{{{ADn{BHh}}BHl}{{Bd{BBnBb}}}}76{{BGlcd}BGl{{AMj{BGl}}}}{{{f{CnAAb}}}b}{{{f{CnAAd}}}b}{{{f{CnAAb}}{Cb{{f{B`}}}}}{{Bd{bBb}}}}{{{f{CnAAd}}{Cb{c}}}b{}}{{{f{CnAAb}}{f{B`}}}{{Bd{bBb}}}}{{{f{CnAAd}}c}b{}}{{{f{{AEh{}{{AEf{c}}}}}}g}{{AEh{}{{AEf{c}}}}}{}{}{{Dh{{Cb{e}}}{{Df{{Cb{c}}}}}}Dj}}{{BHbc{ADn{B@n}}}BBn{{Dh{AOh}{{Df{{Bd{AOhBb}}}}}}HjHl}}{{BGlc{BI`{{ADn{BHn}}}}}BGl{{Dh{B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHl}}{{BGlBGlc{BI`{{ADn{BHn}}}}}BGl{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHl}}{{{f{BGl}}{f{Cnc}}f}{{Bd{BIbBb}}}{{E`{{f{BGl}}f}{{Df{{Bd{BIbBb}}}}}}}}{{{f{AEj}}{f{Dh}}}AEj}{{{f{AEj}}{f{Dh}}}{{l{c}}}Dd}{{BGlc{f{{Al{BGl}}}}{BI`{{ADn{BHn}}}}}BGl{{Dh{{f{Cn{Al{B`}}}}}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHl}}{{BGlBId{f{{Al{BGl}}}}dd}BGl}{{ce{BI`{{ADn{BHn}}}}d}BGl{{Dh{{f{Cn{Al{B`}}}}}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHl}{{Hb{{Al{BGl}}}}}}{{{f{{AEh{}{{AEf{c}}}}}}i{f{Cn{Al{g}}}}}b{}{}{}{{Dh{{Cb{e}}{f{g}}}{{Df{g}}}}}}{{{f{{AEh{}{{AEf{c}}}}}}g}{{AEh{}{{AEf{c}}}}}{}{}{{Dh{e}{{Df{c}}}}Dj}}{{BGlBGlGbEf}BGl}{BCj{{ADn{Cf}}}}{{{f{BIf}}}{{Cb{Fh}}}}{BIhBGl}{BIjBGl}{BGlBGl}3210{{{f{AEl}}Ej}{{l{El}}}}{{BGlEj}BGl}{{{f{BG`}}Ej}{{l{El}}}}{{cF`}BGl{{Hb{{Al{BGl}}}}}}{{{f{AEl}}{f{{Al{B`}}}}{f{F`}}}{{Bd{{l{El}}Bb}}}}{{{f{AEn}}}{{Bd{{l{El}}Bb}}}}6{{{f{BG`}}}{{Bd{{l{El}}Bb}}}}{cBGl{{AMj{BGl}}}}``{BGlBIh}{eAKd{}{{Gh{}{{Cd{c}}}}}}0{{ADde}AKf{}{{Gh{}{{Cd{c}}}}}}0`{{{f{Cn{BIl{c}}}}}{{Bd{BAhBb}}}BIn}{{{f{BHh}}}{{f{ADf}}}}{{{f{BG`}}}{{f{ADf}}}}{{{f{BJ`}}}{{f{ADf}}}}{{{f{BHj}}}{{f{ADf}}}}{{{f{BCj}}}{{f{ADf}}}}{{{f{CnBG`}}}{{f{CnADf}}}}{{{f{CnBCj}}}{{f{CnADf}}}}{{{f{BJb}}}{{f{{l{Ah}}}}}}{{{f{BJd}}{Cb{{f{An}}}}d}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJd}}{Cb{{f{An}}}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJd}}{Cb{{f{An}}}}Jfdd{Cb{{f{Eh}}}}{f{{l{n}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{BJd}}{Cb{{f{An}}}}Jfd{Cb{{f{Eh}}}}{f{{l{n}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{BJf}}}{{Cb{{f{BGl}}}}}}{{{f{{ADn{c}}}}}BJh{BJjNf}}{{{f{BJl}}}{{f{{l{j}}}}}}{{{f{BJf}}}{{Cb{{f{BJn}}}}}}{{{f{{ADn{ce}}}}}{}NfBHd}{{{f{{ADn{c}}}}}LlBK`}{{{f{BKb}}}{{f{BGl}}}}{{{f{{ADn{ce}}}}}{{f{c}}}NfBHd}{{{f{AKh}}}{{f{Ef}}}}{{{f{BKd}}}{{f{B`}}}}{{{f{CnBG`}}}{{Bd{FhBb}}}}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{Cb{{f{{Al{c}}}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{BJf}}}{{Cb{{f{BKf}}}}}}{{{f{BKh}}}{{Cb{{f{BKf}}}}}}{{{f{BKj}}}{{f{{l{n}}}}}}{{{Fn{BGl}}}BGl}{{{f{BJd}}{Cb{{f{An}}}}d}{{Bd{{Jb{KbJd}}Bb}}}}{{{ADn{{BKl{c}}e}}}{{ADn{ce}}}{}BHd}{{{ADn{{Al{{BKl{c}}}}e}}}{{ADn{{Al{c}}e}}}{}BHd}{{{f{An}}}BGl}{{BGl{Cb{Lb}}}BGl}{{{f{BKn}}}{{Bd{{l{n}}Bb}}}}{{{f{BKn}}}{{l{n}}}}{{{f{{Jb{JhJd}}}}{f{Jf}}{f{AJj}}}{{Jb{JnJd}}}}`{{{BGf{{Ch{BGj}}}}{Cb{{ADn{B@n}}}}}{{Bd{BL`Bb}}}}{{{BLb{c}}{f{B@n}}}{{Bd{{BLd{c}}Bb}}}BLf}{{{BLh{c}}{f{B@n}}}{{Bd{{BLj{c}}Bb}}}BLf}{{{BLl{c}}Fh}{{Bd{BLnBb}}}BGj}{{{BM`{c}}{f{B@n}}}{{Bd{{BMb{c}}Bb}}}BLf}{{{f{Cn{BGf{c}}}}}{{Bd{BMdBb}}}BGj}`{BGlBMf}{{BGlBMhBGl}BGl}{{{f{BG`}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{c}}}{{f{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{ADn{ce}}}}}{{f{c}}}NfBHd}11111111111111{{{f{Cnc}}}{{f{Cne}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BBnLbcF`}BBn{{Hb{{Al{BGl}}}}}}{BCj{{Ch{Cf}}}}`{BBnBBn}```{{{f{BMj}}{f{An}}}{{Bd{EhBb}}}}{{BMl{Fn{BGl}}}{{Bd{BGlBb}}}}{{{f{AK`}}{f{AK`}}c}{{Bd{AK`Bb}}}ALh}{{{f{BJ`}}{f{Cn{Al{B`}}}}}{{Bd{{Cb{B`}}Bb}}}}{{{f{BMn}}B`B`}{{Bd{B`Bb}}}}{{BMl{Fn{BGl}}}BGl}{{{f{BN`}}}b}{{BGlEf}BGl}{{{f{AF`}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{ALj}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{BG`}}{f{Ef}}}{{Bd{B`Bb}}}}{{BBn{BNb{{f{An}}EfNl}}d}BBn}4{{BBnEfd}BBn}4`{BGlBNd}{{{f{{ADn{c}}}}}{{Cb{{f{AIl}}}}}{AIlNf}}{BGlBGl}{{{f{BNf}}}{{Bd{B`Bb}}}}1`{{{f{BNh}}}{{Bd{{l{In}}Bb}}}}{{{f{BAh}}{f{BAh}}{Cb{{f{{Al{Eh}}}}}}{f{An}}}{{Bd{bBb}}}}{{{f{B@n}}{f{B@n}}{Cb{{f{{Al{Eh}}}}}}{f{An}}}{{Bd{bBb}}}}0``{{{f{BNj}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BG`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BNj}}c}{{Bd{B`Bb}}}Ad}{{{f{BG`}}}{{Fl{{Ff{{Ch{Cf}}}}{Fj{{f{{Ch{Cf}}}}}{{Df{Fh}}}}}}}}``{{{f{BG`}}}{{f{{Fn{{Ch{Cf}}}}}}}}{{{f{CnBG`}}}{{f{Cn{Fn{{Ch{Cf}}}}}}}}{{{f{B`}}{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BGlBGlBGl}BGl}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BGlBGl}BGl}10{{{f{BNl}}}BNl}{{{f{BAn}}}BAn}{{{f{BCd}}}BCd}{{{f{BNn}}}BNn}{{{f{AOb}}}AOb}{{{f{BO`}}}BO`}{{{f{BOb}}}BOb}{{{f{BOd}}}BOd}{{{f{BOf}}}BOf}{{{f{On}}}On}{{{f{Nh}}}Nh}{{{f{BOh}}}BOh}{{{f{BOj}}}BOj}{{{f{BOl}}}BOl}{{{f{BOn}}}BOn}{{{f{C@`}}}C@`}{{{f{C@b}}}C@b}{{{f{C@d}}}C@d}{{{f{C@f}}}C@f}{{{f{BN`}}}BN`}{{{f{BBn}}}BBn}{{{f{C@h}}}C@h}{{{f{BHb}}}BHb}{{{f{C@j}}}C@j}{{{f{C@l}}}C@l}{{{f{C@n}}}C@n}{{{f{CA`}}}CA`}{{{f{BFn}}}BFn}{{{f{CAb}}}CAb}{{{f{CAd}}}CAd}{{{f{CAf}}}CAf}{{{f{CAh}}}CAh}{{{f{CAj}}}CAj}{{{f{CAl}}}CAl}{{{f{CAn}}}CAn}{{{f{CB`}}}CB`}{{{f{CBb}}}CBb}{{{f{CBd}}}CBd}{{{f{CBf}}}CBf}{{{f{CBh}}}CBh}{{{f{CBj}}}CBj}{{{f{BHl}}}BHl}{{{f{CBl}}}CBl}{{{f{CBn}}}CBn}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{BHj}}}BHj}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{CCh}}}CCh}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{BKb}}}BKb}{{{f{BGl}}}BGl}{{{f{CD`}}}CD`}{{{f{BMh}}}BMh}{{{f{{BI`{c}}}}}{{BI`{c}}}ABf}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{BId}}}BId}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{BMl}}}BMl}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{{ADn{ce}}}}}{{ADn{ce}}}Nf{BHdABf}}{{{f{CF`}}}CF`}{{{f{N`}}}N`}{{{f{BCh}}}BCh}{{{f{B@n}}}B@n}{{{f{BCj}}}BCj}{{{f{AMn}}}AMn}{{{f{BAh}}}BAh}{{{f{Ml}}}Ml}{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{{f{CFf}}}CFf}{{{f{BG`}}}{{ADn{BG`}}}}{{{f{c}}{f{Cne}}}b{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CFh}}}{{Cb{{f{CFj}}}}}}``{{{f{AOb}}{f{AOb}}}AO`}{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}AO`{CFlNf}BHd}{{{f{{Al{BGl}}}}}BGl}{{BHfCAd}BHf}{{{f{CAd}}{f{CAh}}}d}`{{{f{{Al{B`}}}}}{{Bd{B`Bb}}}}{{{f{An}}}BGl}{BBn{{Bd{AOhBb}}}}{c{{Bd{{Fn{AOh}}Bb}}}{{Hn{}{{Cd{BBn}}}}}}{AMfe{}{{AKd{c}}AIh}}0{{AMfADd}e{}{{AKf{c}}AIh}}0{{ABl{f{An}}}{{l{c}}}Dd}{{ABn{f{{l{c}}}}}{{l{c}}}Dd}10{{ABn{f{An}}Ef}{{l{c}}}Dd}0{BBn{{Bd{BN`Bb}}}}{cBGl{{BC`{Eh}}}}{{{f{CF`}}Fh}CFn}``{{{f{BGd}}{Fn{{f{An}}}}{Cb{{f{An}}}}d}{{Bd{AOhBb}}}}`{{{f{c}}{f{e}}}AO`{}{}}0``{{{f{CCf}}}{{Bd{{ADn{B@n}}Bb}}}}{{cCEn}{{Bd{BBnBb}}}{{Hb{{Al{BBn}}}}}}{{{f{BKn}}{f{{l{n}}}}}{{l{n}}}}{{ed}{{Bd{BGlBb}}}{{AMj{BGl}}ABf}{{Hb{{Al{c}}}}}}{{{f{CFh}}{Fn{BBn}}}{{Bd{BBnBb}}}}{{{f{CBl}}{Fn{BBn}}}{{Bd{BBnBb}}}}44{e{{Bd{BGlBb}}}{{AMj{BGl}}ABf}{{Hb{{Al{c}}}}}}{{c{f{An}}d}BGl{{Hb{{Al{BGl}}}}}}{{BIhc}BGl{{AMj{BGl}}}}{{{f{CG`}}{f{{Al{Aj}}}}}{{l{Af}}}}{{{f{BKn}}{f{An}}d}{{Bd{{l{Af}}Bb}}}}{{BIjc}BGl{{AMj{BGl}}}}{{{f{B@n}}{f{An}}}d}{{{f{CG`}}{f{{l{Ah}}}}}{{l{Af}}}}{{{f{BKn}}{f{{l{n}}}}dd}{{Bd{{l{Af}}Bb}}}}{{{f{BKn}}{f{An}}}{{Bd{{l{Af}}Bb}}}}{{{f{Cf}}{f{ADd}}}{{Ch{Cf}}}}{{{f{B`}}Fh}{{Bd{{l{El}}Bb}}}}{BBnBBn}{BGlBGl}{{{f{BKn}}{f{An}}d}{{Bd{{l{El}}Bb}}}}{{{f{BKn}}{f{{l{n}}}}d}{{Bd{{l{El}}Bb}}}}{{{f{CGb}}Aj{Cb{Aj}}{Cb{{f{BOn}}}}Ajd}{{Bd{FhBb}}}}{{{ALd{An}}}Ef}{{{f{BFl}}{f{{Al{Nh}}}}d}AOh}{{{f{CGd}}c}{{Ch{CGf}}}BLf}{{{f{CGh}}c}{{Ch{CGf}}}BLf}`{{{f{CGj}}{f{AOh}}{Cb{{f{An}}}}{Cb{{Gf{GbFh}}}}}{{Bd{AOhBb}}}}{{BBnBBn}BBn}{{{f{CGj}}{f{AOh}}{Cb{{Gf{GbFh}}}}d}{{Bd{{Gf{AOhAOh}}Bb}}}}{{{f{B`}}d}{{Bd{B`Bb}}}}{{BGld}BGl}{{BGlced}BGl{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHlABf}{{Hb{{Al{BGl}}}}}}212121{{ce}BGl{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHlABf}{{Hb{{Al{BGl}}}}}}32{{CGlBGlFhd}BGl}`{{{f{BCj}}}{{f{ADd}}}}{{{f{AMn}}}{{f{ADd}}}}```{{BGlBGlAObBO`{Cb{Jf}}{Cb{Eh}}}BGl}`{CDjBGl}`11{AJhGb}00{{{f{CGn}}}{{l{Ld}}}}{{{f{CH`}}}{{l{Ld}}}}{{{f{BNh}}}{{Bd{{l{Ld}}Bb}}}}`{{{f{CHb}}}{{l{Jd}}}}{{{f{AOb}}}Gb}`{{{f{AOb}}}d}```{{}b}{cbBHd}{{}CGd}{{}CGh}{{}BAn}{{}BCd}{{}BOd}{{}BOh}{{}BOj}{{}BOl}{{}C@b}{{}C@d}{{}C@f}{{}BBn}{{}C@j}{{}C@l}{{}CA`}{{}BFn}{{}CAd}{{}CAf}{{}CAj}{{}CAl}{{}CAn}{{}CB`}{{}CBf}{{}CBj}{{}BHl}{{}CC`}{{}CCb}{{}CCd}{{}CCf}{{}BGl}{{}{{BI`{{ADn{CHd}}}}}}{{}{{BI`{{ADn{BMn}}}}}}{{}{{BI`{{ADn{BHn}}}}}}{{}CDj}{{}CDl}{{}CE`}{{}CEb}{{}CEd}{{}CEf}{{}CEh}{{}CEl}{{}CEn}{{}{{ADn{c}}}CHf}{{}N`}{{}BCh}{{}B@n}{{}AMn}{{}BAh}{{}Ml}`{{}{{Oj{{Fn{On}}{Fn{Nh}}}}}}{Fh{{f{c}}}{}}0{{{f{{AJd{c}}}}}f{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BI`{c}}}}}f{}}222222222222222222{{{f{{ADn{ce}}}}}{{f{c}}}NfBHd}33333333333333{Fh{{f{Cnc}}}{}}0{{{f{Cn{AJd{c}}}}}{{f{Cn}}}{}}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CCf}}}{{Bd{EhBb}}}}{{{f{BBn}}}{{Bd{EhBb}}}}0001{{{f{{ADn{c}}}}}{{f{An}}}{AIlNf}}{{{f{AMn}}{f{CHh}}}{{Bd{CHjBb}}}}```{{{f{B`}}GbCHl}{{Bd{B`Bb}}}}{{BIjGbCHl}BGl}{{BGlGbCHl}BGl}{{{f{CCf}}}{{Bd{{`{B@l}}Bb}}}}`{{{BGn{}{{Df{c}}}}{f{B`}}}c{}}{{BGlBGl}}{{{f{BH`}}{f{B`}}}{{Bd{B`Bb}}}}{{BGlc}BGl{{AMj{BGl}}}}{{{ADn{ADfc}}}{{Bd{{ADn{ec}}{ADn{ADfc}}}}}BHd{ADfHjHl}}{{{ADn{ADfc}}}{{ADn{ec}}}BHd{ADfHjHl}}{{{f{{ADn{ce}}}}}{{CHn{ce}}}Nf{ABfBHd}}{Fhb}00000000000000000000000000000000000000000000000{{{f{CnBN`}}}b}{{BBne}BBn{{Hb{An}}}{{Gh{}{{Cd{c}}}}}}22222222222222222222222222222222222222222222222222222222222{{{f{Cn{ADn{ce}}}}}bNfBHd}3333333333333{BGlBGl}{{BBn{Cb{{Fn{BGl}}}}}BBn}1{{{f{BG`}}}B`}{{{f{{Jb{JhJd}}}}{f{Jf}}{f{AJj}}}{{Jb{JnJd}}}}`{BGlCI`}{{{f{ALj}}}{{f{Ef}}}}{{{f{BG`}}}{{f{Ef}}}}`{{{f{Ef}}}BGl}{cBGl{{Hb{{Al{Ef}}}}}}`{CDlBGl}``{{{f{c}}}e{}{{CId{CIb}}}}0`{{{f{CG`}}{f{{Al{Aj}}}}}{{l{Af}}}}{{{f{CG`}}{f{{l{Ah}}}}}{{l{Af}}}}{{AOb{f{Ef}}{f{An}}}{{Bd{bBb}}}}{{AOb{Cb{{f{An}}}}{f{An}}}{{Bd{bBb}}}}`{{{f{BNl}}{f{BNl}}}d}{{{f{BAn}}{f{BAn}}}d}{{{f{BCd}}{f{BCd}}}d}{{{f{AOb}}{f{AOb}}}d}{{{f{BO`}}{f{BO`}}}d}{{{f{BOb}}{f{BOb}}}d}{{{f{BOd}}{f{BOd}}}d}{{{f{On}}{f{On}}}d}{{{f{BOh}}{f{BOh}}}d}{{{f{BOj}}{f{BOj}}}d}{{{f{BOl}}{f{BOl}}}d}{{{f{BOn}}{f{BOn}}}d}{{{f{C@`}}{f{C@`}}}d}{{{f{C@b}}{f{C@b}}}d}{{{f{C@d}}{f{C@d}}}d}{{{f{C@f}}{f{C@f}}}d}{{{f{C@h}}{f{C@h}}}d}{{{f{C@j}}{f{C@j}}}d}{{{f{C@l}}{f{C@l}}}d}{{{f{C@n}}{f{C@n}}}d}{{{f{CA`}}{f{CA`}}}d}{{{f{BFn}}{f{BFn}}}d}{{{f{CAb}}{f{CAb}}}d}{{{f{CAd}}{f{CAd}}}d}{{{f{CAf}}{f{CAf}}}d}{{{f{CAh}}{f{CAh}}}d}{{{f{CAj}}{f{CAj}}}d}{{{f{CAl}}{f{CAl}}}d}{{{f{CAn}}{f{CAn}}}d}{{{f{CB`}}{f{CB`}}}d}{{{f{CBb}}{f{CBb}}}d}{{{f{CBd}}{f{CBd}}}d}{{{f{CBf}}{f{CBf}}}d}{{{f{CBh}}{f{CBh}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{CBn}}{f{CBn}}}d}{{{f{CC`}}{f{CC`}}}d}{{{f{BKb}}{f{BKb}}}d}{{BGlc}BGl{{AMj{BGl}}}}{{{f{BGl}}{f{BGl}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{BMh}}{f{BMh}}}d}{{{f{{BI`{{ADn{c}}}}}}{f{{BI`{{ADn{c}}}}}}}dNf}{{{f{{BI`{B`}}}}{f{{BI`{B`}}}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{CDd}}{f{CDd}}}d}{{{f{CDf}}{f{CDf}}}d}{{{f{CDh}}{f{CDh}}}d}{{{f{BId}}{f{BId}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{CEj}}{f{CEj}}}d}{{{f{CEl}}{f{CEl}}}d}{{{f{CEn}}{f{CEn}}}d}{{{f{{ADn{Cf}}}}{f{Cf}}}d}{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}d{CIfNf}BHd}{{{f{{ADn{CIh}}}}{f{CIh}}}d}{{{f{CHj}}{f{CHj}}}d}{{{f{N`}}{f{N`}}}d}{{{f{BCh}}{f{BCh}}}d}{{{f{B@n}}{f{B@n}}}d}{{{f{BCj}}{f{BCj}}}d}{{{f{BCj}}{f{{f{Cf}}}}}d}{{{f{AMn}}{f{AMn}}}d}{{{f{BAh}}{f{BAh}}}d}{{{f{Ml}}{f{Ml}}}d}{{{f{CFf}}{f{CFf}}}d}{{BGlc}BGl{{AMj{BGl}}}}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CIjBGld}BGl}{{{f{BJf}}{f{AOh}}{f{CIl}}}{{Bd{B`Bb}}}}{{{f{BKh}}{f{AOh}}}{{Bd{B`Bb}}}}{{{f{BJf}}{f{AOh}}{f{Bj}}{f{CIl}}}{{Bd{CInBb}}}}{{{f{BJn}}{f{AOh}}{f{Bj}}{f{CIl}}}{{Bd{B`Bb}}}}``{{BGlc}BGl{{BC`{Eh}}}}{{BGlc}BGl{{Hb{{Al{Ef}}}}}}{{{f{Cnc}}e}{{Bd{{f{Cng}}B@f}}}{}CJ`{}}{{{f{BBn}}d}{{Bd{EhBb}}}}{{{f{AFf}}}{{Bd{B`Bb}}}}{{BBne}BBn{{AMj{BGl}}ABf}{{Hb{{Al{c}}}}}}{BGlBGl}{{{f{AFf}}}{{Bd{{Gf{B`{Gd{Gb}}}}Bb}}}}``{{BGlBGlBGl}BGl}{{{f{CGd}}}CGb}{{{f{CGh}}}CGb}{{{f{BKn}}{f{{l{n}}}}Fh}{{Bd{{l{n}}Bb}}}}{Nh{{Gf{LbLb}}}}{{{f{BKn}}{f{An}}}{{Bd{{l{j}}Bb}}}}{{{f{BKn}}{f{{l{n}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BKn}}{f{An}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{AAb}}}d}``{{{f{BN`}}}{{Cb{{Bd{AOhBb}}}}}}{{BBnFh}{{Bd{AOhBb}}}}{{{f{BN`}}}{{Bd{AOhBb}}}}{{{f{AAb}}}{{f{Mn}}}}{{{f{BG`}}}{{Dl{Mn}}}}{{CJbGb}BGl}{{CJb{f{An}}}BGl}{{{f{BCj}}}{{f{{Al{AMn}}}}}}```{{BBnc}BBn{{AMj{BGl}}}}{{BGlc}BGl{{AMj{BGl}}}}`10{{BGlAFb}BGl}{{{f{AFh}}c}{{Bd{AFhBb}}}{}}{{{f{AFj}}{f{{l{Af}}}}}{{Bd{{l{c}}Bb}}}Dd}{{{f{BG`}}{f{{l{Af}}}}}{{Bd{B`Bb}}}}{{BBnBGl}BBn}5{{BAhc}BAh{{Dh{Fh{f{AMn}}}{{Df{d}}}}}}{{{f{BJn}}B`{f{Bj}}{f{CIl}}}{{Bd{B`Bb}}}}{{{f{BKn}}{f{An}}d}{{Bd{{l{El}}Bb}}}}{{{f{BKn}}{f{{l{n}}}}dd}{{Bd{{l{El}}Bb}}}}{{{f{BKn}}{f{An}}}{{Bd{{l{El}}Bb}}}}{CJd{{Bd{AOhBb}}}}{{{f{CnCGf}}{f{CnAOh}}}{{Bd{bBb}}}}{AAd{{l{c}}}Dd}{{ALh{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{BHfBBn}{{{BGf{c}}}{{Bd{AOhBb}}}BGj}{{{f{Cn{BLb{c}}}}{f{CnAOh}}}{{Bd{bBb}}}BLf}{{{CJf{c}}}{{Bd{AOhBb}}}BGj}{{{BIl{c}}}{{Bd{AOhBb}}}BIn}{{{f{Cn{CJh{c}}}}{f{CnAOh}}}{{Bd{bBb}}}BLf}{{{f{Cn{BLh{c}}}}{f{CnAOh}}}{{Bd{bBb}}}BLf}{{{f{Cn{CJj{c}}}}{f{CnAOh}}}{{Bd{bBb}}}BLf}{{{CJl{c}}}{{Bd{AOhBb}}}BGj}{{{CJn{c}}}{{Bd{AOhBb}}}BGj}{{{BLl{c}}}{{Bd{AOhBb}}}BGj}{{{BM`{c}}{f{CnAOh}}}{{Bd{IlBb}}}BLf}{CFh{{Bd{BBnBb}}}}{CBl{{Bd{BBnBb}}}}{{{f{CnAAb}}}{{l{j}}}}21{BHj{{Bd{BBnBb}}}}{{{CJf{c}}{Cb{{ADn{BGh}}}}d}{{Bd{AOhBb}}}BGj}{{{f{BLn}}Fh}d}{{}BGl}{BIjBGl}{BBnBBn}{BGlBGl}`0``{{}{{BI`{{ADn{BHn}}}}}}{{{f{BNf}}}{{Bd{B`Bb}}}}2{{BGlBGl}BGl}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{Cn{ADn{CK`}}}}}{{Bd{bB@f}}}}{{{f{BJ`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BMn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BMj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BNl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BAn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BCd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BNn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AOb}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{BO`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{On}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Nh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{f{BJf}}}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BOn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@b}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@d}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@f}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@h}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@j}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@l}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BHh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{C@n}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CA`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CIn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CKb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BFn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CAb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CAd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CAf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CAh}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CAj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CAl}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CAn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CB`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CBn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CC`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BGl}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CD`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BMh}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{{BI`{c}}}}{f{CnGj}}}{{Bd{bGl}}}{}}{{{f{CDb}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CDd}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CDf}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CDh}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{BId}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{CDj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CDl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CDn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CE`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BMl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEl}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CEn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{{ADn{ce}}}}{f{CnGj}}}{{Bd{bGl}}}{B@lNf}BHd}{{{f{{ADn{ce}}}}{f{CnGj}}}{{Bd{bGl}}}NfBHd}{{{f{{ADn{ce}}}}{f{CnGj}}}{{Bd{bGl}}}{ADhNf}BHd}{{{f{CHj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CF`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{N`}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BCh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{B@n}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BCj}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{AMn}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{BAh}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{Ml}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CFb}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CFd}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{CFf}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{An}}BDb}Eh}```{{BGlce}BGl{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHlABf}{{Hb{{Al{BGl}}}}}}{{BHfd}BHf}``{{{f{An}}c}{{Bd{BGlBb}}}{{Hb{{Al{BGl}}}}}}{{BGl{Cb{Lb}}}BGl}{cc{}}000000000000000000000000000000000{LbOn}111111111{{{f{An}}}BOn}222222{CCfBBn}{BHbBBn}44444444{CAhBFn}5555555555555555555555555555{LjBGl}{{{f{An}}}BGl}{IlBGl}{LbBGl}{AjBGl}{LfBGl}{L`BGl}{MfBGl}{GbBGl}{LlBGl}{dBGl}{BKbBGl}{cc{}}{IjBGl}11{CKd{{BI`{{ADn{BJ`}}}}}}{CDh{{BI`{{ADn{BJ`}}}}}}{CDd{{BI`{{ADn{BJ`}}}}}}{CKf{{BI`{{ADn{BJ`}}}}}}{BId{{BI`{{ADn{BJ`}}}}}}6{CKh{{BI`{{ADn{BJ`}}}}}}{CKj{{BI`{{ADn{BJ`}}}}}}{CDb{{BI`{{ADn{BJ`}}}}}}{CKl{{BI`{{ADn{BJ`}}}}}}{CKn{{BI`{{ADn{BJ`}}}}}};;;;{CDhBId}{CDdBId}={CDbBId}{CKjBId}?????{CEfCEd}{cc{}}000000{CL`{{ADn{CLb}}}}1{{{f{CLd}}}{{ADn{CLd}}}}{CLfc{}}{{{f{CLb}}}{{ADn{CLb}}}}{CGb{{ADn{CLh}}}}{{{Fn{ce}}}{{ADn{{Al{c}}e}}}{}{BHdABf}}{c{{ADn{c}}}{}}{{{Ch{ce}}}{{ADn{ce}}}NfBHd}{{{Ob{c}}}{{ADn{{Al{c}}}}}{}}{{{f{An}}}{{ADn{An}}}}{{{ADn{An}}}{{ADn{{Al{Aj}}}}}}{Eh{{ADn{An}}}}{{{Dl{c}}}{{ADn{c}}}{CLjNf}}{{{f{CLh}}}{{ADn{CLh}}}}{CLl{{ADn{CLd}}}}{{{f{{Al{c}}}}}{{ADn{{Al{c}}}}}ABf}{CLnCHj}{cc{}}0000{{{f{{ADn{BAh}}}}}B@n}{{{f{BAh}}}B@n}2{BAhB@n}{{{f{BAj}}}B@n}{{{ADn{BAh}}}B@n}{{{f{{Al{B`}}}}}B@n}6{CM`BCj}{CMbBCj}8{{{Fn{AMn}}}BAh}99999{{c{Cb{Hd}}}CMd{}}{{{CMf{Gb}}{CMf{Aj}}{Cb{Hd}}}CMh}{{{CMf{Gb}}{CMf{Aj}}{Cb{Hd}}}CMj}{g{{Bd{ic}}}{}{}{{H`{c}{{Cd{e}}}}}{}}00{c{{AJd{{l{e}}}}}{{Gh{}{{Cd{}}}}}A`}{c{{AJd{{l{Af}}}}}{{Gh{}{{Cd{d}}}}}}{e{{ADn{{Al{c}}}}}{}{{Gh{}{{Cd{c}}}}}}{eB@n{{AMj{Mn}}}{{Gh{}{{Cd{c}}}}}}{{gFh}{{CMl{Gb}}}Hb{{Gh{}{{Cd{{Cb{c}}}}}}}{{Gh{}{{Cd{{Cb{e}}}}}}}}0{e{{CMl{Gb}}}{{Gh{}{{Cd{{Cb{d}}}}}}}{{Gh{}{{Cd{{Cb{c}}}}}}}}{{{f{An}}e}ABj{}{{Cj{}{{Cd{{Cb{c}}}}}}}}{{gADd}{{CMl{Gb}}}BEh{{Gh{}{{Cd{{Cb{c}}}}}}}{{Gh{}{{Cd{{Cb{e}}}}}}}}763{{{f{An}}e}ABj{}{{Cj{}{{Cd{c}}}}}}{c{{AJd{{l{e}}}}}{{Hn{}{{Cd{}}}}}A`}{e{{ADn{{Al{c}}}}}Hj{{Hn{}{{Cd{c}}}}}}`{c{{Bd{{CJn{CK`}}Bb}}}{{AMj{CGb}}}}{{}{{ADn{c}}}Nf}{c{{ADn{ec}}}BHdNf}{{{f{An}}{f{{Al{c}}}}}ABj{}}{{{f{An}}{f{{Al{{Cb{c}}}}}}}ABj{}}{{{f{An}}}{{Bd{CMn}}}}{c{{AJd{{l{Af}}}}}{{Ib{}{{Cd{d}}}}}}{c{{AJd{{l{e}}}}}{{Ib{}{{Cd{}}}}}A`}{Ef{{BI`{{ADn{BHn}}}}}}{{{f{An}}c}CN`{}}{{{Fn{c}}ADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{Fn{c}}ADd}{{AIh{}{{AKj{e}}{AKl{c}}{AKn{g}}}}}{AL`{ALb{e}}}ABf{{G`{}{{Cd{e}}}}IbHjHl}}`{{{f{An}}cFh}AFl{}}{{FhcADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{An}}Fh}AFn}{{FhADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}``{{BGlc{BI`{{ADn{BHn}}}}CNb}BGl{{Dh{B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHl}}`{{BGlc}BGl{{AMj{BGl}}}}{{BGlFhFh}BGl}{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}d{CNdNf}BHd}{{{f{BG`}}Fh}{{Bd{IdBb}}}}{{BIhBGld}BGl}{{BIjBGld}BGl}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}6{{{f{B@n}}{f{An}}}{{Cb{{f{Ef}}}}}}{{{f{AG`}}Fh}{{Bd{IdBb}}}}{{{f{ALj}}Fh}{{Bd{IdBb}}}}{{{f{AG`}}Fh}Id}{{{f{ALj}}Fh}Id}{{{f{B@n}}Fh}{{Cb{{Gf{{f{{ANj{ANh}}}}{f{Ef}}}}}}}}{{{f{CnB@n}}Fh}{{Cb{{Gf{{f{Cn{ANj{ANh}}}}{f{CnEf}}}}}}}}{BNdBGl}{{{f{BBn}}}CEh}{{{f{CEj}}}Ef}{{}Ef}{{{f{BOf}}GbBO`{Cb{{f{AJj}}}}}{{Bd{BNnBb}}}}00{{{f{CHd}}{f{B@n}}CNf{f{Mn}}{f{Mn}}}{{Cb{Mn}}}}{{{f{BHn}}{f{B@n}}CNf{f{{Al{Mn}}}}}Mn}{{{f{B@n}}{f{An}}}{{Cb{Mn}}}}{{{f{ADd}}}{{f{{Al{AMn}}}}}}{{{f{CNh}}}Fh}{{{f{B@n}}{f{An}}}{{Cb{{Gf{Fh{f{{ANj{ANh}}}}{f{Ef}}}}}}}}{{{f{Cn{BLl{c}}}}}{{Bd{{f{{ADn{CF`}}}}Bb}}}BGj}{{{f{Cn{ADn{ce}}}}}{{Cb{{f{Cnc}}}}}NfBHd}{{{f{Cn{ADn{ce}}}}}{{f{Cnc}}}NfBHd}{{{f{CNj}}}{{Fn{{f{An}}}}}}{{{f{B@n}}}{{Fn{{f{An}}}}}}{{{f{BAh}}}{{Fn{{f{An}}}}}}{{{f{BG`}}Fh}{{Cb{{f{If}}}}}}{{{f{BG`}}FhFh}{{Cb{{f{If}}}}}}{{{f{BJ`}}}{{Cb{{BI`{{ADn{BHn}}}}}}}}{{{f{BOf}}BNnBO`Jf{Cb{{f{AJj}}}}BOd}{{Bd{CNlBb}}}}{{{f{BOh}}}{{ADn{BOj}}}}{{{f{Cnc}}}{{Bd{CNnBb}}}{BInBGjNf}}{{{f{CKb}}{f{B@n}}}{{Bd{{ADn{B@n}}Bb}}}}{{cFh}{{Fn{{Gf{FhFh}}}}}{{Cj{}{{Cd{Fh}}}}}}{{{f{ANl}}Fh}Id}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{BG`}}Fh}Id}{{{f{CFh}}}d}{{{f{CBl}}}d}`{{BBne}BHb{{AMj{BGl}}ABf}{{Hb{{Al{c}}}}}}{{{f{CO`}}{Fn{B`}}{f{BAn}}}{{Bd{{Gf{B`{Fn{B`}}Bj}}Bb}}}}{{BBnBGlcBAn}BHb{{Hb{{Al{BGl}}}}}}2{{AObAOb{f{{Al{Gb}}}}BO`Jf{Cb{AJj}}}{{Bd{{Fn{{Ob{Lb}}}}Bb}}}}{{BOf{f{{Al{Gb}}}}BO`Jf{f{{Cb{Eh}}}}ddBOd}{{Gf{{Fn{{Ob{Lb}}}}{Fn{Gb}}{Fn{Gb}}}}}}{{{f{BDn}}dd}{{Bd{BjBb}}}}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}{{BGlc}BGl{{AMj{BGl}}}}{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}d{CNdNf}BHd}21`{{{f{BG`}}}d}{{{f{COb}}}d}`{{{f{BAn}}{f{Cnc}}}bAGb}{{{f{BCd}}{f{Cnc}}}bAGb}{{{f{AOb}}{f{Cnc}}}bAGb}{{{f{BO`}}{f{Cnc}}}bAGb}{{{f{BOb}}{f{Cnc}}}bAGb}{{{f{BOd}}{f{Cnc}}}bAGb}{{{f{BOh}}{f{Cnc}}}bAGb}{{{f{BOj}}{f{Cnc}}}bAGb}{{{f{BOl}}{f{Cnc}}}bAGb}{{{f{BOn}}{f{Cnc}}}bAGb}{{{f{C@`}}{f{Cnc}}}bAGb}{{{f{C@b}}{f{Cnc}}}bAGb}{{{f{C@d}}{f{Cnc}}}bAGb}{{{f{C@f}}{f{Cnc}}}bAGb}{{{f{C@h}}{f{Cnc}}}bAGb}{{{f{C@j}}{f{Cnc}}}bAGb}{{{f{C@l}}{f{Cnc}}}bAGb}{{{f{C@n}}{f{Cnc}}}bAGb}{{{f{CA`}}{f{Cnc}}}bAGb}{{{f{BFn}}{f{Cnc}}}bAGb}{{{f{CAb}}{f{Cnc}}}bAGb}{{{f{CAd}}{f{Cnc}}}bAGb}{{{f{CAf}}{f{Cnc}}}bAGb}{{{f{CAh}}{f{Cnc}}}bAGb}{{{f{CAj}}{f{Cnc}}}bAGb}{{{f{CAl}}{f{Cnc}}}bAGb}{{{f{CAn}}{f{Cnc}}}bAGb}{{{f{CB`}}{f{Cnc}}}bAGb}{{{f{CBb}}{f{Cnc}}}bAGb}{{{f{CBd}}{f{Cnc}}}bAGb}{{{f{CBf}}{f{Cnc}}}bAGb}{{{f{CBh}}{f{Cnc}}}bAGb}{{{f{CBj}}{f{Cnc}}}bAGb}{{{f{CBn}}{f{Cnc}}}bAGb}{{{f{CC`}}{f{Cnc}}}bAGb}{{{f{BKb}}{f{Cnc}}}bAGb}{{{f{BGl}}{f{Cnc}}}bAGb}{{{f{CD`}}{f{Cnc}}}bAGb}{{{f{BMh}}{f{Cnc}}}bAGb}{{{f{CDb}}{f{Cnc}}}bAGb}{{{f{CDd}}{f{Cnc}}}bAGb}{{{f{CDf}}{f{Cnc}}}bAGb}{{{f{CDh}}{f{Cnc}}}bAGb}{{{f{BId}}{f{Cnc}}}bAGb}{{{f{CDn}}{f{Cnc}}}bAGb}{{{f{CE`}}{f{Cnc}}}bAGb}{{{f{CEb}}{f{Cnc}}}bAGb}{{{f{CEd}}{f{Cnc}}}bAGb}{{{f{CEf}}{f{Cnc}}}bAGb}{{{f{CEj}}{f{Cnc}}}bAGb}{{{f{CEl}}{f{Cnc}}}bAGb}{{{f{CEn}}{f{Cnc}}}bAGb}{{{f{{ADn{ce}}}}{f{Cng}}}b{COdNf}BHdAGb}{{{f{BCh}}{f{Cnc}}}bAGb}{{{f{B@n}}{f{Cnc}}}bAGb}{{{f{AMn}}{f{Cnc}}}bAGb}{{{f{Ml}}{f{Cnc}}}bAGb}{{{f{CFf}}{f{Cnc}}}bAGb}{{{f{COf}}{f{B`}}CAld}{{Bd{{Gf{{Gf{{Fn{Lb}}{Fn{Lb}}}}d}}Bb}}}}{{{f{COf}}{f{B`}}CAld}{{Bd{{Gf{{AJ`{Lb}}{AJ`{Lb}}}}Bb}}}}{{BIjBGl}BGl}{{BHb{Cb{Fh}}}BBn}{{BGl{Cb{Fh}}}BGl}{{{f{BKn}}}{{Bd{{l{n}}Bb}}}}{{{f{BKn}}}{{l{n}}}}`{{{f{{Al{{f{{l{n}}}}}}}}{f{An}}d}{{Bd{{l{n}}Bb}}}}{{{f{COh}}}{{l{Ld}}}}{{{f{CH`}}}{{l{Ld}}}}{{{f{BNh}}}{{Bd{{l{Ld}}Bb}}}}`{{{f{CHb}}}{{l{Jd}}}}`{{BHfCAh}BHf}``{{{f{On}}}Lb}`{{{f{{Jb{JhJd}}}}{f{{l{n}}}}CFf{Fj{Gb}{{Df{AJh}}}}{Fj{AJh}{{Df{Gb}}}}{f{AJj}}{f{AJj}}}{{Bd{{l{Jd}}Bb}}}}{{{f{{Jb{JhJd}}}}{Cb{{f{An}}}}{Fj{Gb}{{Df{AJh}}}}{Fj{AJh}{{Df{Gb}}}}{f{AJj}}{f{AJj}}}{{Bd{{l{Jd}}Bb}}}}{BGlBGl}{{{f{AJh}}}d}{{{BLb{c}}d}{{BLb{c}}}BLf}``0`{{}b}{cb{ABfBHd}}{cBGl{{Hb{{Al{Gb}}}}}}``{{{f{CNj}}{f{An}}}{{Cb{Fh}}}}{{{f{B@n}}{f{An}}}{{Cb{Fh}}}}{{{f{BAh}}{f{An}}}{{Cb{Fh}}}}{{{f{{Al{Lb}}}}}{{`{{Cj{}{{Cd{Fh}}}}}}}}{{{f{CNn}}Aj{Cb{Fh}}d{Cb{{f{B@n}}}}{f{CnFh}}Fh{Cb{{f{BOn}}}}{Cb{Aj}}Aj{Cb{{f{C@`}}}}dd{f{Cn{Cb{Fh}}}}d}{{Bd{{Gf{B@nFhFh}}Bb}}}}{{{CJl{c}}{Cb{Fh}}}{{CJl{c}}}BGj}{{{CJn{c}}{Cb{Fh}}}{{CJn{c}}}BGj}``{{}Fh}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{CnAAb}}}{{Ch{Cf}}}}{{{f{COj}}{f{AOh}}ee}{{Bd{AOhBb}}}{{Hb{An}}}{{Gh{}{{Cd{c}}}}}}{{BBnBBncc}BBn{{AMj{BGl}}}}{{{f{CnNh}}}{{f{CnIl}}}}`{{{f{CnB@n}}Fh{ANj{ANh}}Ef}{{Bd{{Cb{Ef}}Bb}}}}{{BGlBGlGbEf}BGl}{{BGlBGlBGl}BGl}`{{{f{B`}}C@n}B`}{{BGlC@n}BGl}{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BCj{{Gf{{Fn{AMn}}{Fn{{Ch{Cf}}}}{Cb{Hd}}}}}}{{{AJd{c}}}c{}}{{{ADn{ce}}}{{Cb{c}}}{}BHd}33{{{f{BGl}}}}{B@n}{{{f{BCj}}}}{COlBIj}{BIjBIj}{{{ADn{ce}}}{}NfBHd}{{BOhc}{{BGf{c}}}BGj}{BA`B`}{{{ADn{BG`}}}B`}{CF`COn}{BC`{{Fn{c}}}{}}{c{{Fn{Eh}}}{}}{c{{Fn{{ANj{ANh}}}}}{}}{{{f{CAh}}}d}{{{f{B`}}{f{B`}}{f{B`}}CBj}{{Bd{{l{Af}}Bb}}}}{{BGlccCBj}BGl{{AMj{BGl}}}}{cd{{Hb{CLh}}}}{{{f{{Al{Aj}}}}}d}{{{f{AOb}}{Cb{{f{An}}}}}d}{{{f{BG`}}}d}{{{f{B@n}}}d}{{{f{BAh}}}d}{{{f{BLn}}}d}{BGlBGl}{{{f{B`}}}{{Bd{{l{Af}}Bb}}}}{{{f{AGd}}}{{Bd{{l{Af}}Bb}}}}2{{{f{AOb}}}d}{{{f{B`}}{f{B`}}}{{Bd{{l{Af}}Bb}}}}{{BGlc}BGl{{AMj{BGl}}}}54{{{f{AGf}}}{{Bd{{l{Af}}Bb}}}}6{{{f{CGn}}}{{l{Af}}}}{{{f{CH`}}}{{l{Af}}}}{{{f{BNh}}}{{Bd{{l{Af}}Bb}}}}{{{f{BJf}}}d}:::{{{f{BG`}}}{{l{Af}}}};;0{{{f{Nh}}}d}<{{{f{On}}}d}`{{{f{B`}}}d}{{{f{{ADn{CK`}}}}}d}{{}d}{{{f{D@`}}Ej}{{Bd{dBb}}}}{{{f{c}}}d{}}03?{{{f{CGn}}}{{l{In}}}}{{{f{CH`}}}{{l{In}}}}{{{f{BNh}}}{{Bd{{l{In}}Bb}}}}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{ADl{cgADj}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{B@n}}}{{`{{Cj{}{{Cd{{Gf{{f{{ANj{ANh}}}}{f{Ef}}}}}}}}}}}}{{{f{BCj}}}{{ADl{{Fn{{Ch{CIh}}}}D@bADj}}}}{{{f{B@n}}}{{`{K`}}}}{{{f{CnB@n}}}{{`{K`}}}}11{{{f{CFh}}}{{Bd{{Cb{{Ch{Cj}}}}Bb}}}}{{BIhBGld}BGl}{{BIjBGld}BGl}{{{f{COj}}{f{AOh}}eeBFn}{{Bd{AOhBb}}}{{Hb{An}}}{{Gh{}{{Cd{c}}}}}}{{BBnBBnccBFn}BBn{{Hb{{Al{BGl}}}}}}{{{f{D@d}}{f{AOh}}{f{An}}{f{An}}CBf{Cb{Id}}{Cb{Eh}}}{{Bd{AOhBb}}}}{{{f{D@f}}{f{AOh}}{f{An}}{f{An}}eeCBf{Cb{Id}}}{{Bd{AOhBb}}}{{Hb{An}}}{{Gh{}{{Cd{c}}}}}}{BBnBHf}{{{f{D@h}}{f{An}}d}{{Bd{{l{n}}Bb}}}}{{{f{D@h}}{f{{l{n}}}}d}{{Bd{{l{n}}Bb}}}}{{BHfd}BHf}`{CJbBGl}{D@jBGl}{{{f{CF`}}}{{f{{Cb{{Fn{D@l}}}}}}}}``{{}BGl}{BIjBGl}{BBnBBn}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{BGlBGl}{D@nBBn}3{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}d{CNdNf}BHd}`{{{f{COj}}{f{AOh}}ee}{{Bd{AOhBb}}}{{Hb{An}}}{{Gh{}{{Cd{c}}}}}}{{BBnBBncc}BBn{{AMj{BGl}}}}{{BHfc}BHf{{Hb{{Al{BGl}}}}}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}c}e{}{}{}}{{c{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}<{{{f{BG`}}}Fh}<9{{{f{B@n}}}Fh}{{{f{BCj}}}Fh}{{{f{BAh}}}Fh}{{BBnLb}BBn}{{{f{BG`}}Fh}B`}{{{f{BLn}}}d}`{BGlBIj}{cBGlDA`}{DA`BGl}{DAbBGl}{CEjBGl}{{BGlc}BGl{{AMj{BGl}}}}0``{{{CJn{c}}d}{{CJn{c}}}BGj}{{BHjd}BHj}```{BGlBGl}{{{f{D@h}}}{{l{El}}}}0{{{f{D@h}}{f{{Al{B`}}}}}{{Bd{{l{j}}Bb}}}}{{{f{D@h}}GbCHl}{{Bd{{l{j}}Bb}}}}{{{f{D@h}}Gbd}{{Bd{B`Bb}}}}{{{f{D@h}}{f{{l{n}}}}d}{{Bd{{l{n}}Bb}}}}4{{{f{D@h}}}{{Bd{B`Bb}}}}{{{f{D@h}}}B`}01{{{f{D@h}}}{{Bd{{l{El}}Bb}}}}{{{f{D@h}}}{{l{j}}}}{{{f{D@h}}{f{B`}}}{{Bd{{l{j}}Bb}}}}{{{f{D@h}}GbFh}{{l{j}}}}{{{f{D@h}}Ej}{{Bd{{l{j}}Bb}}}}{{{f{D@h}}Aj}B`}7{{{f{D@h}}}{{Bd{{l{j}}Bb}}}}01{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}{{BGlc}BGl{{AMj{BGl}}}}{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}d{CNdNf}BHd}21``````{{{f{AK`}}{f{AK`}}}{{Bd{{Gf{AK`AK`}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gf{{l{j}}{l{j}}}}Bb}}}}{{{f{Cn{ADn{ce}}}}}{{f{Cnc}}}ABf{BHdABf}}{{D@jc}BGl{{Dh{{f{An}}}{{Df{{Bd{EhBb}}}}}}HjHl}}{{BBncCEh{Cb{{ADn{CKb}}}}{Cb{{f{An}}}}}BBn{{Dh{AOh}{{Df{{Bd{AOhBb}}}}}}HjHl}}{{BGlc{BI`{{ADn{BHn}}}}}BGl{{Dh{B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHl}}{{BGlBGlc{BI`{{ADn{BHn}}}}}BGl{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHl}}{{BGl{f{Cnc}}{f{Cn}}}{{Bd{BGlBb}}}{{E`{BGl{f{Cn}}}{{Df{{Bd{BGlBb}}}}}}}}{{{f{CNh}}{Cb{{f{Eh}}}}}{{Bd{MnBb}}}}{{{f{CNh}}c}{{Bd{MnBb}}}{{A@`{{f{Ef}}}{{Df{Ef}}}}}}{c{{BI`{{ADn{BHn}}}}}{{Dh{{f{Ef}}}{{Df{Ef}}}}HjHl}}{c{{BI`{{ADn{BHn}}}}}{{Dh{{f{{Al{{f{Ef}}}}}}}{{Df{Ef}}}}HjHl}}{{BGlc}BGl{{E`{BGl}{{Df{BGl}}}}}}{c{{BI`{{ADn{BHn}}}}}{{Dh{{f{Mn}}}{{Df{Mn}}}}HjHl}}{{D@j{ADn{Dh}}}BGl}{c{{BI`{{ADn{BHn}}}}}{{Dh{{f{{Al{Mn}}}}}{{Df{Mn}}}}HjHl}}:{{ce{BI`{{ADn{BHn}}}}}BGl{{Dh{{f{Cn{Al{B`}}}}}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHl}{{Hb{{Al{BGl}}}}}}{{BGlc{f{{Al{BGl}}}}{BI`{{ADn{BHn}}}}}BGl{{Dh{{f{Cn{Al{B`}}}}}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHl}}{{BGlBId{f{{Al{BGl}}}}dd}BGl}2{{{f{CNh}}}{{Bd{MnBb}}}}{{BOhc}BOh{{Dh{BOj}{{Df{BOj}}}}}}1111{CEjCEj}{{{Cb{{f{{Al{Fh}}}}}}{f{BAh}}{Cb{{f{{Al{B`}}}}}}{Cb{{f{DAd}}}}}AOh}{{{Cb{{f{{Al{Eh}}}}}}{f{B@n}}{Cb{{f{{Al{B`}}}}}}d}{{Cb{{Fn{Fh}}}}}}{{{f{An}}}BGl}{BIhBGl}{BIjBGl}{{{f{AGh}}}{{Cb{c}}}{}}{BBnBBn}{BGlBGl}{{{f{DAf}}}B`}{{{f{BG`}}}{{Bd{B`Bb}}}}`75{{{f{AGh}}}{{Cb{L`}}}}43{{{f{BG`}}}{{Cb{L`}}}}987{{{f{AGj}}}{{Cb{c}}}{}}651{{{f{DAh}}}B`}4{{BBnBCb}BBn}``{{{CJf{c}}{Cb{CGb}}}{{CJf{c}}}BGj}{{{f{CnB@n}}B@n}b}{{{f{Ef}}{f{Ef}}}{{Bd{EfBb}}}}````{{{f{CHb}}}{{l{Jd}}}}`{{{f{BNh}}}{{Bd{{l{In}}Bb}}}}1`{{{f{An}}}BGl}{BIhBGl}{BIjBGl}{{{f{AGh}}}{{Cb{c}}}{}}{BBnBBn}{BGlBGl}{{{f{DAf}}}B`}{{{f{BG`}}}{{Bd{B`Bb}}}}{{{f{AGh}}}{{Cb{{Gf{cc}}}}}{}}````{{{f{COh}}}{{l{Ld}}}}{{{f{CH`}}}{{l{Ld}}}}{{{f{BNh}}}{{Bd{{l{Ld}}Bb}}}}`=```6{{{f{CGn}}}{{l{Ld}}}}21`{{{f{DAj}}{Cb{{f{AJj}}}}}{{Bd{DAjBb}}}}{{{f{DAl}}{Cb{{f{AJj}}}}}{{Bd{DAlBb}}}}{{{f{AOb}}}Gb}{{{f{AOb}}}d}{{{BGn{}{{Df{c}}}}{f{B`}}}c{}}{{AObGb}AOb}{{BGlBGl}}{{{f{BH`}}{f{B`}}}{{Bd{B`Bb}}}}``{{{f{BG`}}}Fh}{{{f{CFh}}}{{Cb{Fh}}}}{{{f{CBl}}}{{Cb{Fh}}}}{{{f{BHj}}}{{Cb{Fh}}}}`````{{{BLb{c}}Fh}{{BLb{c}}}BLf}`{BIhBGl}{BIjBGl}{{{f{AEn}}}{{Bd{FhBb}}}}{BGlBGl}{{{f{BG`}}}{{Bd{FhBb}}}}{{{f{BG`}}}{{f{An}}}}{BGlD@j}````33`{{{f{COh}}}{{l{In}}}}{{{f{CH`}}}{{l{In}}}}{{{f{BNh}}}{{Bd{{l{In}}Bb}}}}{{{f{CHb}}}{{l{Jd}}}}{{{f{AOb}}}Gb}`{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}d{CIfNf}BHd}{{{f{CAl}}}d}{BGl}{{{f{B`}}}{{Bd{B`Bb}}}}0{{{f{AOb}}}d}{{DAnFh}{{Cb{Fh}}}}{{BGlc}BGl{{AMj{BGl}}}}0{{{f{CNh}}}{{Bd{MnBb}}}}{{}c{}}{cCJdBIn}{cCGfBLf}2{{{f{An}}c}DB`{}}{c{{AJd{c}}}{}}{BBnBHf}{c{{BGf{c}}}BGj}{c{{BLb{c}}}BLf}{{{f{{Al{Mn}}}}}CNh}{c{{CJf{c}}}BGj}{c{{BIl{c}}}BIn}{c{{CJh{c}}}BLf}{{}CGd}{c{{BLh{c}}}BLf}{{}CGh}{c{{CJj{c}}}BLf}{c{{CJl{c}}}BGj}{GbAOb}{{AObAObAOb}BOf}{c{{CJn{c}}}BGj}{{DBb{ADn{CF`}}{ADn{BAh}}Fh{Cb{{Fn{Fh}}}}{Cb{{ADn{BGh}}}}{Cb{DAd}}Fhd{Cb{{Fn{B`}}}}CAf}{{Bd{BLnBb}}}}{c{{BLl{c}}}BGj}{c{{BM`{c}}}{BLfBLf}}{CAhBFn}{cCBl{{Hb{CLh}}}}{cBHj{{Hb{CLh}}}}{c{{BI`{c}}}{}}{{BGlBGlBGl}CDj}{{}CDl}{{{f{An}}{Fn{Mn}}{BI`{{ADn{BHn}}}}c}BMlBJ`}{c{{ADn{c}}}{}}{{}B@n}{{ADd{Fn{{Ch{Cf}}}}{Cb{Hd}}}BCj}{{cADdd}AMn{{AMj{Eh}}}}{e{{ADn{c}}}{}{{A@`{{f{{CHn{c}}}}}{{Df{c}}}}}}{ADdBCj}{{{f{AGl}}FhFh}{{l{c}}}Dd}{{{f{BG`}}FhFh}B`}{{{f{An}}}BOn}{{ce}{{ADn{ce}}}{}BHd}{{{f{B@n}}Fh{ANj{ANh}}Ef}{{Bd{B@nBb}}}}{{Gb{f{An}}}{{Bd{B`Bb}}}}{EhBOn}{{ADdFh}BCj}{{{ADn{{Al{CGb}}}}}CBl}{{{ADn{{Al{CGb}}}}}BHj}{AjBOn}{{}{{ADn{{BKl{c}}}}}{}}{c{{ADn{{BKl{e}}c}}}BHd{}}{Fh{{ADn{{Al{{BKl{c}}}}}}}{}}{{Fhc}{{ADn{{Al{{BKl{e}}}}c}}}BHd{}}3210{{{f{CnDBd}}}Cb}{{{f{CnCNl}}}Cb}{{{f{CnBMd}}Fh}{{Bd{{Cb{{Fn{AOh}}}}Bb}}}}{{{f{CnBL`}}Fh}{{Bd{{Cb{{Fn{AOh}}}}Bb}}}}{{{f{CnBLn}}Fh}{{Bd{{Cb{{Fn{AOh}}}}Bb}}}}{{{f{BGl}}{f{Cn{BD`{{f{BGl}}}}}}}b}{{BGl{f{Cn{BD`{BGl}}}}}b}{BGlBGl}0{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}0{GbBGl}`{{}On}{{}Nh}`{{{f{BG`}}}Fh}{BBnBBn}6````{{{f{Cn{BLl{c}}}}}{{Bd{FhBb}}}BGj}````{{{f{AFf}}}{{Bd{{Gd{Gb}}Bb}}}}{{BHfc}BHf{{Hb{{Al{BGl}}}}}}{{BBn{f{Cn{BFh{BFf}}}}{f{Cn{BFh{BFj}}}}}{{Bd{BFdBb}}}}`{{BGlc}BGl{{AMj{BGl}}}}{{{f{CGn}}}{{l{Lh}}}}{{{f{CH`}}}{{l{Lh}}}}{{{f{BNh}}}{{Bd{{l{Lh}}Bb}}}}{{{f{BNh}}}{{Bd{{l{In}}Bb}}}}{{CCjc}BGl{{AMj{BGl}}}}{{CCnc}BGl{{AMj{BGl}}}}{{{f{COj}}{f{AOh}}ee}{{Bd{AOhBb}}}{{Hb{An}}}{{Gh{}{{Cd{c}}}}}}{{BBnBBncc}BBn{{AMj{BGl}}}}`{{BGle}BGl{{AMj{BGl}}ABf}{{Hb{{Al{c}}}}}}{{BGleCEf}BGl{{AMj{BGl}}ABf}{{Hb{{Al{c}}}}}}```{{{f{An}}}AOb}{{{f{An}}{f{{Al{{f{An}}}}}}{f{An}}}{{Jb{J`In}}}}{{{f{An}}{f{{Al{{f{An}}}}}}{f{An}}}{{Jb{KbJd}}}}{{{f{An}}{f{{Al{{f{An}}}}}}{f{An}}Jf}{{Jb{JhJd}}}}``{{{f{AOb}}{f{AOb}}}{{Cb{AO`}}}}{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}{{Cb{AO`}}}{CNdNf}BHd}{{{f{CFh}}}{{f{CLh}}}}{{{f{CBl}}}{{f{CLh}}}}{{{f{BHj}}}{{f{CLh}}}}`{{{f{CFh}}}{{f{{Al{CGb}}}}}}{{{f{CBl}}}{{f{{Al{CGb}}}}}}{{{f{BHj}}}{{f{{Al{CGb}}}}}}``{{}BGl}{c{{DBf{{ADn{c}}}}}{}}{{ce}{{DBf{{ADn{ce}}}}}{}BHd}````{{BGlc}BGl{{AMj{BGl}}}}```{{D@j{f{An}}}BGl}0{{{f{AOh}}{f{AOh}}d}{{Bd{{Gf{{Oj{{Fn{Lb}}{Fn{Nh}}}}{Oj{{Fn{On}}{Fn{Nh}}}}}}Bb}}}}`{{{f{DAf}}}B`}{BGlBGl}{BBn{{Bd{{Gf{AOhAOh}}Bb}}}}```{{{f{{ADn{c}}}}{f{CnDBh}}}b{AIlNf}}{{{f{{ADn{ce}}}}{f{{ADn{ce}}}}}dNfBHd}{{{f{An}}BGlMl}BGl}{{{f{AGj}}L`Ml}{{Bd{{Cb{c}}Bb}}}{}}{{BBnBGlMl}BBn}{{BGlBGlMl}BGl}{{{f{DAh}}L`Ml}{{Bd{B`Bb}}}}{{{f{BG`}}L`Ml}{{Bd{B`Bb}}}}{{{f{CGn}}}{{l{Ld}}}}{{{f{CH`}}}{{l{Ld}}}}{{{f{BNh}}}{{Bd{{l{Ld}}Bb}}}}{{{f{Cnc}}e}{{Bd{{f{Cng}}B@f}}}{}CJ`{}}````{{{f{DBj}}CC`{Cb{Il}}}B`}{{BGlCC`{Cb{Il}}}BGl}{{{f{Cn{ADn{CK`}}}}{f{Cn{Al{Aj}}}}}{{Bd{FhB@f}}}}{{{f{Cn{ADn{CK`}}}}DBl}{{Bd{bB@f}}}}{{{BLl{c}}CAf}{{BLl{c}}}BGj}{{{f{Cn{ADn{CK`}}}}{f{Cn{Fn{Aj}}}}}{{Bd{FhB@f}}}}{{{f{Cn{ADn{CK`}}}}{f{CnEh}}}{{Bd{FhB@f}}}}{{{f{Cnc}}}{{Bd{eB@f}}}{}DBn}{{{f{Cn{ADn{CK`}}}}{f{Cn{Al{DC`}}}}}{{Bd{FhB@f}}}}{{{f{CFh}}}d}{{{f{BG`}}}B`}{{{f{CBl}}}d}{{{f{BHj}}}d}````{{ce}BGl{{Dh{B`B`}{{Df{{Bd{{Cb{B`}}Bb}}}}}}HjHlABf}{{Hb{{Al{BGl}}}}}}{{{f{AGn}}}B`}0{{{BGn{}{{Df{c}}}}{f{B`}}}c{}}{{BGlBGl}}{{{f{BH`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{CnB@n}}{f{An}}}{{Cb{Ef}}}}{{{f{CnBG`}}{f{An}}}b}{{BBnei}BBn{{Hb{An}}}{{Gh{}{{Cd{c}}}}}{{Hb{An}}}{{Gh{}{{Cd{g}}}}}}{{{f{CnB@n}}{f{An}}{ANj{ANh}}}{{Cb{{ANj{ANh}}}}}}{{CJb{Fn{Eh}}}BGl}{{cBGl}BGl{{AMj{BGl}}}}{{{f{B`}}{f{{l{El}}}}}{{Bd{{l{j}}Bb}}}}{{BGlc}BGl{{AMj{BGl}}}}{{{f{B`}}{f{B`}}{f{B`}}{f{B`}}{Cb{Ef}}}{{Bd{B`Bb}}}}{{{f{BKn}}{f{An}}{f{An}}}{{Bd{{l{n}}Bb}}}}{{BGlcc{Cb{c}}{Cb{Ef}}}BGl{{AMj{BGl}}}}1{{{f{CNh}}{Cb{Ef}}}{{Bd{MnBb}}}}{{{f{BKn}}{f{An}}{f{An}}Fh}{{Bd{{l{n}}Bb}}}}3{{{f{{Jb{JhJd}}}}{Cb{{f{An}}}}{f{{l{n}}}}CFf}{{Bd{{Jb{JhJd}}Bb}}}}{{BGl{f{{Al{Gb}}}}}BGl}{{{f{CLh}}}CGb}`{{{f{AH`}}}AH`}{{{f{BG`}}}B`}{BIhBGl}{BIjBGl}{BBnBBn}{BGlBGl}`{{BHfc}BHf{{Hb{{Al{BGl}}}}}}{{{f{CO`}}{Fn{B`}}{f{BCd}}}{{Bd{{Gf{B`{Fn{B`}}Bj}}Bb}}}}{{BBnBGlcBCd}BHb{{Hb{{Al{BGl}}}}}}{{BGlBCd}BGl}{{{f{AHb}}{f{Dh}}N`}{{Bd{B`Bb}}}}{{BGl{ADn{Dh}}{BI`{{ADn{BHn}}}}N`}BGl}{{{f{BG`}}{f{Dh}}N`}{{Bd{B`Bb}}}}{{BGlFhc}BGl{{E`{{f{Cn{l{Eb}}}}}{{Df{{Cb{L`}}}}}}HjHlDj}}{{{f{DCb}}N`}{{Bd{B`Bb}}}}{{BGlN`}BGl}{{{f{DCb}}{f{B`}}BNl}{{Bd{B`Bb}}}}{{BGlBGlBNl}BGl}32102032103{{BGlMlL`N`}BGl}2{{BGlBGlMlL`BNl}BGl}543254325432{{{f{DCd}}{f{{l{n}}}}AOb{Cb{{f{AJj}}}}}{{Bd{DCdBb}}}}{{{f{BNf}}Lb}{{Bd{B`Bb}}}}{{BGlLb}BGl}{{{f{BOf}}Gb{Cb{{f{AJj}}}}}{{Bd{GbBb}}}}0{{{f{BNf}}Ll}{{Bd{B`Bb}}}}{{BGlLl}BGl}2````{{{f{CFh}}}{{Cb{{f{DAd}}}}}}{{{f{CBl}}}{{Cb{{f{DAd}}}}}}{{{f{BHj}}}{{Cb{{f{DAd}}}}}}``````{{{f{D@h}}{l{j}}}{{l{j}}}}{{}{{BI`{{ADn{BHn}}}}}}{{BGlBGldd{Cb{Il}}}BGl}0`{{{f{BHh}}DCf}{{Bd{AOhBb}}}}{{{f{BHj}}DCf}{{Bd{AOhBb}}}}{{cCCb}{{Bd{BBnBb}}}{{Hb{CLh}}}}{{{ADn{{Al{CGb}}}}CCb}{{Bd{BBnBb}}}}{{cCCd}{{Bd{BBnBb}}}{{Hb{CLh}}}}{{{ADn{{Al{CGb}}}}CCd}{{Bd{BBnBb}}}}{{DCh{f{{Al{Lb}}}}e}{{Bd{B`Bb}}}Dj{{Gh{}{{Cd{{Cb{c}}}}}}}}{{{f{AHd}}c{Cb{e}}}{{Bd{AHdBb}}}{{Gh{}{{Cd{Lb}}}}}{}}{{{f{AHd}}ci}{{Bd{AHdBb}}}{{Gh{}{{Cd{Lb}}}}}{}{}{{Dh{{Cb{e}}}{{Df{{Cb{g}}}}}}}}{{{f{Cn{CJf{c}}}}}{{Bd{{ADn{BAh}}Bb}}}BGj}{{{f{Cn{BIl{c}}}}}{{Bd{B@nBb}}}BIn}{{{f{BLn}}}{{f{{ADn{BAh}}}}}}{{{f{Cn{BLl{c}}}}}{{Bd{{ADn{BAh}}Bb}}}BGj}{{{f{BBn}}}{{Bd{{ADn{B@n}}Bb}}}}{{{f{BHh}}{Cb{Fh}}}{{Bd{{ADn{B@n}}Bb}}}}{{{f{BHj}}{Cb{Fh}}}{{Bd{{ADn{B@n}}Bb}}}}{{{f{CF`}}}{{f{DCj}}}}``````{{{f{COh}}}{{l{Ld}}}}{{{f{CH`}}}{{l{Ld}}}}{{{f{BNh}}}{{Bd{{l{Ld}}Bb}}}}`{{{f{CHb}}}{{l{Jd}}}}`{{{f{Cn{ADn{CK`}}}}DCl}{{Bd{IlB@f}}}}{{BBnc}BBn{{Hb{{Al{BGl}}}}}}0````{{{f{AHd}}{f{{l{Af}}}}{Cb{c}}}{{Bd{AHdBb}}}{}}{{{f{CnB@n}}{f{An}}Ef}{{Cb{Ef}}}}{{{f{CnB@n}}FhEf}{{Cb{Ef}}}}{{{BLl{c}}d}{{BLl{c}}}BGj}{{{BM`{c}}d}{{BM`{c}}}BLf}{{{CJf{c}}d}{{CJf{c}}}BGj}{{{BIl{c}}d}{{BIl{c}}}BIn}{{{CJl{c}}d}{{CJl{c}}}BGj}4{{CJdd}CJd}{{BGlIh}BGl}{{{f{CnBCj}}{Cb{Hd}}}b}{{{f{AHf}}Gb}{{l{c}}}Dd}{{{f{BG`}}Gb}B`}{{BIhBGl}BGl}{{BIjBGl}BGl}{{BBnc}BBn{{AMj{BGl}}}}{{BGlBGl}BGl}{{{f{AHh}}Gbc}{{l{e}}}{}Dd}{{BBnce}BBn{{AMj{BGl}}}{{AMj{BGl}}}}{{BGlce}BGl{{AMj{BGl}}}{{AMj{BGl}}}}{{{f{CnB@n}}{f{An}}}{{Cb{Ef}}}}{{{f{CnB@n}}Fh}{{Cb{{Gf{{ANj{ANh}}Ef}}}}}}{BGlBGl}{{{f{CnAAd}}}b}{{{f{CnBG`}}}b}{{BGl{Cb{Il}}}BGl}``{{BBnCGbC@b}{{Bd{bBb}}}}{{BBnCGbC@j}{{Bd{bBb}}}}{{BBnCGbCA`}{{Bd{bBb}}}}{{BBnCGbCAj}{{Bd{bBb}}}}`````{{{f{BG`}}GbFh}B`}{{BIjBGlBGl}BGl}{{BBnGbLb}BBn}={{{f{CnBCj}}FhFh}b}0```{{{f{AHj}}FhFh}AHj}{{{f{c}}FhFh}e{}{}}1022{{BCjFhFh}BCj}0`{{{f{AEl}}d}{{l{c}}}Dd}{{BIhEj}BGl}{{BIjEj}BGl}{{BBncF`}BBn{{BC`{{ANj{ANh}}}}}}{{BGlEj}BGl}{{BGleF`}BGl{{AMj{BGl}}ABf}{{Hb{{Al{c}}}}}}{{BBncF`}BBn{{Hb{{Al{BGl}}}}}}{{{f{AEl}}Ej}{{l{c}}}Dd}{{{f{BG`}}Ej}{{Bd{B`Bb}}}}{{{f{{ADn{c}}}}}{{Cb{{f{AIl}}}}}{AIlNf}}{{{f{BKn}}{f{{l{n}}}}}{{l{j}}}}{{{f{BKn}}{f{{l{n}}}}Fh}{{Bd{AJnBb}}}}0{{{f{{l{n}}}}{f{{l{n}}}}e}{{l{j}}}{{Cj{}{{Cd{{f{An}}}}}}}{{Dh{{f{An}}{f{An}}}{{Df{c}}}}}}2{{{f{{l{n}}}}{f{{l{n}}}}Fhed}{{Bd{AJnBb}}}{{Cj{}{{Cd{{f{An}}}}}}}{{Dh{{f{An}}{f{An}}}{{Df{c}}}}}}2{BGlBGl}`{{{f{CG`}}{f{{Al{Aj}}}}}{{l{Af}}}}{{{f{CG`}}{f{{l{Ah}}}}}{{l{Af}}}}`{{BIhAj}BGl}{{BIjAj}BGl}{{{f{AHl}}Aj}{{Cb{L`}}}}{{BBnAj}BBn}{{BGlAj}BGl}{{{f{BG`}}Aj}{{Cb{L`}}}}{{{f{DCn}}Aj}B`}{{{f{BG`}}Aj}{{Bd{B`Bb}}}}{{LbLb}Nh}{BGlDD`}{{{f{{l{n}}}}{f{An}}d}{{l{n}}}}{{{f{BKn}}{f{B`}}}{{Bd{{l{n}}Bb}}}}{{{f{BKn}}}{{l{El}}}}0{{{f{BKn}}}{{l{n}}}}{{{f{BKn}}{f{B`}}{f{B`}}}{{Bd{{l{n}}Bb}}}}3````{{{f{BNh}}{f{An}}}{{Bd{B`Bb}}}}`{{BGlEf}BGl}`{{{f{{l{n}}}}{f{{l{n}}}}}{{l{n}}}}606060{{{f{BKn}}{f{{l{n}}}}}{{l{n}}}}10{{{f{{ADn{ce}}}}}FhNfBHd}{BGlCJb}{{{BGn{}{{Df{c}}}}{f{B`}}}c{}}{{BGlBGl}}{{{f{BH`}}{f{B`}}}{{Bd{B`Bb}}}}{{BHfc}BHf{{Hb{An}}}}{{D@j{f{An}}}BGl}{{{f{BFn}}}{{f{An}}}}`1{{{f{An}}}BGl}{BIhBGl}{BIjBGl}{{{f{AGh}}}{{Cb{c}}}{}}{BBnBBn}{BGlBGl}{{{f{DAf}}}Nd}{{}{{BI`{{ADn{BHn}}}}}}{{{f{Cnc}}i}{{Bd{gB@f}}}{}{}{}{{A@`{{f{Cne}}}{{Df{g}}}}}}{{BIjBGl}BGl}{{BBnLb}BBn}{{BHb{Cb{Fh}}}BBn}{{BGl{Cb{Fh}}}BGl}{{{f{AHn}}{f{c}}}{{Bd{AHnBb}}}Nf}{{{f{BG`}}{f{{l{El}}}}}{{Bd{B`Bb}}}}{{{f{DDb}}{f{{Al{Nh}}}}Ih}DDb}{{{f{DDb}}{f{{Al{Nh}}}}}DDb}{{{f{BG`}}{f{{Al{Lb}}}}}{{Bd{B`Bb}}}}{{{f{BG`}}{f{{Al{Lb}}}}}B`}{{{f{AI`}}{f{c}}}AI`Nf}{{{f{BG`}}{f{{l{El}}}}}B`}{{{f{CnBCj}}}{{Cb{Hd}}}}{{BGlBGlBGl}BGl}{{CChc}CCj{{AMj{BGl}}}}{{CClc}CCn{{AMj{BGl}}}}`{{BGlBGlAObBO`}BGl}```{{{f{BNh}}Jf}{{Bd{{l{Jd}}Bb}}}}{BBn{{Bd{DDdBb}}}}{CCf{{Bd{DDdBb}}}}1{{{f{CEj}}}{{Cb{Id}}}}{{BIjFh}BGl}{{{f{B@n}}d}BAh}{{{f{BCj}}}{{Ch{Cf}}}}{{{f{AIb}}}{{Fn{{f{{Al{Aj}}}}}}}}{{{f{BBn}}d}{{Bd{EhBb}}}}{{{f{DDf}}{Cb{{f{An}}}}d}{{Bd{AOhBb}}}}{{{f{BGd}}{Cb{{f{An}}}}d}{{Bd{AOhBb}}}}{{{f{BJf}}{f{B@n}}}{{Bd{MnBb}}}}{{{f{BGl}}{f{B@n}}CNf}{{Bd{MnBb}}}}{{{f{BKn}}{f{{l{El}}}}d}{{Bd{{l{Jd}}Bb}}}}{BIhBGl}{{{f{BKn}}}{{l{n}}}}{D@jBGl}{{{f{On}}}{{Cb{Lb}}}}{{{f{c}}}e{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BGlBGl}{{{f{CNh}}}{{Bd{MnBb}}}}{{{f{BNh}}{f{An}}}{{Bd{B`Bb}}}}{{{f{c}}}Eh{}}0000000000{{{f{CnB@n}}{f{B@n}}}{{Bd{dBb}}}}`887``{{BBnLbcF`}BBn{{Hb{{Al{BGl}}}}}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}g{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}c}g{}{}{}}{{c{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}g{}{}{}}{{{f{DDh}}{Cb{{f{AJj}}}}{f{{l{n}}}}{f{An}}}{{Bd{DDhBb}}}}{{{f{AOb}}Gb{Cb{{f{AJj}}}}ceg}{{Bd{GbBb}}}{{Dh{Gb}{{Df{Gb}}}}}{{Dh{Gb}{{Df{AJh}}}}}{{Dh{AJh}{{Df{Gb}}}}}}{{{f{AOb}}Gb{Cb{{f{AJj}}}}}{{Bd{GbBb}}}}{{{f{BOf}}Gb{Cb{{f{AJj}}}}}{{Bd{GbBb}}}}00010`10{g{{Bd{AKde}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{{ADdg}{{Bd{AKfe}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{AMf{{Bd{eg}}}{}{{AKd{c}}AIh}{}}0{{AMfADd}{{Bd{eg}}}{}{{AKf{c}}AIh}{}}0{{ABl{f{An}}}{{Bd{{l{c}}e}}}Dd{}}{{ABn{f{{l{c}}}}}{{Bd{{l{c}}e}}}Dd{}}10{{ABn{f{An}}Ef}{{Bd{{l{c}}e}}}Dd{}}0{c{{Bd{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Id{{Bd{CEjBb}}}}1111{{{ADn{{Al{c}}e}}}{{Bd{{ADn{{Ob{c}}e}}}}}{}BHd}2222222222222{COn{{Bd{CF`B@`}}}}{{{f{B@n}}{f{An}}}{{Bd{{f{Ef}}Bb}}}}{{{f{B@n}}Fh}{{Bd{{Gf{{f{{ANj{ANh}}}}{f{Ef}}}}Bb}}}}{{{f{B@n}}{f{An}}}{{Bd{MnBb}}}}{{{f{B@n}}{f{An}}}{{Bd{{Gf{Fh{f{{ANj{ANh}}}}{f{Ef}}}}Bb}}}}{{{f{CnB@n}}{f{An}}}{{Bd{{f{CnEf}}Bb}}}}{{{f{CNj}}{f{An}}}{{Bd{FhBb}}}}999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999{{BOh{Cb{CGb}}}{{Bd{{BGf{CK`}}Bb}}}}{{{f{CNh}}c}{{Bd{MnBb}}}{{A@`{{f{Ef}}}{{Df{{Bd{EfBb}}}}}}}}{{{f{CNh}}c}{{Bd{MnBb}}}{{A@`{{f{{Al{{f{Ef}}}}}}}{{Df{{Bd{EfBb}}}}}}}}{{BGlc}{{Bd{BGlBb}}}{{E`{BGl}{{Df{{Bd{BGlBb}}}}}}}}{{{f{CNh}}c}{{Bd{MnBb}}}{{A@`{{f{Mn}}}{{Df{{Bd{MnBb}}}}}}}}{{DAnFh}{{Bd{FhBb}}}}{Aj{{Bd{CBbBb}}}}{Lb{{Bd{CBdBb}}}}{Ll{{Bd{CBhBb}}}}{c{{Bd{{ADn{c}}DDj}}}{}}{{ADd{Fn{{Ch{Cf}}}}{Cb{Hd}}}{{Bd{BCjBb}}}}{{ce}{{Bd{{ADn{ce}}DDj}}}{}BHd}{{}{{Bd{{ADn{{BKl{c}}}}DDj}}}{}}{c{{Bd{{ADn{{BKl{e}}c}}DDj}}}BHd{}}10`{c{{Bd{{DBf{{ADn{c}}}}DDj}}}{}}{{ce}{{Bd{{DBf{{ADn{ce}}}}DDj}}}{}BHd}{{{f{BJ`}}{f{Cn{Fn{Aj}}}}}{{Bd{bBb}}}}{{{ADn{ce}}}{{Bd{c{ADn{ce}}}}}{}BHd}``{{{f{c}}}Ol{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{An}}}}`{{{f{AEn}}}{{Bd{AEnBb}}}}{BIhBGl}{BIjBGl}{{BBn{Cb{{Fn{Eh}}}}BAd}BBn}{BGlBGl}{{{f{BG`}}}{{Bd{B`Bb}}}}4321{{BBne}BBn{{Hb{An}}}{{Gh{}{{Cd{c}}}}}}{{{ADn{{DDl{c}}}}}{{Bd{cb}}}Hj}{{{ADn{ce}}}cABfBHd}4{{{f{DDn}}c{f{An}}AObAOb}{{Bd{AOhBb}}}{{BC`{Eh}}}}0{{{BLl{c}}d}{{BLl{c}}}BGj}```{{BHfCAl}BHf}`{{{f{BCj}}}{{Cb{{f{Hd}}}}}}0{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}cABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{D@`}}dd}{{Bd{AOhBb}}}}{{BGldd}BGl}`2`{{{f{BCj}}}{{f{{Al{{Ch{Cf}}}}}}}}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}gABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{BCj}}}D@b}{{BIhAj}BGl}{{BIjAj}BGl}{{{f{AHl}}Aj}{{Cb{L`}}}}{{BBnAj}BBn}{{BGlAj}BGl}{{{f{BG`}}Aj}{{Cb{L`}}}}{{{f{DCn}}Aj}B`}{{{f{BG`}}Aj}{{Bd{B`Bb}}}}`{{{f{DE`}}Nl{f{Cn{Fn{Il}}}}}{{Bd{bBb}}}}{{{f{DE`}}Nl{f{Cn{Al{Il}}}}}{{Bd{bBb}}}}`{{{f{{ADn{{DDl{c}}}}}}g}{{Bd{eb}}}Hj{}{{A@`{{f{c}}}{{Df{e}}}}}}{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{{ADn{ce}}}}}FhNfBHd}{{{f{CGn}}}{{l{Ld}}}}{{{f{CH`}}}{{l{Ld}}}}{{{f{BNh}}}{{Bd{{l{Ld}}Bb}}}}210{{{f{BOd}}}{{Cb{Lb}}}}{{{f{AOb}}}Gb}`{{{f{AOb}}}d}`{cCCh{{AMj{BGl}}}}{{CCjc}CCl{{AMj{BGl}}}}{{CCnc}CCl{{AMj{BGl}}}}```{{BHfBBn}BHf}{{CDjBGl}CDj}{{{BLb{c}}{DEb{Fh}}}{{BLb{c}}}BLf}{{{CJl{c}}{DEb{Fh}}}{{CJl{c}}}BGj}{{BHj{Cb{{DEb{Fh}}}}}BHj}{{CBld}CBl}{Fhc{}}0{FhB@n}{{{CJn{c}}{Cb{{DEb{Fh}}}}}{{CJn{c}}}BGj}{{BOhFh}BOh}{{BFnCAd}BFn}{{BBnBGl}BBn}{{{f{CnB@n}}{ANj{ANh}}Ef}{{Cb{Ef}}}}{{{CJf{c}}{Cb{{Fn{Eh}}}}}{{CJf{c}}}BGj}{{{BIl{c}}{Cb{{Fn{Eh}}}}}{{BIl{c}}}BIn}{{{BLl{c}}{Cb{{Fn{Eh}}}}}{{BLl{c}}}BGj}{{BOh{Cb{{ADn{{Fn{Eh}}}}}}}BOh}{{BBnc}BBn{{Hb{{Al{BGl}}}}}}`0{{BOj{Cb{c}}}BOj{{AMj{BOn}}}}{{CBl{Cb{{f{An}}}}}CBl}{{{CJh{c}}{Cb{C@l}}}{{CJh{c}}}{}}{{CGd{Cb{C@l}}}CGd}{{{BLh{c}}{Cb{C@l}}}{{BLh{c}}}BLf}{{CGh{Cb{C@l}}}CGh}{{{BM`{c}}CAn}{{BM`{c}}}BLf}{{BBnc}BBn{{Hb{{Al{BBn}}}}}}{{{BM`{c}}{Cb{Fh}}}{{BM`{c}}}BLf}{{{BLb{c}}{Cb{Eh}}}{{BLb{c}}}BLf}0{{CDjBGl}CDj}{{CDlBGl}CDl}{{BOjd}BOj}{{CBld}CBl}{{{f{CNh}}Ef}{{Bd{MnBb}}}}{{BOh{Cb{{ADn{{Fn{Ef}}}}}}}BOh}{{CBl{Cb{{ADn{B@n}}}}}CBl}{{BOjBOl}BOj}{{CBlBOl}CBl}{{BOjAj}BOj}{{CBlAj}CBl}{{CGdCGb}CGd}{{CGhCGb}CGh}{{{BLb{c}}{Cb{Fh}}}{{BLb{c}}}BLf}{{CDlBGlBGlBGl}CDl};{{BOhd}BOh}<{{{BLl{c}}{Cb{{Fn{B`}}}}}{{BLl{c}}}BGj}{{CDjBGlBGlBGl}CDj}3{{CDjBGl}CDj}{{CDlBGl}CDl}{{{CJl{c}}d}{{CJl{c}}}BGj}{{{CJn{c}}d}{{CJn{c}}}BGj}6{{CBld}CBl}{{BHjd}BHj}{{BOh{Cb{Fh}}}BOh}{{CBl{Cb{Fh}}}CBl}{{BHj{Cb{Fh}}}BHj}{{{CJj{c}}DEd}{{CJj{c}}}BLf}{{{CJl{c}}DEd}{{CJl{c}}}BGj}{{{BLb{c}}Eh}{{BLb{c}}}BLf}>7{{AMn{DEf{EhEh}}}AMn}{{BAh{DEf{EhEh}}}BAh}=<<=<{{BOjd}BOj}:>{{CFhc}CFh{{AMj{{Cb{Fh}}}}}}{{{CJf{c}}{Cb{Fh}}}{{CJf{c}}}BGj}{{{BIl{c}}{Cb{Fh}}}{{BIl{c}}}BIn}{{{CJn{c}}{Cb{Fh}}}{{CJn{c}}}BGj}{{{BLl{c}}{Cb{Fh}}}{{BLl{c}}}BGj}={{CBlc}CBl{{AMj{{Cb{Fh}}}}}}=<{{BHjc}BHj{{AMj{{Cb{Fh}}}}}}3?{{CDlBGl}CDl};{{BOj{Cb{C@`}}}BOj}{{CBl{Cb{C@`}}}CBl}{{BBnCEh}BBn}{{BOhBOj}BOh}{{CFhCGb}CFh}{{{CJn{c}}{Cb{e}}}{{CJn{c}}}BGj{{AMj{CGb}}}}{{BOh{Cb{c}}}BOh{{AMj{CGb}}}}{{CBlCGb}CBl}{{BHjCGb}BHj}{{CFh{ADn{{Al{CGb}}}}}CFh}{{CBl{ADn{{Al{CGb}}}}}CBl}{{BHj{ADn{{Al{CGb}}}}}BHj}{{{CJh{c}}d}{{CJh{c}}}{}}{{{BLh{c}}d}{{BLh{c}}}BLf}{{{BLl{c}}{Cb{{ADn{BGh}}}}}{{BLl{c}}}BGj}{{BBnd}BBn}{{{CJf{c}}{Cb{{Fn{Fh}}}}}{{CJf{c}}}BGj}{{{BIl{c}}{Cb{{Fn{Fh}}}}}{{BIl{c}}}BIn}{{{CJl{c}}{Cb{{Fn{Eh}}}}}{{CJl{c}}}BGj}{{{BLl{c}}{Cb{{Fn{Fh}}}}}{{BLl{c}}}BGj}{{BOh{Cb{{ADn{{Fn{Fh}}}}}}}BOh}5{{{BLb{c}}Aj}{{BLb{c}}}BLf}{{BOj{Cb{Aj}}}BOj}{{CBl{Cb{Aj}}}CBl}{{{BLb{c}}C@f}{{BLb{c}}}BLf}{{BOhd}BOh}{{CBld}CBl}{{CFhd}CFh}{{{CJn{c}}d}{{CJn{c}}}BGj}32{{BHjd}BHj}>{{{BM`{c}}{Cb{Fh}}}{{BM`{c}}}BLf}{{CFhc}CFh{{AMj{{Cb{DAd}}}}}}{{{CJf{c}}{Cb{DAd}}}{{CJf{c}}}BGj}{{{BIl{c}}{Cb{DAd}}}{{BIl{c}}}BIn}{{{BLl{c}}{Cb{DAd}}}{{BLl{c}}}BGj}{{BOh{Cb{DAd}}}BOh}{{BBn{f{An}}{Cb{Lb}}}BBn}{{CBl{Cb{DAd}}}CBl}{{CBlc}CBl{{AMj{{Cb{DAd}}}}}}{{BHj{Cb{DAd}}}BHj}{{BHjc}BHj{{AMj{{Cb{DAd}}}}}}{{{f{CNh}}}{{Bd{MnBb}}}}{{BOhFh}BOh}{{{CJl{c}}{ADn{B@n}}}{{CJl{c}}}BGj}{{{CJn{c}}{ADn{B@n}}}{{CJn{c}}}BGj}{{{BLl{c}}{Cb{{ADn{BAh}}}}}{{BLl{c}}}BGj}{{BOh{Cb{{ADn{B@n}}}}}BOh}{{CBl{Cb{{ADn{B@n}}}}}CBl}{{BHj{Cb{{ADn{B@n}}}}}BHj}{{CBlc}{{Bd{CBlBb}}}{{Dh{B@n}{{Df{{Bd{B@nBb}}}}}}}}{{{CJl{c}}{f{B@n}}}{{CJl{c}}}BGj}{{{CJn{c}}{f{B@n}}}{{CJn{c}}}BGj}5{{CDjBGl}CDj}{{CDlBGl}CDl}{{{BLb{c}}Aj}{{BLb{c}}}BLf}{{BOjAj}BOj}{{CBlAj}CBl}{{BBnd}BBn}?{{CBlFh}CBl}{{BOhFh}BOh}12{{{BM`{c}}d}{{BM`{c}}}BLf}3{{{BLb{c}}{Cb{Eh}}}{{BLb{c}}}BLf}{{CDjJf}CDj}{{CDj{Cb{Eh}}}CDj}{{BOjd}BOj}{{CBld}CBl}108{{BCj{Cb{Hd}}}BCj}{{{f{BCj}}{Cb{Hd}}}{{Ch{Cf}}}}{{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}{Cb{Hd}}}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}?{{CDjBGl}CDj}{BBnBBn}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}{{{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}c}e{}{}{}}10{{c{A@h{}{{A@b{c}}{A@d{e}}{A@f{g}}}}}e{}{}{}}210213210210{{{f{Cn{ADn{CK`}}}}{f{{Al{Aj}}}}}{{Bd{FhB@f}}}}{{{f{Cnc}}e}{{Bd{FhB@f}}}{}DBn}{{{f{Cn{ADn{CK`}}}}{f{{Al{DEh}}}}}{{Bd{FhB@f}}}}{{BGlc}BGl{{AMj{BGl}}}}{{{f{CGn}}}{{l{In}}}}{{{f{CH`}}}{{l{In}}}}{{{f{BNh}}}{{Bd{{l{In}}Bb}}}}``{{{f{AId}}{f{{l{Af}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Dd}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{BCn}}c}B`{{Dh{{Gf{Lb{f{{BD`{Lb}}}}}}}{{Df{Cb}}}}HjHl}}{{{f{BCn}}c}B`{{Dh{{Gf{Lb{f{{BD`{Lb}}}}}}}{{Df{}}}}HjHl}}{{{f{{Al{{Ob{Lb}}}}}}c}B`{{Dh{{Ob{Lb}}}{{Df{Cb}}}}HjHl}}{{{f{{Al{{Ob{Lb}}}}}}c}B`{{Dh{{Ob{Lb}}}{{Df{}}}}HjHl}}{{{f{{Al{c}}}}e{Cb{{ADn{ADf}}}}}{{AJ`{c}}}{BEfBEh}{{Cj{}{{Cd{{Gf{LbLb}}}}}}Ib}}{{{f{{Al{c}}}}{f{Hd}}e{Cb{{ADn{ADf}}}}}{{AJ`{c}}}{BEfBEh}{{Cj{}{{Cd{{Gf{LbLb}}}}}}Ib}}{{{f{{l{c}}}}LbLb}{{l{c}}}Dd}{{{f{{Fn{{Ob{Lb}}}}}}{f{{Al{{Ch{Cf}}}}}}}d}{{{f{BEj}}{f{Bj}}}B`}{{BElBEl}BEl}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DdDd{{Dh{ff}{{Df{}}}}}{{Dh{f}{{Df{}}}}}{{Dh{f}{{Df{}}}}}Dd}{{{l{c}}{l{e}}gik}{{l{m}}}DdDd{{Dh{}{{Df{}}}}}{{Dh{}{{Df{}}}}}{{Dh{}{{Df{}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DdDdCf{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DdDd{{AIf{CbCb}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}g}bDdDd{{E`{CbCb}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DdDd{}{{E`{}{{Df{g}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}i{f{An}}}{{l{k}}}DdDd{CfAIh}{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{An}}}{{l{k}}}DdDdCf{{E`{ff}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DdDdCf{{E`{}{{Df{g}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DdDd{{E`{ff}{{Df{{Ch{Cf}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DdDd{{E`{ff}{{Df{{Ch{Cf}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DdDd{}{}{{E`{CbCb}{{Df{{Bd{{Cb{g}}i}}}}}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DdDdDd{{AIj{CbCbCb}}}Dd}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DdDdCfAIl{{E`{ff}{{Df{{Bd{gi}}}}}}}{{Dd{}{{Gn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{An}}}{{Bd{{l{m}}i}}}DdDdCfAIl{{E`{ff}{{Df{{Bd{gi}}}}}}}{{Dd{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DdDdAIl{{E`{ff}{{Df{{Bd{{Ch{Cf}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DdDdDd{}{}{{E`{CbCbCb}{{Df{{Bd{{Cb{i}}k}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{Cb}{{Df{{Bd{{Cb{e}}g}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{}{}{{E`{}{{Df{{Bd{eg}}}}}}}Dd}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Dd{CfAIh}AIl{{E`{f}{{Df{{Bd{eg}}}}}}}{{Dd{}{{Gn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dd{{AIn{Cb}}}Dd}{{{f{{l{c}}}}e}{{l{g}}}DdAInDd}{{{f{{l{c}}}}g}{{l{i}}}DdCf{{E`{f}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}{{{l{c}}g}{{l{i}}}DdCf{{E`{}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dd{CfAIh}{{E`{f}{{Df{e}}}}}{{Dd{}{{Gn{e}}}}}}0``{{{f{DEj}}}{{l{El}}}}0{{{f{DEj}}{f{{l{Jd}}}}d}{{Bd{B`Bb}}}}{{{f{DEj}}{f{{l{n}}}}d}{{Bd{B`Bb}}}}{{{f{DEj}}}B`}{{{f{DEj}}}{{Bd{B`Bb}}}}1{{{f{DEj}}}{{Bd{{l{El}}Bb}}}}{{{f{DEj}}}{{l{Bh}}}}{{{f{DEj}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{DEj}}Ej}{{Bd{{l{Bh}}Bb}}}}{{{f{DEj}}Aj}{{Bd{B`Bb}}}}5{{{f{DEj}}}{{Bd{{l{j}}Bb}}}}01{{{f{DEl}}}{{f{{l{Bh}}}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{BMfBGl}BGl}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}3{cc{}}{{}Fh}{ce{}{}}6{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}2````````{{{f{BJd}}{Cb{{f{An}}}}d}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJd}}{Cb{{f{An}}}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJd}}{Cb{{f{An}}}}Jfdd{Cb{{f{Eh}}}}{f{{l{n}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{BJd}}{Cb{{f{An}}}}Jfd{Cb{{f{Eh}}}}{f{{l{n}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{BJd}}{Cb{{f{An}}}}d}{{Bd{{Jb{KbJd}}Bb}}}}`{{{f{CGn}}}{{l{Ld}}}}{{{f{CH`}}}{{l{Ld}}}}{{{f{CHb}}}{{l{Jd}}}}`{{{f{COh}}}{{l{Ld}}}}21{{{f{CGn}}}{{l{Af}}}}{{{f{CH`}}}{{l{Af}}}}{{{f{CGn}}}{{l{In}}}}{{{f{CH`}}}{{l{In}}}}55`46576{{{f{COh}}}{{l{In}}}}16{{{f{CGn}}}{{l{Lh}}}}{{{f{CH`}}}{{l{Lh}}}}{{{f{An}}{f{{Al{{f{An}}}}}}{f{An}}}{{Jb{J`In}}}}{{{f{An}}{f{{Al{{f{An}}}}}}{f{An}}}{{Jb{KbJd}}}}{{{f{An}}{f{{Al{{f{An}}}}}}{f{An}}Jf}{{Jb{JhJd}}}}=<{{{f{DCb}}N`}{{Bd{B`Bb}}}}{{{f{DCb}}{f{B`}}BNl}{{Bd{B`Bb}}}}101010101010<>=``?>?>`98````````{{{f{c}}h}b{}}{{{f{BJd}}{Cb{{f{An}}}}d}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJd}}{Cb{{f{An}}}}}{{Bd{{Jb{J`In}}Bb}}}}{{{f{BJd}}{Cb{{f{An}}}}Jfdd{Cb{{f{Eh}}}}{f{{l{n}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{BJd}}{Cb{{f{An}}}}Jfd{Cb{{f{Eh}}}}{f{{l{n}}}}}{{Bd{{Jb{JhJd}}Bb}}}}{{{f{DEn}}}{{f{{l{n}}}}}}{{{f{BJd}}{Cb{{f{An}}}}d}{{Bd{{Jb{KbJd}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{DF`}}}DF`}{{{f{c}}{f{Cne}}}b{}{}}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{DF`}}{f{DF`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{DF`}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{{f{DF`}}{f{Cnc}}}bAGb}`{{}Fh}{ce{}{}}{{{f{DF`}}{f{An}}}d}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}4````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{{DFb{c}}}}}{{DFb{c}}}{ABfA`}}{{{f{c}}{f{Cne}}}b{}{}}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}?{{{f{An}}}{{Cb{DF`}}}}>=`{{{f{Cn{DFb{c}}}}{f{An}}}CbA`}{{{f{CnDFd}}{f{{Al{Aj}}}}{Cb{Jf}}}{{Cb{c}}}{}}{{{f{Cn{DFb{In}}}}{f{{Al{Aj}}}}{Cb{Jf}}}{{Cb{Ll}}}}{{{f{Cn{DFb{Jd}}}}{f{{Al{Aj}}}}{Cb{Jf}}}{{Cb{Gb}}}}`?>{{c{Cb{Jf}}}{{Bd{{DFh{}{{DFf{e}}}}Bb}}}{}{}}{{DF`{Cb{Jf}}}{{Bd{{DFb{Jd}}Bb}}}}{{DF`{Cb{Jf}}}{{Bd{{DFb{In}}Bb}}}}{c{{Bd{e}}}{}{}}{{{f{c}}}Ol{}}{ce{}{}}```````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Cnc}}}{{f{Cne}}}{}{}}0{{{f{CFj}}}CFj}{{{f{c}}{f{Cne}}}b{}{}}{{}CFj}{Fh{{f{c}}}{}}0{Fh{{f{Cnc}}}{}}0{Fhb}0{{{f{CFj}}{f{CFj}}}d}{{{f{DFj}}{f{DFj}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CFj}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}0{{{f{An}}}{{Bd{DFj}}}}{{{f{An}}g}{{Bd{CFjBb}}}{{Hb{An}}}{{AMj{Eh}}}{{Gh{}{{Cd{{Gf{ce}}}}}}}}{{{f{CFj}}{f{Cnc}}}bAGb}{{}Fh}0{ce{}{}}0``{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}000{{{f{c}}}Ol{}}033````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAKd{}{{Gh{}{{Cd{c}}}}}}0{{ADde}AKf{}{{Gh{}{{Cd{c}}}}}}0{{{f{AKh}}}{{f{Ef}}}}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{Cb{{f{{Al{c}}}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{AK`}}{f{AK`}}c}{{Bd{AK`Bb}}}ALh}{{{f{ALj}}{f{Ef}}}{{Bd{B`Bb}}}}`{AMfe{}{{AKd{c}}AIh}}0{{AMfADd}e{}{{AKf{c}}AIh}}0{{{ALd{An}}}Ef}{{{f{ALj}}}{{f{Ef}}}}`{{ALh{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{{{Fn{c}}ADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{Fn{c}}ADd}{{AIh{}{{AKj{e}}{AKl{c}}{AKn{g}}}}}{AL`{ALb{e}}}ABf{{G`{}{{Cd{e}}}}IbHjHl}}{{FhcADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{FhADd}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{ALj}}Fh}{{Bd{IdBb}}}}{{{f{ALj}}Fh}Id}{{}Ef}{{{f{ANl}}Fh}Id}4{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{ADl{cgADj}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}{{Cb{c}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{{{f{AK`}}{f{AK`}}}{{Bd{{Gf{AK`AK`}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gf{{l{j}}{l{j}}}}Bb}}}}{{{f{Ef}}{f{Ef}}}{{Bd{EfBb}}}}`{{}c{}}0{g{{Bd{AKde}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{{ADdg}{{Bd{AKfe}}}{}{}{{Gh{}{{Cd{{Bd{ce}}}}}}}}0{AMf{{Bd{eg}}}{}{{AKd{c}}AIh}{}}0{{AMfADd}{{Bd{eg}}}{}{{AKf{c}}AIh}{}}0{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}Fh}cABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}0{{{f{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}}}gABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}{Fhc{}}0{{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}{Cb{Hd}}}{{AIh{}{{AKj{c}}{AKl{e}}{AKn{g}}}}}ABf{AL`{ALb{c}}}{{G`{}{{Cd{c}}}}IbHjHl}}```````````{{{f{AK`}}{f{AK`}}c}{{Bd{AK`Bb}}}ALh}{{ALh{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}=<`````````{{}b}0{{}d}{{{f{{Jb{JhJd}}}}{f{{l{n}}}}CFf{Fj{Gb}{{Df{AJh}}}}{Fj{AJh}{{Df{Gb}}}}{f{AJj}}{f{AJj}}}{{Bd{{l{Jd}}Bb}}}}{{{f{{Jb{JhJd}}}}{Cb{{f{An}}}}{Fj{Gb}{{Df{AJh}}}}{Fj{AJh}{{Df{Gb}}}}{f{AJj}}{f{AJj}}}{{Bd{{l{Jd}}Bb}}}}{{{f{{Jb{JhJd}}}}{Cb{{f{An}}}}{f{{l{n}}}}CFf}{{Bd{{Jb{JhJd}}Bb}}}}```{{c{Cb{Hd}}}CMd{}}{{{CMf{Gb}}{CMf{Aj}}{Cb{Hd}}}CMh}{{{CMf{Gb}}{CMf{Aj}}{Cb{Hd}}}CMj}`{CI`BGl}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{CI`Jf}BGl}3{{CI`BGlJf}BGl}{{CI`Eh}BGl}555{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}8{cc{}}9{{}Fh}{ce{}{}};;;;;;;;;;{{CI`{Cb{Eh}}BGlCFf}BGl}{{CI`BGlc}BGl{{Hb{An}}}}={{CI`{f{An}}}BGl}>;0>>>>>>>{{CI`BGlEh}BGl}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}6{CI`BGl}0?0`{{{f{BEn}}{f{AOh}}{f{Bj}}}{{Bd{B`Bb}}}}{{{f{BEn}}}{{Bd{{f{An}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{}DFl}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{DFl{Cb{{f{ADd}}}}}{{Bd{ACjBb}}}}{cc{}}{{}Fh}{ce{}{}}{{{f{DFl}}}d}{{FhFh}DFl}{{{f{CnDFl}}{Ch{Cf}}}b}{{{f{CnDFl}}}b}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}6`{{{f{{l{c}}}}}FhA`}0`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{DFn}}}DFn}{{{f{c}}{f{Cne}}}b{}{}}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{DFn}}{f{DFn}}}d}{{{f{DFn}}{f{CnGj}}}{{Bd{bGl}}}}0{cc{}}{{{f{DFn}}{f{Cnc}}}bAGb}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Eh{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}4````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{DG`}}}DG`}{{{f{c}}{f{Cne}}}b{}{}}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{DG`}}{f{DG`}}}d}{{{f{DG`}}{f{CnGj}}}{{Bd{bGl}}}}0{cc{}}{{{f{DG`}}{f{Cnc}}}bAGb}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Eh{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}4{{IhIh}Ih}{{{f{{l{El}}}}Lb}{{Bd{bBb}}}}{{{f{{AJ`{Lb}}}}Lb}{{Bd{bBb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{Bj}}}B`}0{{{f{B`}}{f{An}}}B`}0`{{{f{c}}h}b{}}{{{f{DGb}}}{{f{ADf}}}}{{{f{CnDGb}}}{{Ch{Cf}}}}{{{f{CnDGb}}}{{f{CnADf}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{DGb}}}DGb}{{{f{c}}{f{Cne}}}b{}{}}{{{f{DGb}}}{{f{ADd}}}}{{}DGb}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{CnDGb}}Fh}b}{{{f{DGb}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{}Fh}{ce{}{}}{{{f{DGb}}}Fh}{FhDGb}{{{f{CnDGb}}}b}70{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}{{{f{DGb}}}{{Cb{{f{DGd}}}}}}7````{{AJb{f{c}}d}LbAIh}{{{f{{l{c}}}}}{{Gf{Fh{l{c}}}}}Dd}``{{{f{DGf}}}{{f{B`}}}}{{{f{BNh}}}{{Bd{{l{In}}Bb}}}}{{{f{BNh}}}{{Bd{{l{Ld}}Bb}}}}0{{{f{BNh}}}{{Bd{{l{Af}}Bb}}}}22112{{{f{BNh}}}{{Bd{{l{Lh}}Bb}}}}322{{{f{BNh}}{f{An}}}{{Bd{B`Bb}}}}{{{f{BNh}}Jf}{{Bd{{l{Jd}}Bb}}}}1445`{{{f{AHj}}FhFh}AHj}0`{{Fh{f{Cn{Fn{d}}}}}b}```11{{Fh{f{{Al{B`}}}}{f{CnF`}}}{{Bd{{AJd{{l{El}}}}Bb}}}}{{{f{{Al{B`}}}}{f{{Al{d}}}}d}{{Bd{AJfBb}}}}{{{f{An}}{f{{Al{B`}}}}{f{{Al{d}}}}d}{{Bd{{l{En}}Bb}}}}{{{f{An}}{f{{Al{B`}}}}}{{Bd{{l{En}}Bb}}}}{{{f{B`}}}{{Bd{{Ch{Cf}}Bb}}}}{{{f{{Al{B`}}}}}{{Bd{AJfBb}}}}{{{f{{Al{B`}}}}}{{Bd{{l{En}}Bb}}}}0```````````88```{{{f{BKj}}}{{f{{l{n}}}}}}{{{f{BKn}}}{{Bd{{l{n}}Bb}}}}{{{f{BKn}}}{{l{n}}}}{{{f{BKn}}{f{{l{n}}}}}{{l{n}}}}{{{f{BKn}}{f{An}}d}{{Bd{{l{Af}}Bb}}}}{{{f{BKn}}{f{{l{n}}}}dd}{{Bd{{l{Af}}Bb}}}}{{{f{BKn}}{f{An}}}{{Bd{{l{Af}}Bb}}}}{{{f{BKn}}{f{An}}d}{{Bd{{l{El}}Bb}}}}{{{f{BKn}}{f{{l{n}}}}d}{{Bd{{l{El}}Bb}}}}{{{f{BKn}}{f{{l{n}}}}Fh}{{Bd{{l{n}}Bb}}}}{{{f{BKn}}{f{An}}}{{Bd{{l{j}}Bb}}}}{{{f{BKn}}{f{{l{n}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BKn}}{f{An}}{f{Ef}}}{{Bd{B`Bb}}}}5{{{f{BKn}}{f{{l{n}}}}dd}{{Bd{{l{El}}Bb}}}}{{{f{BKn}}{f{An}}}{{Bd{{l{El}}Bb}}}}=<{{{f{{Al{{f{{l{n}}}}}}}}{f{An}}d}{{Bd{{l{n}}Bb}}}}{{{f{BKn}}{f{An}}{f{An}}}{{Bd{{l{n}}Bb}}}}0{{{f{BKn}}{f{An}}{f{An}}Fh}{{Bd{{l{n}}Bb}}}}1{{{f{BKn}}{f{{l{n}}}}}{{l{j}}}}{{{f{BKn}}{f{{l{n}}}}Fh}{{Bd{AJnBb}}}}0{{{f{{l{n}}}}{f{{l{n}}}}e}{{l{j}}}{{Cj{}{{Cd{{f{An}}}}}}}{{Dh{{f{An}}{f{An}}}{{Df{c}}}}}}2{{{f{{l{n}}}}{f{{l{n}}}}Fhed}{{Bd{AJnBb}}}{{Cj{}{{Cd{{f{An}}}}}}}{{Dh{{f{An}}{f{An}}}{{Df{c}}}}}}2{{{f{{l{n}}}}{f{An}}d}{{l{n}}}}{{{f{BKn}}{f{B`}}}{{Bd{{l{n}}Bb}}}}{{{f{BKn}}}{{l{El}}}}0{{{f{BKn}}}{{l{n}}}}{{{f{BKn}}{f{B`}}{f{B`}}}{{Bd{{l{n}}Bb}}}}3{{{f{{l{n}}}}{f{{l{n}}}}}{{l{n}}}}404040{{{f{BKn}}{f{{l{n}}}}}{{l{n}}}}10{{{f{BKn}}{f{{l{El}}}}d}{{Bd{{l{Jd}}Bb}}}}444````````{{eFhFh}{{DGh{Gb}}}{{Hb{An}}}{{Cj{}{{Cd{c}}}}}}{{eFhFh}{{DGj{Gb}}}{{Hb{{Al{Aj}}}}}{{Cj{}{{Cd{c}}}}}}```````````{{{f{c}}h}b{}}0{{{f{BG`}}}{{Bd{NdBb}}}}{{{f{An}}{Fn{{Ch{Cf}}}}{f{ADd}}}{{Bd{B`Bb}}}}{{{f{An}}{Fn{{Ch{Cf}}}}{f{ADd}}{Cb{{f{{DEf{EhEh}}}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{B`}}}}{{B`c}{}{AbKn}}{{B`B`}}{{{f{B`}}c}{}{AbKn}}{{{f{CnB`}}{f{B`}}}{{Bd{{f{CnB`}}Bb}}}}{{{f{B`}}}{{Cb{Fh}}}}0{{{f{BG`}}Ej}{{l{El}}}}{{{f{BG`}}}{{Bd{{l{El}}Bb}}}}`{{{f{B`}}}{{Bd{{f{{l{Bh}}}}Bb}}}}{{{f{B`}}Fh}{{f{{Ch{Cf}}}}}}{{{f{BG`}}}{{f{ADf}}}}{{{f{CnBG`}}}{{f{CnADf}}}}{{{f{B`}}}{{l{j}}}}{{{f{CnBG`}}}{{f{Cn{l{c}}}}}Dd}{{{f{BG`}}}{{f{{l{c}}}}}Dd}{{{f{B`}}}{{f{BG`}}}}{{{f{B`}}}{{f{B`}}}}0{{{f{CnBG`}}}{{Bd{FhBb}}}}{{{f{CnB`}}}{{Bd{FhBb}}}}{{{f{B`}}}{{Bd{{f{{l{Ah}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{En}}}}Bb}}}}{{{f{BG`}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{B`}}}{{Bd{{f{{l{Af}}}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Cnc}}}{{f{Cne}}}{}{}}00{{{f{BG`}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{Ef}}}{{Bd{B`Bb}}}}0{{{f{B`}}}{{Bd{{f{AK`}}Bb}}}}6{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}c}{{Bd{B`Bb}}}Ad}{{{f{BG`}}}{{Fl{{Ff{{Ch{Cf}}}}{Fj{{f{{Ch{Cf}}}}}{{Df{Fh}}}}}}}}{{{f{BG`}}}{{f{{Fn{{Ch{Cf}}}}}}}}{{{f{CnBG`}}}{{f{Cn{Fn{{Ch{Cf}}}}}}}}{{{f{CnB`}}}{{f{Cn{Fn{{Ch{Cf}}}}}}}}{{{f{B`}}}B`}{{{f{Ih}}}Ih}1{{{f{BG`}}}{{ADn{BG`}}}}{{{f{c}}{f{Cne}}}b{}{}}0{{{f{CnB`}}}b}{{{f{B`}}}{{Bd{{f{{Jb{J`In}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jb{JhJd}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jb{JlJj}}}}Bb}}}}{{}B`}{Fh{{f{c}}}{}}00{{{f{B`}}}f}{Fh{{f{Cnc}}}{}}00{{B`c}{}{AbKn}}{{B`B`}}{{{f{B`}}c}{}{AbKn}}{{{f{B`}}{f{B`}}}}{Fhb}00{{{f{BG`}}}B`}{{{f{BG`}}}{{f{Ef}}}}{{{f{B`}}}{{Bd{{f{{Jb{JnJd}}}}Bb}}}}{{{f{Ih}}{f{Ih}}}d}{{{f{B`}}{f{B`}}}d}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}{{{f{B`}}{f{An}}}{{Bd{{l{Af}}Bb}}}}{{{f{B`}}c}{{Bd{{l{Af}}Bb}}}AMl}{{{f{B`}}{f{B`}}}{{Bd{{l{Af}}Bb}}}}3{{{f{B`}}c}{}AMl}{{{f{B`}}{f{An}}}}266{{{f{c}}{f{e}}}d{}{}}00{{{f{B`}}}Fh}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{CnB`}}{f{B`}}}{{Bd{{f{CnB`}}Bb}}}}{{{f{B`}}IdFh}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ed}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Eb}}}}Bb}}}}{{{f{BG`}}}{{Dl{Mn}}}}{{{f{B`}}AFb}{{Bd{B`Bb}}}}{{{f{BG`}}{f{{l{Af}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{{l{Af}}}}d}{{Bd{B`Bb}}}}{{{f{Ih}}{f{CnGj}}}{{Bd{bGl}}}}{{{f{B`}}{f{CnGj}}}{{Bd{bGl}}}}0{{{f{B`}}}Eh}{cc{}}0{{{Jb{JhJd}}}B`}{{{l{c}}}B`Dd}{{{Jb{J`In}}}B`}{{{Jb{JnJd}}}B`}{{{Jb{KbJd}}}B`}5{{{f{An}}{f{{Al{Id}}}}d}{{Bd{B`Bb}}}}{{{f{An}}{f{{Al{Id}}}}{f{Ef}}d}{{Bd{B`Bb}}}}{{{f{An}}{Ch{Cf}}}{{Bd{B`Bb}}}}{{{f{An}}{Fn{{Ch{Cf}}}}{f{Ef}}}B`}{g{{Bd{ic}}}{}{}{{H`{c}{{Cd{e}}}}}{}}{cB`{{Gh{}{{Cd{{Cb{Ij}}}}}}}}{cB`{{Gh{}{{Cd{Ij}}}}}}{cB`{{Gh{}{{Cd{Aj}}}}}}{cB`{{Gh{}{{Cd{Eh}}}}}}{cB`{{Gh{}{{Cd{{Cb{Il}}}}}}}}{cB`{{Gh{}{{Cd{{f{Gb}}}}}}}}{cB`{{Gh{}{{Cd{{f{Il}}}}}}}}{cB`{{Gh{}{{Cd{Il}}}}}}{cB`{{Gh{}{{Cd{{Cb{Ll}}}}}}}}{cB`{{Gh{}{{Cd{Gb}}}}}}{cB`{{Gh{}{{Cd{{f{Lj}}}}}}}}{cB`{{Gh{}{{Cd{{f{Mf}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Lj}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Gb}}}}}}}}{cB`{{Gh{}{{Cd{{f{Ij}}}}}}}}{cB`{{Gh{}{{Cd{Lf}}}}}}{cB`{{Gh{}{{Cd{{f{Lb}}}}}}}}{cB`{{Gh{}{{Cd{L`}}}}}}{cB`{{Gh{}{{Cd{{f{Ll}}}}}}}}{cB`{{Gh{}{{Cd{{f{Lf}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Aj}}}}}}}}{cB`{{Gh{}{{Cd{d}}}}}}{cB`{{Gh{}{{Cd{{f{An}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Lb}}}}}}}}{cB`{{Gh{}{{Cd{Lb}}}}}}{cB`{{Gh{}{{Cd{Mf}}}}}}{cB`{{Gh{}{{Cd{Lj}}}}}}{cB`{{Gh{}{{Cd{{Cb{Lf}}}}}}}}{cB`{{Gh{}{{Cd{{f{d}}}}}}}}{cB`{{Gh{}{{Cd{{f{L`}}}}}}}}{cB`{{Gh{}{{Cd{Ll}}}}}}{cB`{{Gh{}{{Cd{{Cb{d}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{Mf}}}}}}}}{cB`{{Gh{}{{Cd{{f{Aj}}}}}}}}{cB`{{Gh{}{{Cd{{Cb{L`}}}}}}}}{{{f{An}}{Fn{Aj}}}B`}{{{f{An}}{Fn{L`}}}B`}{{{f{An}}{Fn{Ij}}}B`}{{{f{An}}{Fn{Lb}}}B`}{{{f{An}}{Fn{Lj}}}B`}{{{f{An}}{Fn{Lf}}}B`}{{{f{An}}{Fn{Il}}}B`}{{{f{An}}{Fn{Ll}}}B`}{{{f{An}}{Fn{Gb}}}B`}{{{f{An}}{Fn{Mf}}}B`}{{{f{An}}Fh{f{Ef}}}B`}{{{f{B`}}FhFh}B`}{{{f{BG`}}Fh}{{Bd{IdBb}}}}{{{f{B`}}}Fh}{{{f{B`}}}C`}{{{f{BG`}}Fh}{{Cb{{f{If}}}}}}{{{f{BG`}}FhFh}{{Cb{{f{If}}}}}}{{{f{BG`}}Fh}Id}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}{{{f{B`}}{f{An}}}{{Bd{{l{Af}}Bb}}}}{{{f{B`}}c}{{Bd{{l{Af}}Bb}}}AMl}{{{f{B`}}{f{B`}}}{{Bd{{l{Af}}Bb}}}}30{{{f{B`}}{f{An}}}}2{{{f{BG`}}}d}{{{f{Ih}}{f{Cnc}}}bAGb}{{{f{B`}}{Cb{Fh}}}B`}{{{f{B`}}}{{Bd{{f{{l{Lh}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{In}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Jd}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ld}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{El}}}}Bb}}}}`{{{f{B`}}}{{Bd{{l{j}}Bb}}}}{{}Fh}00{ce{}{}}00{B`AOh}1{BA`B`}{B`B`}={{{f{B`}}}{{Bd{{l{Af}}Bb}}}}000{{{f{BG`}}}{{l{Af}}}}0{{}d}0{{{f{B`}}}Ih}{{{f{B`}}}DGl}{{{f{BG`}}}Fh}{{{f{BG`}}Fh}B`}{{{f{B`}}}{{Bd{{f{{l{j}}}}Bb}}}}{B`BGl}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}{{{f{B`}}c}{{Bd{{l{Af}}Bb}}}AMl}{{{f{B`}}{f{B`}}}{{Bd{{l{Af}}Bb}}}}{{{f{B`}}{f{An}}}}3210{{{f{B`}}}{{Bd{{Cb{c}}Bb}}}Kn}{{{f{BG`}}}{{Bd{B`Bb}}}}{{{f{BG`}}}{{Cb{L`}}}}{{{f{B`}}}B`}1232{{B`c}{}{AbKn}}{{{f{B`}}{f{B`}}}}{{B`B`}}{{{f{B`}}c}{}{AbKn}}?{{{f{BG`}}}{{Bd{FhBb}}}}{{{f{BG`}}}{{f{An}}}}{{{f{An}}c}B`{{Hb{{Al{{Cb{Lb}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{AJh}}}}}}{{{f{An}}c}B`{{Hb{{Al{{Cb{AJl}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{{f{{Al{Aj}}}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{{Cb{L`}}}}}}}}{{{f{An}}{Mb{Il}}}B`}{{{f{An}}c}B`{{Hb{{Al{ANd}}}}}}{{{f{An}}c}B`{{Hb{{Al{{Fn{Aj}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{{Cb{{f{An}}}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{{Cb{AJh}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{Ij}}}}}}{{{f{An}}c}B`{{Hb{{Al{{Cb{{Dl{An}}}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{{Cb{Aj}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{{Dl{An}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{AJl}}}}}}{{{f{An}}c}B`{{Hb{{Al{d}}}}}}{{{f{An}}c}B`{{Hb{{Al{{Cb{Gb}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{{Cb{Lf}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{{Cb{{f{{Al{Aj}}}}}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{Gb}}}}}}{{{f{An}}c}B`{{Hb{{Al{{Cb{Ll}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{Il}}}}}}{{{f{An}}{Mb{Gb}}}B`}{{{f{An}}c}B`{{Hb{{Al{Lb}}}}}}{{{f{An}}{f{B`}}}B`}{{{f{An}}c}B`{{Hb{{Al{{Cb{Mf}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{{f{An}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{Aj}}}}}}{{{f{An}}c}B`{{Hb{{Al{{Cb{Eh}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{L`}}}}}}{{{f{An}}c}B`{{Hb{{Al{{Cb{Ij}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{B`}}}}}}{{{f{An}}c}B`{{Hb{{Al{{Cb{{Fn{Aj}}}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{{Cb{d}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{Eh}}}}}}{{{f{An}}c}B`{{Hb{{Al{{Cb{{Dl{{Al{Aj}}}}}}}}}}}}{{{f{An}}c}B`BA`}{{{f{An}}c}B`{{Hb{{Al{{Cb{B`}}}}}}}}{{{f{An}}{Mb{Lb}}}B`}{{{f{An}}c}B`{{Hb{{Al{Lf}}}}}}{{{f{An}}c}B`{{Hb{{Al{Id}}}}}}{{{f{An}}c}B`{{Hb{{Al{Lj}}}}}}{{{f{An}}c}B`{{Hb{{Al{{Cb{Il}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{{Cb{Lj}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{{Dl{{Al{Aj}}}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{Ll}}}}}}{{{f{An}}c}B`{{Hb{{Al{{Cb{ANd}}}}}}}}{{{f{An}}c}B`{{Hb{{Al{Mf}}}}}}{{{f{An}}c}B`{{Hb{{Al{ANf}}}}}}{{{f{An}}c}B`{{Hb{{Al{{Cb{ANf}}}}}}}}{{{f{An}}{Mb{Ll}}}B`}{{{f{An}}{f{Ef}}}B`}{{{f{BG`}}FhFh}B`}{{{f{An}}Fh}B`}{{{f{CnDGl}}}Cb}{{{f{{AFd{}{{Cd{c}}}}}}e}c{}{}}{{{f{B`}}{f{B`}}}{{Bd{{l{Af}}Bb}}}}{{{f{B`}}c}{{Bd{{l{Af}}Bb}}}AMl}{{{f{B`}}{f{An}}}{{Bd{{l{Af}}Bb}}}}3{{{f{B`}}{f{An}}}}3{{{f{B`}}c}{}AMl}{{{f{B`}}}{{Bd{{f{ABh}}Bb}}}}{{{f{BG`}}}Fh}`{{{f{B`}}}{{Ch{K`}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{BG`}}L`Ml}{{Bd{B`Bb}}}}{{{f{BG`}}}B`}{{{f{B`}}c}{}{AbKn}}{{{f{B`}}{f{B`}}}}{{B`c}{}{AbKn}}{{{f{CnBG`}}{f{An}}}b}{{{f{CnB`}}{f{An}}}{{f{CnB`}}}}{{{f{B`}}{f{{Al{Gb}}}}}{{Bd{B`Bb}}}}6{IhIh}{{{f{BG`}}{f{Dh}}N`}{{Bd{B`Bb}}}}{{{f{B`}}L`dd{Cb{Il}}}{{Bd{B`Bb}}}}{{{f{B`}}Fhdd{Cb{Il}}}{{Bd{B`Bb}}}}{{{f{CnB`}}Ih}b}{{{f{BG`}}Gb}B`}{{{f{CnBG`}}}b}{{{f{CnB`}}}b}{{{f{B`}}{Cb{Il}}}B`}{{{f{DGl}}}{{Gf{Fh{Cb{Fh}}}}}}{{{f{BG`}}GbFh}B`}{{{f{B`}}Ej}{{Bd{B`Bb}}}}{{{f{BG`}}Ej}{{Bd{B`Bb}}}}{{{f{BG`}}Aj}{{Cb{L`}}}}{{{f{BG`}}Aj}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{{l{n}}}}Bb}}}}{{{f{B`}}Fh}{{Bd{{Dl{An}}Bb}}}}{{{f{B`}}{f{Ef}}}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{AJn}}Bb}}}}{{{f{B`}}{f{B`}}}}{{{f{B`}}c}{}{AbKn}}{{B`B`}}{{B`c}{}{AbKn}}{{{f{B`}}}{{Bd{cBb}}}Kn}{{{f{B`}}}{{Bd{NdBb}}}}{{{f{B`}}{Cb{Fh}}}B`}{{{f{BG`}}{f{{l{El}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{{Al{Nh}}}}Ih}B`}{{{f{B`}}{f{{Al{Nh}}}}}B`}{{{f{BG`}}{f{{Al{Lb}}}}}{{Bd{B`Bb}}}}{{{f{BG`}}{f{{Al{Lb}}}}}B`}{{{f{B`}}{f{{Al{Lb}}}}d}B`}{{{f{B`}}{f{{l{El}}}}d}{{Bd{B`Bb}}}}{{{f{BG`}}{f{{l{El}}}}}B`}{{{f{B`}}{f{{Al{Lb}}}}}B`}{{{f{B`}}{f{{l{El}}}}d}B`}{{{f{B`}}}{{Bd{{f{{Jb{KbJd}}}}Bb}}}}{{{f{B`}}Fhd}{{Ch{Cf}}}}{{{f{B`}}{Cb{{f{An}}}}d}{{Bd{AOhBb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{c}}}e{}{}}0{{{f{B`}}}{{Dl{B`}}}}{{{f{c}}}Eh{}}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{c{{Bd{e}}}{}{}}0{{{Gf{{f{AMn}}{Fn{{Ch{Cf}}}}}}}{{Bd{B`Bb}}}}{{{Gf{{f{An}}{Ch{Cf}}}}}{{Bd{B`Bb}}}}2{{{Gf{{f{An}}{Fn{{Ch{Cf}}}}}}}{{Bd{B`Bb}}}}{{{Gf{{f{AMn}}{Ch{Cf}}}}}{{Bd{B`Bb}}}}444{{{f{c}}}Ol{}}00{{{f{B`}}}{{Bd{{f{{l{Md}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{El}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{M`}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ln}}}}Bb}}}}{{{f{BG`}}}{{Bd{B`Bb}}}}?{{{f{BG`}}}{{Bd{{f{{l{c}}}}Bb}}}Dd}`{{{f{BG`}}Aj}{{Cb{L`}}}}{{{f{BG`}}Aj}{{Bd{B`Bb}}}}{ce{}{}}00{{B`{f{An}}}B`}{{{f{B`}}c}B`{AbKn}}{{{f{B`}}{f{{l{Af}}}}{f{B`}}}{{Bd{B`Bb}}}}````{{{f{B`}}{f{B`}}c}B`{{E`{{f{B`}}{f{B`}}}{{Df{B`}}}}}}{{{BGn{}{{Df{c}}}}{f{B`}}}c{}}{{{f{BH`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Bf}}}}{f{B`}}}{{Bd{B`Bb}}}}`210210210210``{{{f{BNj}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Fd}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BNj}}c}{{Bd{B`Bb}}}Ad}{{{f{{l{Fd}}}}c}{{Bd{B`Bb}}}Ad}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{CHl}}}CHl}{{{f{c}}{f{Cne}}}b{}{}}{{}CHl}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{{{f{CHl}}{f{CHl}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CHl}}{f{CnGj}}}{{Bd{bGl}}}}{cc{}}{{{f{CHl}}{f{Cnc}}}bAGb}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}3``{{{f{c}}h}b{}}{{{f{CnDn}}}{{f{CnB`}}}}{{{f{Dn}}}{{f{B`}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Cnc}}}{{f{Cne}}}{}{}}{{{f{Dn}}}Dn}{{{f{c}}{f{Cne}}}b{}{}}{{{f{Dn}}}B`}{Fh{{f{c}}}{}}{Fh{{f{Cnc}}}{}}{Fhb}{cc{}}{{}Fh}{ce{}{}}{{{f{CnB`}}}Dn}{{{f{CnDn}}{f{Cn{Ch{Cf}}}}}b}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}Ol{}}5{{{f{CnDn}}{f{Cn{Ch{Cf}}}}e}c{}{{Dh{{f{Dn}}}{{Df{c}}}}}}","D":"AEJjL`","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",10381],[5,"ListType",1687,10382],[5,"ChunkedArray",17,10383],[5,"StringType",1687,10382],[10,"PolarsNumericType",1687,10382],[10,"Num",10384],[10,"ToPrimitive",10385],[5,"BooleanType",1687,10382],[5,"BinaryType",1687,10382],[1,"u8"],[1,"slice"],[1,"str"],[5,"Series",9903,10386],[6,"PolarsError",3088,10387],[6,"Result",10388],[10,"NumOpsDispatchInner",10304,10389],[5,"FixedSizeListType",1687,10382],[6,"GroupsProxy",3461,10390],[5,"ObjectType",1687,10382],[10,"PolarsObject",1260,10391],[5,"Settings",17,10383],[6,"Option",10392],[17,"Item"],[10,"Array",10393],[5,"Box",10394],[10,"Iterator",10395],[5,"AmortizedListIter",10396],[0,"mut"],[17,"IsNested"],[5,"FalseT",1687,10382],[10,"PolarsDataType",1687,10382],[17,"Output"],[10,"Fn",10397],[10,"Copy",10398],[6,"Cow",10399],[5,"UnstableSeries",10357,10400],[10,"FnMut",10397],[5,"Float64Type",1687,10382],[5,"Float32Type",1687,10382],[6,"DataType",1687,10401],[5,"String",10402],[5,"SortOptions",1382,10403],[5,"UInt32Type",1687,10382],[5,"BinaryOffsetType",1687,10382],[5,"SortMultipleOptions",1382,10403],[10,"PolarsIntegerType",1687,10382],[10,"NumOpsDispatchCheckedInner",10325,10404],[5,"Iter",10405],[1,"usize"],[1,"fn"],[5,"Map",10406],[5,"Vec",10407],[10,"DoubleEndedIterator",10408],[1,"i64"],[5,"OffsetsBuffer",10409],[1,"tuple"],[10,"IntoIterator",10410],[5,"Formatter",10411],[5,"Error",10411],[17,"Array"],[10,"FallibleIterator",10412],[10,"AsRef",10413],[5,"Bitmap",10414],[10,"PolarsAsRef",10415],[10,"Borrow",10416],[10,"Send",10398],[10,"Sync",10398],[10,"IntoParallelIterator",10417],[10,"NoOption",10418],[10,"TrustedLen",10419],[6,"AnyValue",1687,10420],[10,"PolarsObjectSafe",1260,10391],[6,"IsSorted",9903,10421],[1,"f32"],[1,"u64"],[5,"Int32Type",1687,10382],[5,"DateType",1687,10382],[5,"Logical",1687,10422],[5,"Int64Type",1687,10382],[6,"TimeUnit",1687,10423],[5,"DatetimeType",1687,10382],[5,"Int128Type",1687,10382],[5,"DecimalType",1687,10382],[5,"DurationType",1687,10382],[10,"ExactSizeIterator",10424],[5,"TimeType",1687,10382],[10,"PolarsFloatType",1687,10382],[10,"PolarsIterator",1188,10425],[5,"Iter",10426],[5,"IterNames",10426],[6,"ChunkedArrayLayout",17,10383],[10,"NumCast",10385],[1,"f64"],[1,"u32"],[5,"Int8Type",1687,10382],[1,"i8"],[5,"Int16Type",1687,10382],[1,"i16"],[1,"i32"],[5,"UInt8Type",1687,10382],[5,"UInt64Type",1687,10382],[5,"Range",10427],[5,"UInt16Type",1687,10382],[1,"u16"],[10,"ParallelIterator",10417],[10,"IndexedParallelIterator",10417],[6,"QuantileInterpolOptions",3824,10428],[5,"Field",1687,10429],[5,"RollingOptionsFixedWindow",3824,10430],[10,"PolarsOpsNumericType",10431],[5,"Scalar",1687,10420],[10,"Sized",10398],[5,"ChunkId",3824,10432],[17,"HasViews"],[5,"RandomState",10433],[5,"BytesHash",10434],[5,"ViewRepr",10435],[1,"array"],[5,"Dim",10436],[5,"ArrayBase",10435],[5,"OwnedRepr",10437],[6,"Either",10438],[5,"TypeId",10439],[5,"NullableIdxSize",3824,10432],[10,"FnOnce",10397],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",866,10440],[5,"AnonymousListBuilder",894,10441],[5,"AnonymousOwnedListBuilder",894,10441],[5,"ListBooleanChunkedBuilder",894,10442],[5,"ListPrimitiveChunkedBuilder",894,10443],[10,"ListBuilderTrait",894,10444],[10,"ChunkedBuilder",894,10445],[5,"ListStringChunkedBuilder",894,10446],[5,"ListBinaryChunkedBuilder",894,10446],[5,"ListNullChunkedBuilder",894,10447],[5,"BinViewChunkedBuilder",894,10448],[10,"ViewType",10449],[5,"BooleanChunkedBuilder",894,10450],[5,"NullChunkedBuilder",894,10451],[5,"PrimitiveChunkedBuilder",894,10452],[10,"Clone",10453],[5,"NullChunked",10454],[10,"NewChunkedArray",894,10445],[10,"ChunkedCollectInferIterExt",1168,10455],[10,"ChunkedCollectIterExt",1168,10455],[10,"Canonical",1182,10456],[10,"ChunkedCollectParIterExt",1184,10457],[10,"FromParIterWithDtype",1184,10457],[5,"BooleanArray",10458],[5,"BoolIterNoNull",1188,10425],[5,"FixedSizeListArray",10459],[5,"FixedSizeListIterNoNull",1188,10425],[5,"StructIter",1188,10425],[5,"SomeIterator",1188,10425],[5,"ObjectArray",1260,10391],[6,"ArrowDataType",1687,10460],[10,"Any",10439],[10,"Debug",10411],[5,"BitmapIter",10461],[6,"ZipValidity",10462],[5,"Arc",3824,10463],[5,"ObjectChunkedBuilder",1331,10464],[10,"AnonymousObjectBuilder",1354,10465],[5,"ObjectRegistry",1354,10465],[17,"FuncRet"],[10,"ChunkApply",1382,10466],[10,"ChunkApplyKernel",1382,10466],[10,"ChunkSort",1382,10466],[10,"ChunkUnique",1382,10466],[10,"ChunkCast",1382,10466],[6,"FillNullStrategy",1382,10466],[10,"ChunkCompare",9903,10466],[10,"ChunkExplode",1382,10466],[10,"ChunkFillNullValue",1382,10466],[10,"ChunkFilter",1382,10466],[10,"ChunkFull",1382,10466],[10,"ChunkFullNull",1382,10466],[10,"ChunkAnyValue",1382,10466],[10,"Hasher",10467],[10,"IsFirstDistinct",1382,10466],[10,"IsLastDistinct",1382,10466],[10,"ChunkAgg",1382,10466],[10,"ChunkQuantile",1382,10466],[10,"ChunkExpandAtIndex",1382,10466],[10,"Reinterpret",1382,10466],[10,"ChunkReverse",1382,10466],[10,"ChunkRollApply",1382,10466],[10,"ChunkSet",1382,10466],[10,"ChunkShift",1382,10466],[10,"ChunkShiftFill",1382,10466],[10,"SlicedArray",1382,10468],[10,"ChunkVar",1382,10466],[10,"ChunkTake",1382,10466],[10,"ChunkTakeUnchecked",1382,10466],[10,"ChunkBytes",1382,10466],[10,"ChunkZip",1382,10466],[10,"BinaryFnMut",1580,10469],[10,"StaticArray",1687,10470],[10,"TernaryFnMut",1580,10469],[10,"Error",10471],[10,"UnaryFnMut",1580,10469],[5,"PrimitiveArray",10472],[6,"SearchSortedSide",1620,10473],[5,"NoNull",3824,10474],[5,"RowsEncoded",10475],[5,"NaiveDateTime",10476],[6,"Tz",10477],[5,"NaiveTime",10478],[5,"StructChunked",1687,10479],[5,"CategoricalChunked",1687,10480],[5,"CategoricalChunkedBuilder",1687,10481],[10,"ArrayFromIter",1687,10482],[10,"ArrayFromIterDtype",1687,10482],[10,"AsRefDataType",1687,10401],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",10483],[10,"From",10413],[5,"BinaryViewArrayGeneric",10449],[6,"RevMapping",1687,10484],[10,"CategoricalMergeOperation",1687,10485],[10,"LogicalType",1687,10422],[6,"CategoricalOrdering",1687,10484],[5,"OwnedObject",1687,10420],[6,"UnknownKind",1687,10401],[5,"CategoricalType",1687,10382],[6,"ArrowTimeUnit",1687],[10,"ArrayCollectIterExt",1687,10482],[5,"GlobalRevMapMerger",1687,10485],[10,"Into",10413],[10,"NumericNative",1687,10382],[5,"ArrowField",3824],[6,"PrimitiveType",10486],[6,"IntegerType",10487],[5,"TimeDelta",10488],[5,"NaiveDate",10489],[5,"LazyCompact",10490],[5,"SmartString",10491],[10,"GetAnyValue",1687,10420],[5,"CatIter",1687,10480],[6,"Ordering",10492],[5,"Duration",3824,10493],[1,"u128"],[6,"PhysicalType",10487],[5,"DataFrame",3179,10494],[5,"StringCacheHolder",3066,10495],[5,"ErrString",3088,10387],[6,"PolarsWarning",3088,10496],[6,"Error",10497],[6,"Error",10498],[5,"TryReserveError",10499],[5,"Error",10500],[5,"Utf8Error",10501],[5,"Error",10502],[10,"Display",10411],[5,"Schema",3824,10503],[10,"IntoSeries",9903,10504],[6,"NullStrategy",3179,10494],[6,"UniqueKeepStrategy",3179,10494],[5,"HashSet",10505],[5,"ArrowSchema",3824,10506],[5,"Row",3715,10507],[5,"GroupBy",3461,10508],[5,"DynamicGroupOptions",3824,10509],[5,"RangeToInclusive",10427],[5,"RangeFull",10427],[5,"RangeTo",10427],[5,"RangeInclusive",10427],[5,"RangeFrom",10427],[5,"RecordBatchIter",3179,10494],[5,"PhysRecordBatchIter",3179,10494],[5,"LazyFrame",3824,10510],[10,"IntoVec",3824,10474],[5,"MeltArgs",3432,10511],[5,"RollingGroupOptions",3824,10509],[10,"RangeBounds",10427],[6,"IndexOrder",3824,10512],[5,"StructArray",3824,10513],[5,"RecordBatchT",10514],[5,"GroupsIdx",3461,10390],[5,"UnitVec",10515],[6,"GroupByMethod",3461,10508],[5,"SlicedGroups",3461,10390],[5,"GroupsProxyParIter",3461,10390],[10,"UnindexedConsumer",10516],[6,"GroupsIndicator",3461,10390],[6,"AAggExpr",10517],[10,"IntoGroupsProxy",3461,10518],[5,"Copied",10519],[5,"Zip",10520],[5,"GroupsProxyIter",3461,10390],[10,"IsFloat",10521],[10,"NativeType",10522],[10,"AggList",3699,10523],[10,"TakeExtremum",3699,10524],[10,"PhysicalAggExpr",3712,10525],[6,"AnyValueBuffer",3715,10526],[6,"AnyValueBufferTrusted",3715,10526],[5,"Node",10527],[6,"IR",10528],[5,"Arena",10527],[6,"AExpr",10517],[10,"JoinDispatch",3824,10529],[5,"JoinArgs",3824,10530],[10,"SeriesTrait",9903,10421],[10,"DfTake",3824,10531],[10,"DataFrameOps",3824,10532],[5,"CsvReader",3824,10533],[10,"PhysicalIoExpr",10534],[10,"MmapBytesReader",10535],[6,"Expr",3824,10536],[10,"LhsNumOps",10304,10389],[10,"NumOpsDispatch",10304,10389],[5,"LazyGroupBy",3824,10510],[10,"Allocator",10537],[5,"JoinBuilder",3824,10510],[10,"AnonymousScan",3824,10538],[5,"LazyJsonLineReader",3824,10539],[5,"ScanArgsAnonymous",3824,10540],[10,"FunctionOutputField",3824,10541],[5,"SpecialEq",3824,10541],[6,"VisitRecursion",10542],[6,"FunctionExpr",3824,10543],[10,"ArgAgg",3824,10544],[5,"ArrayNameSpace",3824,10545],[5,"ListNameSpace",3824,10546],[5,"IpcStreamReader",3824,10547],[10,"Read",10548],[10,"SeriesUdf",3824,10541],[10,"AsBinary",3824,10549],[10,"StringMethods",8950,10550],[10,"PhysicalExpr",3824,10551],[5,"BorrowedFd",10552],[10,"AsFd",10552],[10,"AsList",3824,10553],[10,"PartitionedAggregation",3824,10551],[10,"AsRawFd",10554],[6,"AggExpr",3824,10536],[10,"SeriesSealed",3824,10555],[10,"StatsEvaluator",10534],[5,"PhysicalIoHelper",3824,10551],[10,"AsString",3824,10556],[20,"MaybeUninit",10557],[10,"StringNameSpaceImpl",3824,10558],[5,"OwnedBatchedCsvReader",3824,10559],[5,"CsvWriter",3824,10560],[5,"BatchedWriter",10560],[10,"Write",10548],[5,"IpcWriter",3824,10561],[5,"BatchedWriter",10561],[5,"ParquetReader",3824,10562],[5,"BatchedParquetReader",3824,10563],[5,"ParquetWriter",3824,10564],[5,"BatchedWriter",10565],[5,"BatchedCsvReader",3824,10559],[5,"BinaryNameSpace",8933,10566],[6,"Operator",3824,10536],[10,"RenameAliasFn",3824,10541],[5,"UserDefinedFunction",3824,10567],[10,"SeriesBinaryUdf",3824,10541],[5,"InProcessQuery",3824,10568],[5,"HashMap",10569],[5,"CategoricalNameSpace",3824,10570],[10,"RoundSeries",3824,10571],[10,"TemporalMethods",9786,10572],[10,"NumOpsDispatchChecked",10325,10404],[5,"RollingOptionsDynamicWindow",3824,10573],[5,"Bounds",3824,10574],[6,"ClosedWindow",3824,10575],[6,"Label",3824,10575],[6,"StartBy",3824,10575],[5,"Window",3824,10576],[5,"CsvReadOptions",3824,10577],[5,"CsvParseOptions",3824,10577],[6,"CsvEncoding",3824,10577],[6,"CommentPrefix",3824,10577],[6,"NullValues",3824,10577],[5,"CsvWriterOptions",3824,10578],[5,"SerializeOptions",3824,10578],[6,"QuoteStyle",3824,10578],[5,"IpcScanOptions",3824,10579],[5,"IpcWriterOptions",3824,10561],[6,"IpcCompression",3824,10561],[6,"InterpolationMethod",3824,10580],[5,"JsonWriterOptions",3824,10581],[5,"ParquetOptions",3824,10582],[6,"JoinCoalesce",3824,10530],[6,"ParallelStrategy",3824,10582],[6,"JoinType",3824,10530],[5,"ParquetWriteOptions",3824,10583],[6,"JoinValidation",3824,10530],[6,"ParquetCompression",3824,10583],[5,"AsOfOptions",3824,10584],[5,"GzipLevel",3824,10583],[5,"BrotliLevel",3824,10583],[6,"AsofStrategy",3824,10584],[5,"ZstdLevel",3824,10583],[6,"ClosedInterval",3824,10585],[5,"LazyCsvReader",3824,10586],[6,"RankMethod",3824,10587],[5,"RankOptions",3824,10587],[5,"ScanArgsIpc",3824,10588],[5,"ScanArgsParquet",3824,10589],[6,"DslPlan",3824,10590],[5,"When",3824,10591],[5,"Then",3824,10591],[5,"ChainedWhen",3824,10591],[5,"ChainedThen",3824,10591],[6,"Excluded",3824,10536],[6,"BooleanFunction",3824,10592],[6,"CategoricalFunction",3824,10593],[6,"PowFunction",3824,10594],[6,"StringFunction",3824,10595],[5,"DatetimeArgs",3824,10596],[5,"DurationArgs",3824,10596],[5,"RollingCovOptions",3824,10597],[5,"StrptimeOptions",3824,10597],[5,"JoinOptions",3824,10597],[6,"WindowType",3824,10597],[6,"WindowMapping",3824,10597],[5,"OptState",3824,10598],[6,"LiteralValue",3824,10599],[5,"AnonymousScanOptions",3824,10600],[5,"UnionArgs",3824,10600],[5,"FileMetaData",3824,10601],[5,"RollingVarParams",3824,10602],[5,"RollingQuantileParams",3824,10602],[6,"NonExistent",3824,10603],[10,"LazyFileListReader",3824,10604],[5,"CloudOptions",9086,10605],[10,"Ord",10492],[6,"ColumnOrder",10606],[10,"BinaryNameSpaceImpl",3824,10607],[5,"PathBuf",10608],[5,"IpcStreamWriterOption",3824,10547],[10,"SerWriter",3824,10609],[5,"IpcWriterOption",3824,10561],[10,"CrossJoin",3824,10610],[10,"ExprEvalExtension",3824,10611],[10,"DateMethods",8950,10612],[10,"DatetimeMethods",8950,10613],[10,"DurationMethods",8950,10614],[10,"BinaryUdfOutputField",3824,10541],[10,"Default",10615],[5,"RowGroupMetaData",10616],[5,"ParquetStatistics",3824],[6,"NullBehavior",10331,10617],[5,"Weak",10463],[5,"DateLikeNameSpace",9442,10618],[1,"char"],[10,"FromIterator",10410],[10,"PartialEq",10492],[10,"Scalar",10619],[10,"ListNameSpaceExtension",3824,10620],[5,"ExecutionState",10621],[5,"AggregationContext",3824,10551],[10,"Command",10622],[5,"StructNameSpace",3824,10623],[10,"SerReader",3824,10609],[5,"IpcReader",3824,10579],[5,"IpcStreamWriter",3824,10547],[5,"JsonWriter",3824,10581],[5,"JsonReader",3824,10581],[5,"JsonLineReader",3824,10624],[5,"File",10625],[10,"UdfSchema",3824,10626],[6,"ListFunction",10627],[6,"ArrayFunction",10628],[6,"RangeFunction",10629],[6,"BinaryFunction",10630],[6,"TemporalFunction",10631],[6,"StructFunction",10632],[5,"OsString",10633],[5,"OsStr",10633],[5,"CStr",10634],[1,"never"],[5,"Path",10608],[10,"ToOwned",10399],[5,"CString",10635],[5,"MutableStatistics",10636],[5,"GrowableStruct",10637],[5,"MutableStructArray",10638],[10,"FromData",9436,10639],[5,"Buffer",10640],[10,"FromDataUtf8",9436,10639],[10,"FromDataBinary",9436,10639],[5,"ListArray",10641],[6,"Ambiguous",3824,10603],[10,"NamedFromOwned",3824,10642],[5,"FunctionOptions",10600],[10,"PartialOrd",10492],[6,"Context",10590],[5,"FieldsMapper",3824,10643],[10,"IndexOfSchema",3824,10503],[5,"BoundsIter",3824,10576],[6,"ReaderBytes",10535],[10,"PolarsTemporalGroupby",3824,10509],[10,"PolarsArray",3824,10644],[10,"Hash",10467],[10,"SeriesJoin",3824,10645],[10,"TimeMethods",8950,10646],[10,"DataFrameJoinOps",3824,10647],[10,"IntoListNameSpace",3824,10620],[5,"FileMetaData",10648],[10,"SeriesMethods",3824,10649],[5,"StructValueIter",10650],[10,"AsofJoin",3824,10584],[10,"AsofJoinBy",3824,10651],[10,"ListNameSpaceImpl",3824,10652],[5,"ExprNameNameSpace",3824,10653],[5,"KeyValue",10648],[10,"IntoLazy",3824,10510],[10,"Literal",3824,10599],[5,"Null",3824,10599],[5,"RowIndex",10654],[10,"ChunkAggSeries",3824,10655],[10,"QuantileAggSeries",3824,10656],[10,"PolarsMonthEnd",3824,10657],[10,"PolarsMonthStart",3824,10658],[10,"IndexToUsize",3824,10659],[10,"NamedFrom",3824,10642],[6,"RowGroupFetcher",10563],[5,"SplitNChars",3824,10660],[5,"Pin",10661],[5,"Request",10471],[10,"SeriesRank",3824,10587],[5,"BorrowedCursor",10662],[10,"VarInt",10663],[5,"IoSliceMut",10548],[10,"SeriesOpsTime",8950,10664],[10,"PolarsRound",3824,10665],[5,"AnonymousScanArgs",3824,10538],[10,"ChunkedSet",3824,10431],[5,"SchemaDescriptor",10666],[6,"SeekFrom",10548],[10,"VarAggSeries",3824,10667],[5,"StringNameSpace",10668],[10,"TakeChunked",3824,10531],[5,"IRPlan",10528],[10,"ToDummies",3824,10669],[10,"PolarsTruncate",3824,10670],[5,"AllocError",10537],[5,"RwLock",10671],[10,"PolarsUpsample",3824,10672],[10,"VecHash",3824,10673],[5,"NonZero",10674],[6,"JsonFormat",3824,10581],[5,"BTreeMap",10675],[5,"IoSlice",10548],[10,"ArrayNameSpace",8914,10676],[10,"AsArray",8914,10677],[10,"AsString",9018,10550],[6,"Pattern",9018,10678],[5,"DatetimeInfer",9056,10679],[10,"StrpTimeParser",9056,10679],[17,"Error"],[10,"TryFromWithUnit",9056,10679],[6,"CloudType",9086,10605],[5,"AnonymousBuilder",9497,10680],[6,"RollingFunction",9684,10681],[6,"RollingFunctionBy",9713,10682],[5,"MutableNullArray",9750,10683],[5,"MutableBitmap",10684],[10,"AsSeries",9786,10572],[5,"Utf8Array",10685],[5,"BinaryArray",10686],[5,"SeriesIter",9903,10687],[10,"InitHashMaps",1687],[10,"InitHashMaps2",1687],[5,"TrueT",1687],[15,"IO",8848],[15,"Context",8848],[15,"Count",8842],[15,"Slice",8843],[8,"AllowedOptimizations",3824],[10,"ListFromIter",3824],[15,"Quantile",8727],[15,"Min",8727],[15,"Max",8727],[15,"IsBetween",9641],[15,"Any",9641],[15,"All",9641],[15,"GroupBy",8737],[15,"Union",8737],[15,"Sort",8737],[15,"Cache",8737],[15,"ExtContext",8737],[15,"DataFrameScan",8737],[15,"Select",8737],[15,"HStack",8737],[15,"Scan",8737],[15,"MapFunction",8737],[15,"Filter",8737],[15,"Distinct",8737],[15,"Slice",8737],[15,"Sink",8737],[15,"Join",8737],[15,"HConcat",8737],[15,"SortBy",8788],[15,"Filter",8788],[15,"Cast",8788],[15,"Sort",8788],[15,"Gather",8788],[15,"RenameAlias",8788],[15,"Ternary",8788],[15,"Function",8788],[15,"Window",8788],[15,"AnonymousFunction",8788],[15,"Slice",8788],[15,"BinaryExpr",8788],[15,"Round",9644],[15,"RoundSF",9644],[15,"Clip",9644],[15,"BackwardFill",9644],[15,"ForwardFill",9644],[15,"Random",9644],[15,"GatherEvery",9644],[15,"Rank",9644],[15,"ValueCounts",9644],[15,"Replace",9644],[15,"CumCount",9644],[15,"CumSum",9644],[15,"CumProd",9644],[15,"CumMin",9644],[15,"CumMax",9644],[15,"Range",8845],[15,"ConcatHorizontal",9664],[15,"ConcatVertical",9664],[15,"ExtractGroups",9664],[15,"SplitExact",9664],[15,"Contains",9664],[15,"Find",9664],[15,"Replace",9664],[10,"Utf8FromIter",9899],[10,"BinaryFromIter",9899]],"r":[[1,10688],[2,10688],[3,10688],[4,10688],[6,10495],[7,10688],[8,10688],[9,10688],[13,10688],[14,10688],[16,10495],[17,10383],[18,10383],[19,10383],[25,10383],[118,10383],[151,10383],[152,10383],[178,10383],[179,10383],[240,10383],[305,10383],[453,10383],[593,10383],[597,10383],[735,10383],[866,10440],[894,10441],[895,10441],[896,10448],[897,10448],[898,10450],[899,10445],[900,10446],[901,10442],[902,10444],[903,10447],[904,10443],[905,10446],[906,10445],[907,10451],[908,10452],[909,10448],[1042,10445],[1058,10444],[1086,10445],[1151,10441],[1152,10441],[1153,10446],[1154,10442],[1155,10444],[1156,10447],[1157,10443],[1158,10446],[1166,10444],[1168,10455],[1169,10455],[1182,10456],[1184,10457],[1185,10457],[1188,10425],[1189,10425],[1190,10425],[1191,10425],[1192,10425],[1238,10425],[1258,10689],[1259,10689],[1260,10391],[1261,10391],[1262,10391],[1263,10391],[1274,10391],[1302,10391],[1331,10464],[1354,10465],[1355,10465],[1356,10465],[1357,10465],[1369,10465],[1370,10465],[1371,10465],[1374,10465],[1376,10465],[1383,10466],[1384,10466],[1385,10466],[1386,10466],[1387,10466],[1388,10466],[1389,10466],[1390,10466],[1391,10466],[1392,10466],[1393,10466],[1394,10466],[1395,10466],[1396,10466],[1397,10466],[1398,10466],[1399,10466],[1400,10466],[1401,10466],[1402,10466],[1403,10466],[1404,10466],[1405,10466],[1406,10466],[1407,10466],[1408,10466],[1409,10466],[1412,10466],[1413,10466],[1421,10466],[1422,10468],[1423,10403],[1424,10403],[1437,10466],[1478,10466],[1481,10466],[1490,10466],[1493,10466],[1536,10466],[1542,10466],[1578,10466],[1580,10469],[1584,10469],[1585,10469],[1586,10469],[1587,10469],[1588,10469],[1589,10469],[1590,10469],[1591,10469],[1592,10469],[1593,10469],[1594,10469],[1595,10469],[1596,10469],[1597,10469],[1598,10469],[1599,10469],[1600,10469],[1601,10469],[1602,10469],[1603,10469],[1604,10469],[1605,10469],[1606,10469],[1607,10469],[1608,10469],[1609,10469],[1610,10469],[1611,10469],[1612,10469],[1613,10469],[1614,10469],[1615,10690],[1616,10690],[1617,10691],[1618,10691],[1619,10691],[1623,10473],[1625,10473],[1643,10473],[1649,10468],[1650,10692],[1651,10692],[1652,10692],[1653,10692],[1656,10693],[1657,10694],[1658,10694],[1659,10694],[1660,10694],[1661,10694],[1662,10694],[1663,10694],[1664,10468],[1665,10403],[1666,10403],[1677,10695],[1678,10696],[1679,10696],[1680,10696],[1681,10695],[1682,10695],[1683,10697],[1684,10696],[1685,10696],[1686,10696],[1688,10420],[1692,10382],[1693,10482],[1694,10482],[1695,10482],[1696,10460],[1698,10401],[1702,10382],[1704,10382],[1705,10382],[1707,10382],[1712,10382],[1713,10382],[1714,10480],[1717,10480],[1718,10481],[1719,10485],[1720,10484],[1721,10382],[1722,10401],[1723,10401],[1724,10401],[1729,10698],[1730,10382],[1733,10699],[1734,10382],[1739,10700],[1740,10382],[1745,10701],[1746,10382],[1750,10382],[1751,10429],[1752,10429],[1755,10382],[1761,10382],[1762,10382],[1766,10382],[1767,10382],[1768,10420],[1770,10485],[1774,10702],[1775,10659],[1776,10702],[1777,10702],[1778,10703],[1779,10702],[1781,10382],[1782,10382],[1786,10382],[1787,10382],[1791,10382],[1792,10382],[1796,10382],[1797,10382],[1801,10382],[1802,10382],[1812,10382],[1813,10382],[1815,10422],[1816,10422],[1828,10382],[1831,10382],[1833,10382],[1834,10420],[1837,10703],[1838,10703],[1839,10702],[1840,10703],[1841,10703],[1842,10382],[1843,10382],[1844,10382],[1845,10382],[1847,10484],[1848,10420],[1850,10470],[1854,10382],[1856,10382],[1860,10479],[1866,10704],[1867,10382],[1868,10423],[1869,10401],[1872,10382],[1876,10382],[1877,10382],[1881,10382],[1882,10382],[1886,10382],[1887,10382],[1891,10382],[1892,10382],[1896,10401],[2063,10485],[2075,10422],[2162,10401],[2678,10485],[2679,10485],[2682,10401],[3043,10480],[3044,10480],[3045,10481],[3046,10485],[3047,10484],[3049,10485],[3053,10484],[3054,10485],[3056,10485],[3057,10485],[3058,10480],[3059,10480],[3060,10484],[3065,10484],[3066,10495],[3072,10495],[3075,10495],[3083,10495],[3093,10387],[3099,10387],[3100,10387],[3101,10496],[3115,10387],[3128,10387],[3144,10496],[3151,10387],[3152,10387],[3153,10387],[3154,10387],[3155,10387],[3156,10496],[3157,10387],[3176,10705],[3177,10705],[3178,10705],[3180,10494],[3185,10494],[3186,10494],[3188,10494],[3189,10494],[3256,10494],[3290,10494],[3353,10494],[3432,10511],[3461,10390],[3464,10508],[3465,10508],[3467,10390],[3468,10390],[3469,10390],[3470,10390],[3471,10390],[3472,10390],[3475,10390],[3477,10518],[3489,10390],[3498,10508],[3565,10508],[3575,10508],[3699,10523],[3700,10524],[3701,10524],[3702,10524],[3703,10524],[3704,10524],[3705,10524],[3706,10524],[3707,10524],[3708,10524],[3712,10525],[3717,10526],[3718,10526],[3738,10507],[3769,10507],[3790,10507],[3804,10507],[3805,10507],[3806,10507],[3822,10706],[3823,10706],[3826,10536],[3828,10551],[3834,10598],[3836,10603],[3839,10538],[3840,10538],[3841,10600],[3847,10420],[3848,10463],[3849,10544],[3852,10440],[3856,10382],[3857,10482],[3859,10482],[3860,10482],[3861,10545],[3862,10393],[3863,10460],[3865,10506],[3867,10549],[3868,10553],[3870,10584],[3871,10401],[3872,10556],[3874,10584],[3875,10651],[3876,10584],[3879,10707],[3884,10559],[3885,10563],[3890,10382],[3891,10448],[3894,10607],[3896,10382],[3897,10382],[3899,10382],[3900,10541],[3907,10382],[3908,10450],[3909,10592],[3910,10382],[3911,10390],[3914,10574],[3915,10576],[3917,10583],[3921,10480],[3925,10480],[3926,10481],[3927,10593],[3928,10485],[3929,10570],[3930,10484],[3931,10382],[3934,10591],[3935,10591],[3936,10466],[3937,10655],[3938,10466],[3939,10466],[3940,10466],[3941,10466],[3942,10466],[3943,10466],[3944,10466],[3945,10466],[3946,10466],[3947,10466],[3948,10466],[3949,10466],[3950,10432],[3951,10530],[3952,10466],[3953,10466],[3954,10466],[3955,10466],[3956,10466],[3957,10466],[3958,10466],[3959,10466],[3960,10466],[3961,10466],[3962,10466],[3963,10466],[3964,10383],[3965,10445],[3966,10455],[3967,10455],[3968,10431],[3970,10585],[3971,10575],[3978,10577],[3989,10610],[3990,10577],[3991,10577],[3992,10577],[3993,10533],[3994,10560],[3995,10578],[4001,10401],[4002,10401],[4003,10494],[4004,10647],[4005,10532],[4009,10401],[4015,10698],[4016,10612],[4018,10382],[4021,10596],[4022,10699],[4023,10613],[4024,10382],[4029,10700],[4030,10382],[4032,10531],[4039,10590],[4043,10493],[4048,10596],[4049,10701],[4050,10614],[4051,10382],[4052,10602],[4053,10509],[4061,10536],[4065,10536],[4066,10611],[4067,10653],[4074,10707],[4075,10707],[4076,10382],[4077,10429],[4078,10429],[4079,10643],[4080,10653],[4081,10601],[4082,10708],[4084,10466],[4085,10466],[4095,10382],[4103,10382],[4104,10382],[4109,10382],[4110,10382],[4118,10639],[4119,10639],[4120,10639],[4123,10543],[4124,10541],[4128,10420],[4130,10541],[4132,10485],[4133,10508],[4135,10508],[4137,10390],[4138,10390],[4139,10390],[4140,10390],[4141,10390],[4142,10390],[4147,10583],[4156,10702],[4157,10707],[4161,10659],[4162,10702],[4163,10390],[4164,10432],[4165,10702],[4168,10568],[4170,10503],[4171,10512],[4172,10659],[4173,10703],[4174,10702],[4176,10530],[4179,10382],[4180,10382],[4185,10382],[4186,10382],[4191,10382],[4192,10382],[4197,10382],[4198,10382],[4203,10382],[4204,10382],[4206,10580],[4208,10518],[4209,10510],[4210,10620],[4211,10504],[4212,10474],[4214,10561],[4215,10579],[4216,10579],[4217,10547],[4218,10547],[4219,10547],[4220,10561],[4221,10561],[4222,10561],[4225,10466],[4229,10466],[4239,10530],[4240,10510],[4241,10530],[4242,10529],[4243,10597],[4245,10530],[4246,10530],[4248,10581],[4249,10624],[4251,10581],[4252,10581],[4253,10581],[4257,10575],[4259,10709],[4261,10709],[4262,10709],[4268,10586],[4269,10604],[4270,10510],[4271,10510],[4272,10539],[4278,10530],[4283,10389],[4289,10446],[4290,10442],[4291,10444],[4292,10382],[4294,10644],[4295,10546],[4296,10620],[4297,10652],[4298,10443],[4299,10446],[4300,10382],[4301,10599],[4303,10599],[4305,10422],[4308,10422],[4333,10511],[4351,10599],[4356,10642],[4357,10642],[4369,10445],[4371,10474],[4372,10603],[4382,10599],[4390,10577],[4391,10432],[4392,10432],[4393,10389],[4394,10404],[4395,10382],[4398,10382],[4400,10382],[4404,10536],[4405,10598],[4413,10559],[4414,10420],[4415,10582],[4416,10583],[4417,10582],[4418,10562],[4420,10583],[4421,10564],[4422,10551],[4423,10604],[4426,10551],[4427,10551],[4428,10703],[4429,10703],[4430,10702],[4431,10703],[4432,10703],[4434,10644],[4435,10382],[4436,10387],[4437,10382],[4438,10382],[4439,10425],[4440,10657],[4441,10658],[4442,10382],[4443,10391],[4444,10387],[4445,10665],[4446,10509],[4447,10670],[4449,10672],[4451,10594],[4452,10452],[4455,10656],[4456,10428],[4457,10578],[4465,10587],[4466,10587],[4467,10466],[4469,10541],[4474,10484],[4482,10597],[4485,10509],[4486,10573],[4487,10430],[4488,10602],[4489,10710],[4490,10602],[4493,10571],[4494,10711],[4497,10420],[4500,10540],[4501,10588],[4502,10589],[4503,10503],[4506,10503],[4507,10473],[4511,10609],[4512,10609],[4513,10578],[4514,10386],[4516,10541],[4517,10645],[4518,10649],[4519,10664],[4520,10587],[4521,10555],[4522,10421],[4523,10541],[4536,10468],[4537,10390],[4542,10403],[4543,10403],[4544,10541],[4548,10660],[4550,10575],[4552,10470],[4560,10495],[4562,10382],[4563,10448],[4565,10595],[4566,10550],[4567,10558],[4569,10382],[4576,10597],[4580,10513],[4581,10479],[4584,10623],[4592,10531],[4594,10572],[4596,10591],[4603,10704],[4604,10646],[4605,10382],[4606,10423],[4607,10401],[4611,10669],[4617,10382],[4623,10382],[4624,10382],[4629,10382],[4630,10382],[4635,10382],[4636,10382],[4641,10382],[4642,10382],[4643,10626],[4647,10600],[4649,10494],[4652,10401],[4655,10567],[4664,10667],[4665,10673],[4667,10591],[4669,10576],[4672,10597],[4673,10597],[4680,10583],[4768,10712],[4772,10712],[4783,10713],[4793,10508],[4795,10714],[4797,10715],[4809,10715],[4820,10716],[4826,10717],[4829,10718],[4842,10719],[4847,10719],[4849,10466],[4855,10720],[4884,10721],[4888,10722],[4892,10723],[4900,10717],[4902,10591],[5156,10485],[5161,10722],[5169,10717],[5177,10707],[5178,10707],[5179,10707],[5187,10724],[5190,10725],[5192,10725],[5194,10725],[5374,10726],[5380,10715],[5384,10727],[5385,10714],[5387,10728],[5399,10714],[5410,10728],[5412,10729],[5415,10728],[5416,10728],[5417,10729],[5418,10729],[5427,10644],[5428,10730],[5433,10731],[5434,10401],[5442,10732],[5444,10715],[5445,10732],[5447,10732],[5449,10732],[5451,10715],[5452,10732],[5459,10688],[5461,10718],[5462,10720],[5463,10596],[5465,10718],[5466,10718],[5467,10696],[5468,10696],[5469,10696],[5532,10644],[5533,10529],[5788,10636],[5790,10688],[5792,10733],[5931,10734],[5932,10717],[5937,10714],[5938,10714],[5940,10596],[5948,10493],[5949,10493],[6201,10508],[6227,10466],[6265,10717],[6269,10644],[6272,10466],[6277,10735],[6371,10508],[6375,10715],[6379,10729],[6594,10466],[6600,10717],[6602,10466],[6642,10707],[6644,10707],[6655,10575],[6656,10575],[6733,10736],[6745,10737],[6746,10737],[6748,10738],[6756,10714],[6762,10659],[6763,10739],[6895,10718],[6896,10718],[6898,10580],[7039,10585],[7041,10707],[7042,10739],[7049,10740],[7053,10741],[7056,10742],[7065,10722],[7068,10722],[7074,10730],[7109,10717],[7124,10717],[7136,10599],[7182,10485],[7183,10485],[7188,10716],[7199,10717],[7202,10717],[7210,10743],[7211,10707],[7212,10722],[7221,10722],[7227,10722],[7241,10401],[7251,10722],[7271,10720],[7311,10720],[7321,10744],[7322,10745],[7370,10746],[7391,10722],[7395,10717],[7396,10644],[7451,10387],[7452,10387],[7453,10387],[7454,10387],[7461,10647],[7471,10722],[7502,10715],[7513,10747],[7514,10748],[7516,10749],[7523,10737],[7525,10707],[7620,10466],[7633,10724],[7671,10644],[7689,10466],[7703,10660],[7705,10660],[7722,10736],[7736,10720],[7737,10750],[7739,10750],[7741,10750],[7743,10750],[7745,10750],[7757,10722],[7779,10591],[7783,10718],[8337,10717],[8357,10644],[8517,10591],[8725,10466],[8866,10523],[8867,10524],[8868,10524],[8869,10524],[8870,10524],[8871,10524],[8872,10524],[8873,10524],[8874,10524],[8875,10524],[8879,10469],[8883,10469],[8884,10469],[8885,10469],[8886,10469],[8887,10469],[8888,10469],[8889,10469],[8890,10469],[8891,10469],[8892,10469],[8893,10469],[8894,10469],[8895,10469],[8896,10469],[8897,10469],[8898,10469],[8899,10469],[8900,10469],[8901,10469],[8902,10469],[8903,10469],[8904,10469],[8905,10469],[8906,10469],[8907,10469],[8908,10469],[8909,10469],[8910,10469],[8911,10469],[8912,10469],[8913,10469],[8914,10676],[8915,10677],[8933,10566],[8949,10570],[8950,10612],[8951,10613],[8952,10614],[8953,10573],[8954,10664],[8955,10550],[8956,10646],[9009,10751],[9018,10550],[9024,10678],[9025,10550],[9047,10550],[9056,10679],[9058,10679],[9059,10679],[9069,10679],[9088,10605],[9089,10605],[9123,10752],[9135,10605],[9136,10605],[9142,10420],[9146,10382],[9147,10482],[9148,10482],[9149,10482],[9150,10460],[9152,10401],[9156,10382],[9158,10382],[9159,10382],[9161,10382],[9166,10382],[9167,10382],[9168,10480],[9171,10480],[9172,10481],[9173,10485],[9174,10484],[9175,10382],[9176,10401],[9177,10401],[9178,10401],[9183,10698],[9184,10382],[9187,10699],[9188,10382],[9193,10700],[9194,10382],[9199,10701],[9200,10382],[9204,10382],[9205,10429],[9206,10429],[9209,10382],[9215,10382],[9216,10382],[9220,10382],[9221,10382],[9222,10420],[9224,10485],[9228,10702],[9229,10659],[9230,10702],[9231,10702],[9232,10703],[9233,10702],[9235,10382],[9236,10382],[9240,10382],[9241,10382],[9245,10382],[9246,10382],[9250,10382],[9251,10382],[9255,10382],[9256,10382],[9266,10382],[9267,10382],[9269,10422],[9270,10422],[9282,10382],[9285,10382],[9287,10382],[9288,10420],[9291,10703],[9292,10703],[9293,10702],[9294,10703],[9295,10703],[9296,10382],[9297,10382],[9298,10382],[9299,10382],[9301,10484],[9302,10420],[9304,10470],[9308,10382],[9310,10382],[9314,10479],[9320,10704],[9321,10382],[9322,10423],[9323,10401],[9326,10382],[9330,10382],[9331,10382],[9335,10382],[9336,10382],[9340,10382],[9341,10382],[9345,10382],[9346,10382],[9350,10401],[9363,10485],[9365,10422],[9370,10401],[9386,10485],[9387,10485],[9388,10401],[9406,10480],[9407,10480],[9408,10481],[9409,10485],[9410,10484],[9412,10485],[9416,10484],[9417,10485],[9419,10485],[9420,10485],[9421,10480],[9422,10480],[9423,10484],[9428,10484],[9429,10495],[9430,10495],[9431,10495],[9432,10495],[9433,10737],[9434,10737],[9435,10737],[9436,10639],[9437,10639],[9438,10639],[9442,10618],[9494,10525],[9497,10680],[9517,10690],[9518,10690],[9532,10592],[9534,10593],[9563,10543],[9593,10594],[9618,10595],[9637,10543],[9638,10543],[9639,10543],[9640,10543],[9678,10593],[9682,10594],[9688,10681],[9717,10682],[9742,10691],[9743,10691],[9744,10691],[9745,10753],[9746,10754],[9747,10754],[9748,10754],[9749,10754],[9750,10683],[9783,10473],[9784,10473],[9785,10473],[9786,10572],[9787,10572],[9808,10468],[9811,10468],[9812,10692],[9813,10692],[9814,10692],[9815,10692],[9818,10693],[9819,10694],[9820,10694],[9821,10694],[9822,10694],[9823,10694],[9824,10694],[9825,10694],[9826,10468],[9827,10403],[9828,10403],[9839,10556],[9840,10660],[9841,10558],[9860,10736],[9868,10660],[9870,10660],[9872,10736],[9879,10750],[9881,10750],[9883,10750],[9885,10750],[9887,10750],[9893,10567],[9899,10755],[9900,10755],[9904,10466],[9906,10504],[9907,10421],[9910,10386],[9911,10687],[9912,10687],[9913,10421],[9928,10386],[10103,10386],[10218,10386],[10295,10386],[10304,10389],[10305,10389],[10306,10389],[10308,10389],[10312,10389],[10325,10404],[10326,10404],[10333,10617],[10357,10400],[10358,10400]],"b":[[31,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[32,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[33,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[34,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[35,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[36,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[37,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[38,"impl-Add-for-ChunkedArray%3CStringType%3E"],[39,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[40,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[41,"impl-Add-for-ChunkedArray%3CT%3E"],[42,"impl-Add-for-%26ChunkedArray%3CT%3E"],[44,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[45,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[46,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[47,"impl-AggList-for-ChunkedArray%3CListType%3E"],[48,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[49,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[50,"impl-AggList-for-ChunkedArray%3CT%3E"],[54,"impl-ChunkedArray%3CListType%3E"],[55,"impl-ChunkedArray%3CFixedSizeListType%3E"],[56,"impl-ChunkedArray%3CListType%3E"],[57,"impl-ChunkedArray%3CFixedSizeListType%3E"],[61,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[62,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[63,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[64,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[65,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[66,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[68,"impl-ChunkedArray%3CFixedSizeListType%3E"],[69,"impl-ChunkedArray%3CListType%3E"],[71,"impl-ChunkedArray%3CFloat64Type%3E"],[72,"impl-ChunkedArray%3CFloat32Type%3E"],[75,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[76,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[77,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[78,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[79,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[80,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[81,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[82,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[83,"impl-ChunkedArray%3CBinaryType%3E"],[84,"impl-ChunkedArray%3CT%3E"],[85,"impl-ChunkedArray%3CStringType%3E"],[88,"impl-ChunkedArray%3CListType%3E"],[89,"impl-ChunkedArray%3CFixedSizeListType%3E"],[90,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[91,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[92,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[93,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[94,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[95,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[96,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[97,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[98,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[99,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[100,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[101,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[103,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[104,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[105,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[106,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[107,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[108,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[109,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[110,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[111,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[112,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[115,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[116,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[117,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[120,"impl-ChunkedArray%3CStringType%3E"],[121,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[125,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[126,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[128,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[129,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[130,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[133,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[134,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[135,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[138,"impl-Settings"],[139,"impl-Flags-for-Settings"],[140,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[141,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[142,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[157,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[158,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[159,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[161,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[162,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[163,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[164,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[165,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[166,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[167,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[193,"impl-Div-for-%26ChunkedArray%3CT%3E"],[194,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[195,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[196,"impl-Div-for-ChunkedArray%3CT%3E"],[205,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[206,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[207,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[208,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[209,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[210,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[211,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[212,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[213,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[214,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[215,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[216,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[217,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[218,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[219,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[220,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[221,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[222,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[223,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[224,"impl-ChunkExplode-for-ChunkedArray%3CStringType%3E"],[225,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[228,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[229,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[230,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[231,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[232,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[233,"impl-ChunkFilter%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[234,"impl-ChunkFilter%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[235,"impl-ChunkFilter%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[236,"impl-ChunkFilter%3CListType%3E-for-ChunkedArray%3CListType%3E"],[237,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[238,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[241,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[242,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[243,"impl-Debug-for-ChunkedArray%3CListType%3E"],[244,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[245,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[246,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[247,"impl-Debug-for-ChunkedArray%3CT%3E"],[248,"impl-Octal-for-Settings"],[249,"impl-LowerHex-for-Settings"],[250,"impl-Debug-for-Settings"],[251,"impl-Binary-for-Settings"],[252,"impl-UpperHex-for-Settings"],[254,"impl-ChunkedArray%3CListType%3E"],[255,"impl-ChunkedArray%3CFixedSizeListType%3E"],[261,"impl-Flags-for-Settings"],[262,"impl-Settings"],[270,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[271,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[272,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[273,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[274,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[275,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[276,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[277,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[278,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[279,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[280,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[281,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[283,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[284,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[285,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[286,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[287,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[288,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[289,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[290,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[291,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[292,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[293,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[294,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[295,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[296,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[297,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[298,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[299,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[300,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[301,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[302,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[303,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[304,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[307,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[308,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[309,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[310,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[311,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[312,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[313,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[314,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[316,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[317,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[318,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[319,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[320,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[321,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[322,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[323,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[324,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[325,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[326,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[327,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[330,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[331,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[332,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[333,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[334,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[335,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[336,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[337,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[338,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[339,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[340,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[341,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[342,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[343,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[344,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[345,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[347,"impl-ChunkedArray%3CListType%3E"],[348,"impl-ChunkedArray%3CFixedSizeListType%3E"],[350,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[351,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[352,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[353,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[354,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[355,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[356,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[357,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[358,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[359,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[360,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[361,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[362,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[363,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[364,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[365,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[366,"impl-ChunkedArray%3CFixedSizeListType%3E"],[367,"impl-ChunkedArray%3CListType%3E"],[369,"impl-ChunkedArray%3CListType%3E"],[370,"impl-ChunkedArray%3CFixedSizeListType%3E"],[375,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[376,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[377,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[378,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[379,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[380,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[381,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[382,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[383,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[384,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[385,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[386,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[388,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[389,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[390,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[391,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[392,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[393,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[394,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[395,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[396,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[397,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[398,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[399,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[400,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[401,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[402,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[403,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[404,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[405,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[412,"impl-ChunkedArray%3CFixedSizeListType%3E"],[413,"impl-ChunkedArray%3CListType%3E"],[425,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[426,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[427,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[428,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[429,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[430,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[431,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[432,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[435,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[436,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[457,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[458,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[459,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[460,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[461,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[462,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[468,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[469,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[470,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[471,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[472,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[473,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[474,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[475,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[476,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[477,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[478,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[479,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[480,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[481,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[482,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[483,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[484,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[485,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[486,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[487,"impl-ChunkedArray%3CBooleanType%3E"],[488,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[489,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[490,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[491,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[492,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[493,"impl-ChunkedArray%3CBooleanType%3E"],[494,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[495,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[496,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[497,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[498,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[499,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[500,"impl-ChunkedArray%3CBooleanType%3E"],[501,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[502,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[503,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[504,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[505,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[507,"impl-ChunkedArray%3CT%3E"],[508,"impl-ChunkedArray%3CBooleanType%3E"],[509,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[510,"impl-Mul-for-ChunkedArray%3CT%3E"],[511,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[512,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[514,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[515,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[516,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[518,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[519,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[520,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[521,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[522,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[523,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[524,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[525,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[526,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[527,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[528,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[529,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[530,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[531,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[532,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[533,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[534,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[535,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[536,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[537,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[538,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[539,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[540,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[541,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[542,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[543,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[544,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[545,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[546,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[547,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[548,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[549,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[550,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[551,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[552,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[553,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[554,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[555,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[556,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[557,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[559,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[560,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[561,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[562,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[563,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[564,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[565,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[566,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[571,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[572,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[574,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[575,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[576,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[577,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[578,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[579,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[580,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[581,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[582,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[583,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[584,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[585,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[586,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[587,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[588,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[589,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[590,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[591,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[594,"impl-ChunkExplode-for-ChunkedArray%3CStringType%3E"],[595,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[596,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[598,"impl-ChunkedArray%3CStringType%3E"],[599,"impl-ChunkedArray%3CListType%3E"],[600,"impl-ChunkedArray%3CListType%3E"],[601,"impl-ChunkedArray%3CStringType%3E"],[604,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[605,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[606,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[607,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[608,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[609,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[622,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[623,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[624,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[625,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[626,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[627,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[628,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[629,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[630,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[631,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[632,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[633,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[634,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[635,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[636,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[637,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[638,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[639,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[640,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[641,"impl-Rem-for-ChunkedArray%3CT%3E"],[645,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[646,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[647,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[648,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[649,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[650,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[651,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[652,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[657,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[658,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[659,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[660,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[661,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[662,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[663,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[664,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[665,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[666,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[667,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[668,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[669,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[670,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[671,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[678,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[679,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[680,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[681,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[682,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[683,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[684,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[685,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[686,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[687,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[688,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[689,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[690,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[691,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[692,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[693,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[696,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[697,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[698,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[699,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[700,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[701,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[702,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[703,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[704,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[705,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[707,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[708,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[709,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[710,"impl-Sub-for-ChunkedArray%3CT%3E"],[711,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[712,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[713,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[717,"impl-ChunkedArray%3CBooleanType%3E"],[718,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[719,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[720,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[721,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[722,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[725,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[726,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[729,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[730,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[731,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[732,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[733,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[734,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[739,"impl-ChunkedArray%3CFixedSizeListType%3E"],[740,"impl-ChunkedArray%3CListType%3E"],[741,"impl-ChunkedArray%3CT%3E"],[742,"impl-ChunkedArray%3CListType%3E"],[749,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[750,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[751,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[752,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[753,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[754,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[756,"impl-ChunkedArray%3CListType%3E"],[757,"impl-ChunkedArray%3CFixedSizeListType%3E"],[774,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[775,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[776,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[777,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[778,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[783,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[784,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[785,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[786,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[787,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[788,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[789,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[790,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[791,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[793,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[794,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[795,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[796,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[797,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[798,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[799,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[800,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[801,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[802,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[803,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[804,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[805,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[806,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[807,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[808,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[809,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[810,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[811,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[812,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[813,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[814,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[815,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[816,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[817,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[827,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[828,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[847,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[848,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[849,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[850,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[851,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[852,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[853,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[854,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[855,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[856,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[857,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[858,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[859,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[860,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[861,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[862,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[1037,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1038,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1265,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1266,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1298,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1299,"impl-ObjectArray%3CT%3E"],[1311,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1312,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1322,"impl-ObjectArray%3CT%3E"],[1323,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1325,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1326,"impl-ObjectArray%3CT%3E"],[1328,"impl-ObjectArray%3CT%3E"],[1329,"impl-Array-for-ObjectArray%3CT%3E"],[1332,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1333,"impl-ObjectChunkedBuilder%3CT%3E"],[1335,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1336,"impl-ObjectChunkedBuilder%3CT%3E"],[2065,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2066,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2067,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2068,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2069,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2073,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2074,"impl-Logical%3CDurationType,+Int64Type%3E"],[2318,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2319,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2320,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2321,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2322,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2330,"impl-PartialEq-for-DataType"],[2331,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2337,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2338,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2339,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2341,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2342,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2343,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2377,"impl-Display-for-AnyValue%3C\'_%3E"],[2378,"impl-Debug-for-AnyValue%3C\'a%3E"],[2380,"impl-Debug-for-DataType"],[2381,"impl-Display-for-DataType"],[2383,"impl-Debug-for-TimeUnit"],[2384,"impl-Display-for-TimeUnit"],[2389,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2390,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2405,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2407,"impl-From%3CK%3E-for-AnyValue%3C\'_%3E"],[2409,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2410,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2412,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2413,"impl-From%3C%26ArrowField%3E-for-Field"],[2414,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2438,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2439,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2463,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2464,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2465,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2466,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2467,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2471,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2472,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2473,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2474,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2475,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2510,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2511,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2512,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2514,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2515,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2516,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2617,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[2618,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[2619,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[2620,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[2621,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[2670,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2671,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2672,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2674,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2675,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2676,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2689,"impl-PolarsMonthEnd-for-Logical%3CDatetimeType,+Int64Type%3E"],[2690,"impl-PolarsMonthEnd-for-Logical%3CDateType,+Int32Type%3E"],[2691,"impl-PolarsMonthStart-for-Logical%3CDateType,+Int32Type%3E"],[2692,"impl-PolarsMonthStart-for-Logical%3CDatetimeType,+Int64Type%3E"],[2715,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2716,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2717,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2718,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2719,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2720,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2721,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2722,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2728,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2729,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2730,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2732,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2733,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2734,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2738,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[2739,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[2759,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[2760,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[2767,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2768,"impl-Logical%3CDurationType,+Int64Type%3E"],[2773,"impl-Logical%3CTimeType,+Int64Type%3E"],[2774,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2775,"impl-Logical%3CDateType,+Int32Type%3E"],[2789,"impl-Logical%3CDurationType,+Int64Type%3E"],[2790,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2837,"impl-Logical%3CTimeType,+Int64Type%3E"],[2838,"impl-Logical%3CDateType,+Int32Type%3E"],[2839,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2844,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[2845,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3130,"impl-Display-for-ErrString"],[3131,"impl-Debug-for-ErrString"],[3132,"impl-Display-for-PolarsError"],[3133,"impl-Debug-for-PolarsError"],[3137,"impl-From%3CError%3E-for-PolarsError"],[3138,"impl-From%3CError%3E-for-PolarsError"],[3139,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3140,"impl-From%3CError%3E-for-PolarsError"],[3142,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3143,"impl-From%3CError%3E-for-PolarsError"],[3265,"impl-Display-for-DataFrame"],[3266,"impl-Debug-for-DataFrame"],[3271,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3273,"impl-From%3C%26Schema%3E-for-DataFrame"],[3274,"impl-From%3CStructChunked%3E-for-DataFrame"],[3301,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3302,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3303,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3304,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3305,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3306,"impl-Index%3C%26str%3E-for-DataFrame"],[3307,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3308,"impl-Index%3Cusize%3E-for-DataFrame"],[3399,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3400,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BArrowField%5D)%3E-for-DataFrame"],[3573,"impl-Display-for-GroupByMethod"],[3574,"impl-Debug-for-GroupByMethod"],[3581,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3582,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3583,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3617,"impl-IntoIterator-for-GroupsIdx"],[3618,"impl-IntoIterator-for-%26GroupsIdx"],[3620,"impl-IntoParallelIterator-for-%26GroupsIdx"],[3621,"impl-IntoParallelIterator-for-GroupsIdx"],[4886,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4887,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5513,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[5514,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[5515,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[5989,"impl-Expr"],[5990,"impl-PartialEq-for-Expr"],[5993,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[5994,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[6008,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[6009,"impl-PartialEq-for-Arc%3CT,+A%3E"],[6010,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[6015,"impl-PartialEq-for-StructArray"],[6016,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[6286,"impl-Display-for-Duration"],[6287,"impl-Debug-for-Duration"],[6314,"impl-Display-for-JoinType"],[6315,"impl-Debug-for-JoinType"],[6317,"impl-Display-for-JoinValidation"],[6318,"impl-Debug-for-JoinValidation"],[6328,"impl-Debug-for-Expr"],[6329,"impl-Display-for-Expr"],[6331,"impl-Display-for-Operator"],[6332,"impl-Debug-for-Operator"],[6334,"impl-Display-for-BooleanFunction"],[6335,"impl-Debug-for-BooleanFunction"],[6336,"impl-Display-for-CategoricalFunction"],[6337,"impl-Debug-for-CategoricalFunction"],[6338,"impl-Debug-for-PowFunction"],[6339,"impl-Display-for-PowFunction"],[6340,"impl-Debug-for-StringFunction"],[6341,"impl-Display-for-StringFunction"],[6342,"impl-Display-for-FunctionExpr"],[6343,"impl-Debug-for-FunctionExpr"],[6356,"impl-Display-for-Arc%3CT,+A%3E"],[6357,"impl-Pointer-for-Arc%3CT,+A%3E"],[6358,"impl-Debug-for-Arc%3CT,+A%3E"],[6432,"impl-From%3CDslPlan%3E-for-LazyFrame"],[6433,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[6471,"impl-From%3Ci16%3E-for-Expr"],[6472,"impl-From%3C%26str%3E-for-Expr"],[6473,"impl-From%3Cu64%3E-for-Expr"],[6474,"impl-From%3Cu32%3E-for-Expr"],[6475,"impl-From%3Cu8%3E-for-Expr"],[6476,"impl-From%3Ci8%3E-for-Expr"],[6477,"impl-From%3Cf64%3E-for-Expr"],[6478,"impl-From%3Cu16%3E-for-Expr"],[6479,"impl-From%3Ci64%3E-for-Expr"],[6480,"impl-From%3Ci32%3E-for-Expr"],[6481,"impl-From%3Cbool%3E-for-Expr"],[6482,"impl-From%3CAggExpr%3E-for-Expr"],[6484,"impl-From%3Cf32%3E-for-Expr"],[6487,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6488,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6489,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6490,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6491,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6493,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6494,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6495,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6496,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6497,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6502,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[6503,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[6505,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[6506,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[6520,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[6522,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[6524,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[6525,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[6526,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[6527,"impl-From%3CT%3E-for-Arc%3CT%3E"],[6528,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[6529,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[6530,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[6531,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[6532,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[6533,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[6534,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[6535,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[6536,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[6543,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[6544,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[6546,"impl-From%3CArrowSchema%3E-for-Schema"],[6547,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[6548,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[6549,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[6551,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[6552,"impl-From%3CMutableStructArray%3E-for-StructArray"],[6566,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6567,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6575,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6576,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6588,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6589,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7676,"impl-StructArray"],[7677,"impl-Array-for-StructArray"],[7685,"impl-StructArray"],[7686,"impl-Array-for-StructArray"],[8360,"impl-Array-for-StructArray"],[8361,"impl-StructArray"],[8607,"impl-LazyFileListReader-for-LazyCsvReader"],[8608,"impl-LazyCsvReader"],[8609,"impl-LazyJsonLineReader"],[8610,"impl-LazyFileListReader-for-LazyJsonLineReader"],[8656,"impl-LazyCsvReader"],[8657,"impl-LazyFileListReader-for-LazyCsvReader"],[8658,"impl-LazyJsonLineReader"],[8659,"impl-LazyFileListReader-for-LazyJsonLineReader"],[8693,"impl-StructArray"],[8694,"impl-Array-for-StructArray"],[9075,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[9076,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[9081,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[9082,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[9701,"impl-Display-for-RollingFunction"],[9702,"impl-Debug-for-RollingFunction"],[9730,"impl-Debug-for-RollingFunctionBy"],[9731,"impl-Display-for-RollingFunctionBy"],[9919,"impl-Add-for-%26Series"],[9920,"impl-Add%3CT%3E-for-Series"],[9921,"impl-Add-for-Series"],[9922,"impl-Add%3CT%3E-for-%26Series"],[9937,"impl-AsSeries-for-Series"],[9938,"impl-SeriesSealed-for-Series"],[9982,"impl-Div%3CT%3E-for-Series"],[9983,"impl-Div-for-Series"],[9984,"impl-Div%3CT%3E-for-%26Series"],[9985,"impl-Div-for-%26Series"],[9995,"impl-ChunkCompare%3C%26str%3E-for-Series"],[9996,"impl-ChunkCompare%3CRhs%3E-for-Series"],[9997,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[9999,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10000,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10001,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10018,"impl-Display-for-Series"],[10019,"impl-Debug-for-Series"],[10023,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[10024,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[10025,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[10026,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[10027,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[10034,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[10035,"impl-FromIterator%3Cf32%3E-for-Series"],[10036,"impl-FromIterator%3Cu8%3E-for-Series"],[10037,"impl-FromIterator%3CString%3E-for-Series"],[10038,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[10039,"impl-FromIterator%3C%26i64%3E-for-Series"],[10040,"impl-FromIterator%3C%26u64%3E-for-Series"],[10041,"impl-FromIterator%3Cu64%3E-for-Series"],[10042,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[10043,"impl-FromIterator%3Ci64%3E-for-Series"],[10044,"impl-FromIterator%3C%26i16%3E-for-Series"],[10045,"impl-FromIterator%3C%26u16%3E-for-Series"],[10046,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[10047,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[10048,"impl-FromIterator%3C%26f32%3E-for-Series"],[10049,"impl-FromIterator%3Ci8%3E-for-Series"],[10050,"impl-FromIterator%3C%26u32%3E-for-Series"],[10051,"impl-FromIterator%3Cf64%3E-for-Series"],[10052,"impl-FromIterator%3C%26i32%3E-for-Series"],[10053,"impl-FromIterator%3C%26i8%3E-for-Series"],[10054,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[10055,"impl-FromIterator%3Cbool%3E-for-Series"],[10056,"impl-FromIterator%3C%26str%3E-for-Series"],[10057,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[10058,"impl-FromIterator%3Cu32%3E-for-Series"],[10059,"impl-FromIterator%3Cu16%3E-for-Series"],[10060,"impl-FromIterator%3Ci16%3E-for-Series"],[10061,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[10062,"impl-FromIterator%3C%26bool%3E-for-Series"],[10063,"impl-FromIterator%3C%26f64%3E-for-Series"],[10064,"impl-FromIterator%3Ci32%3E-for-Series"],[10065,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[10066,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[10067,"impl-FromIterator%3C%26u8%3E-for-Series"],[10068,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[10069,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[10070,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[10071,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[10072,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[10073,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[10074,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[10075,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[10076,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[10077,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[10078,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[10088,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10089,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10090,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10092,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10093,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10094,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10131,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10132,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10133,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10135,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10136,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10137,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10146,"impl-Mul%3CT%3E-for-Series"],[10147,"impl-Mul-for-%26Series"],[10148,"impl-Mul-for-Series"],[10149,"impl-Mul%3CT%3E-for-%26Series"],[10153,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[10154,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[10155,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[10156,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[10157,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[10158,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[10159,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[10160,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[10161,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[10162,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[10163,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[10164,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[10165,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[10166,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[10167,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[10168,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[10169,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[10170,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[10171,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[10172,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[10173,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[10174,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[10175,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[10176,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[10177,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[10178,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[10179,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[10180,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[10181,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[10182,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[10183,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[10184,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[10185,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[10186,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[10187,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[10188,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[10189,"impl-NamedFrom%3CT,+T%3E-for-Series"],[10190,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[10191,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[10192,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[10193,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[10194,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[10195,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[10196,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[10197,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[10198,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[10199,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[10200,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[10201,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[10202,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[10203,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[10209,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10210,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10211,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10213,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10214,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10215,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10223,"impl-Rem%3CT%3E-for-%26Series"],[10224,"impl-Rem-for-%26Series"],[10225,"impl-Rem%3CT%3E-for-Series"],[10249,"impl-Sub-for-%26Series"],[10250,"impl-Sub%3CT%3E-for-%26Series"],[10251,"impl-Sub-for-Series"],[10252,"impl-Sub%3CT%3E-for-Series"],[10277,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[10278,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[10280,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[10281,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAAKoN8Q0uDjEOMg4zDjQONQ46Dj0OQg5DDmgO","e":"OzAAAAEAAFgd8wMCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB8AOgAAAD4ABQBIAAIATAAKAFsACQBmAAYAcAAGAHgACwCGAAIAjAADAJIABgCaAAYAogAIAK4ABAC0AAAAuQAHAMIACADNABUA5QAKAPEAEAAGAQAACQEBAA0BDQAcARAANAEUAEsBEgBfARIAdgEAAHgBHgCZAQMApQERALoBAwDBAQEAxgEBAMkBBgDVASYA/gEHAAcCMgA8AgEAPwIRAFICAwBXAgQAXQIFAGcCAABpAhoAhgIHAJICDgCiAgEApgIQALkCEQDNAgYA2AIBAN4CAADhAgEA6AIBAO4CBwD4AgEA+wIKAAcDBAANAwAADwMoADoDAAA8AyMAYgM0AJkDCACmAxEAuwNYACEEEgA/BAcASARcAKYEAACpBBQAwgQDAMoEAwDQBB4A8QQTAAYFBwAPBQAAEgUBABUFAQAZBQ4AKQUAACwFAAAuBQIAMgUDADcFAQA6BQcAQwUAAEUFBQBNBQEAUAUAAFIFAQBVBQMAWgUDAF8FAgBjBQMAaQUAAGwFAAB0BQAAeQUAAHwFAQCBBQEAhAUAAIcFAACOBQAAkwUCAJ4FBgCnBQ0AtwUFAL8FCADLBQMA0AUAANMFAADVBQEA2wUFAOQFAQDtBQEA+QUAAPsFAQD+BQAAAQYAAAMGAAAHBgAACQYAAA4GDAAdBgIAKwYAAC0GBwA2BgIAPAYAAD4GAwBDBgEARgYFAFIGFQBpBgEAbQYEAHMGAwB6BgYAjgYDAJMGBwCcBgQAowYCAKcGBQCvBgAAsQYMAMIGAQDGBgEAzAYBAM8GAQDSBgMA1wYAANkGAADcBgEA4AYAAOIGAQDlBgAA5wYCAOsGDAD5BgAA+wYBAP4GAAAABwEAAwcAAAUHAQAIBwAACgcBAA0HAAARBwAAFQcBABkHAAAcBwAAHgcAACAHAwAlBwAAKAcHADEHAQA0BwUAOwcBAD8HAABBBwIARgcAAEsHAwBQBwEAUwcAAFUHAQBYBwAAWgcBAF0HAABfBwEAYgcAAGQHAQBnBwAAaQcAAGwHJQCTBxcArAdtABwITgBsCAcAdgiXAA8JBgAXCSgAQQkBAEQJDwBWCQEAZgkAAGgJAABqCQEAbQkCAHIJAACHCQEAiwkAAJMJAACWCQAAmAkGAKAJBACmCQAAqAkEAK4JAQCxCRkAzwkOAOAJKgAMCgAAOAoJAEQKAABGCgEASQoEAE8KAQBUCgAAVgoFAF0KAABgCgIAZQoEAGsKAABtCg8AfwoAAIIKEgCWCgAAmQoNAKgKDAC2CgAAuAoBALwKDgDMCgAA0woAANUKAADaCg8A7AoAAO4KAgDzCiAAGQtkAH8LLgCvCwIAsws1AOoLAQDtCwgA9wsAAPkLAQD8CwQAAgwBAAcMAAAJDAIADQwAABEMGgAtDBEAQQwEAEcMBQBQDAQAVgwVAG8MAAByDAoAfgwCAIYMEACZDA8AqgwAALEMAQC1DAIAuQwAALsMAADADAMAyAwAAMoMAgDbDAAA3QwAAN8MAQDmDAwA+QwCAAwNAQAZDQEAHQ0AACMNAAAsDQEALw0AADINAQA5DQAAOw0EAEMNBgBMDQkAVw0AAFoNAQBeDQQAag0NAHkNAgB+DQoAig0BAI0NAwCSDQMAlw0JAKINBwCrDQEArg0YAMgNKADyDQYA/g0CAAIOAAAFDgQADA4AABAOBwAgDg0ALw4BADYOAwA7DgEAPw4CAEQOAABGDh8AaQ4MAHgOBQB/DgcAiA4jAK4OCwC7Dg8AzA4AAM8OAwDWDgYA4A4OAPEOBgD6DgAA/Q4IAAcPAQALDwMAEA8FABcPAAAcDwkAJw8BACsPAwAwDwEAMw8KAD8PAABCDwAARA8JAE8PAABRDwgAWw8DAGMPAABmDwAAbg8CAHUPAAB4DwEAfg8KAIoPDwCdDwYApQ8BAKgPAwCwDwMAtw8CAL4PAwDDDwAAxQ8KANIPCgDeDwIA4w8AAOYPAADoDwUA7w8CAPMPBAD5DwMAABACAAYQAAAIEAEADBAAAA4QBAAVEA4AJRAAACgQAQArEAMAMRACADcQEwBMEAkAWBAAAFoQAQBeEAAAYBABAGQQAABmEAEAahAAAGwQAwByEAEAdRABAHkQAAB8EAAAfhADAIMQAgCHEAYAkBAHAJoQAACeEAEAohAAAKQQAACmEAEAqRABAKwQAQCxEA0AwhAFAMkQBwDTEAIA1xAGAOIQAQDlEAAA5xABAOoQAwDwEAEA8xACAPcQAAD5EAMA/xAEAAURAwAKEQIADhEAABARAAASEQEAFREAABcRAAAZEQAAGxECACARAwAlEQcALxECADURAAA3EQUAPhECAEIRAABFEQAARxEDAE0RAQBQEQMAVRECAFkRAgBdEQwAaxEkAJERBgCZEQMAoBEBAKQRAACmEQUArREEALMRAAC1EQIAuhEBAL0RAQDCEQsA0hEGANoRCQDnEQEA6hEGAPIRAQD2EQEA/BEEAAISCQAOEgAAEBIBABQSAAAWEgEAGhIAABwSAQAgEgAAIhIDACgSAwAtEgIANBIHAD0SAABAEgMARhICAEoSWACkEgMArRIAAK8SAACyEgUAuhIAAMESAADEEgAAxhIAAMgSAADMEgUA1hIAANoSAADhEgAA5RIAAPESAQD0EgQA+hIAAPwSAgAAEwEABhMCAAsTBAAREwAAExMBABsTCgAoE/QAHhQAACAUAQAjFAAAJRQCACwUAQAyFAAANBQAADwUAABAFAEAQxQAAE0USgCZFAoApRRWAP0UAQABFQIABxUCAA0VCgAbFQQAJRUAACcVAAAxFQEANRUAADsVAAA9FQEAQhUBAFEVAABXFQAAXBUCAGIVAABkFQUAbBUpAJcV/ACWFgAAmxYBAJ4WAwCkFgAAphYCAK0WMADfFjoAGxcMACwXAQAxFwAANBcAADgXAgA8FykAZxcSAHsXCgCJF6EALRgAADMYAAA2GAAAORgFAEAYAABEGAAAShgAAEwYAABUGAAAVxgAAGAYAABjGAIAaBgFAG8YAQB0GAAAdhgDAH4YAACCGAAAhhhfAOcYAADqGAAAEBkAABoZAAAhGQEAKxkAAEgZCwBVGQAAWBkEAF4ZBABnGQEAahkBAHEZAAB8GQAAihkAAJAZAQCTGQMAmBkBAJsZAAChGQAApBkEAKoZAACwGQEAtBkCALoZBQDBGQIAxRkCAMkZAADLGQAAzRkAANIZAADbGQAA3hkBAOEZAgDmGQAA6BkAAOwZAQDwGQQA+RkBAP0ZAAAIGgAACho9AEsaAgBSGgAAVBoAAFYaBABdGgAAXxoAAGIaAABpGgIAbhp8AO0aAADyGgEAbhsAAHAbBgB5GwEAfBsFAIQbAACGGwIAihsBAI4bAACRGwEAlxsAAJ8bAAChGwAApBsFAKwbAgC9GwEAwBsBAMkbAADLGwEAzhsAANIbAgDYGwAA2hsBAN4bAADjGwEA5xsBAOsbAgDvGwMA9RsOAAkcAAAPHAEAFhwAABkcBQAiHAAAKhwCAD4cAABGHAEAShwAAE0cAQBQHAAAUxwAAFccAABcHAAAXhwAAGQcAABmHAIAbRwIAHwcCACKHAAAjBwAAJAcAACWHAAAmBwDAKAcAQCjHAEAphwAAKkcBwCyHAAAtBwAALYcAAC5HAMAyxwAAM4cAQDZHAYA5RwCAO0cAADzHAIA9xwAAAIdAAAEHQMACR0FABEdBQAcHQMAIR0AACUdAgArHQAALh0AADodAAA9HQEAQB0BAEMdAwBJHQUAUB0EAFsdAABdHQAAYR0AAGQdAgBqHQAAbh0AAHAdAAByHQEAlR0AAJodAACkHQMAqR0FALAdAACyHQAAtR0AALodAAC+HQAAwB0CAMQdAQDJHQAAyx0BAM4dAQDRHQEA2B0DAN8dAADrHQAA7R0AAPQdBAD+HQEAAx4AAAUeAAAHHgAACh4AAAweAAASHgkAHR4AAB8eAAAiHgAAKR4AACseAAAyHgAAOR4KAEYeAgBLHgIAVR4AAGQeAABmHgAAaR4CAG0eAwBzHgEAdh4AAHoeAAB+HlgA2R4KAOUeAADrHgsA+B4BAPsehwCFHwAAiR94AAUgAAAHIAMAEiAAABUgAAAZIHcAkiAAAJ4gAACkIAUAqyAAAK4gAACwIAAAsiAAALUgAAC8IAAAviAAAMAgeABBIQMASiEAAE0hAABQIQAAUiEBAFchAABfIQAAaCEAAG8hAAB+IQAAiyEBAJ0hAACgIQAAoyEBAK0hAwCyIQQAxSEAANIhAADUIQAA2CEAAN8hAADvIQEA9yEBAPwhFAAVIgEAGCJFAGAiAABiIgAAZCIBAGciAQBqIgQAcCI0AKciBQCuIgkAuSICAL8iAADBIgMAxiIBAMkiBQDTIhIA5yIBAOoiAgDvIgAA8iIDAPciBgAOIwAAHCMCADIjAAA7IwgASCMAAEojCwBXIwIAWyMRAG4jAQBxIw8AgiMXAJwjAACeIwIAoyMMALEjBwC6IwQAwSMCAMUjBQDNIwAAzyMMAOAjAQDkIwEA6iMBAO0jAQDwIwMA9SMAAPcjAAD6IwEA/iMAAAAkAQADJAAABSQCAAkkDAAXJAAAGSQBABwkAAAeJAEAISQAACMkAQAmJAAAKCQBACskAAAvJAAAMyQBADckAAA6JAAAPCQAAD4kAwBDJAAARiQHAE8kAQBSJAUAWSQBAF0kAABfJAIAZCQAAGkkAwBuJAEAcSQAAHMkAQB2JAAAeCQBAHskAAB9JAEAgCQAAIIkAQCFJAAAhyQAAIokEQCdJAYApiQAAKkkEAC7JAgAxSQBAMgkCADSJAAA1CQBANokAADcJAQA5SQBAO4kAgD0JAAA9iQAAAAlAAAPJQMAFyUKACMlAAAlJQgAMCW3AOklAQDsJRgABiYBAAkmCQAVJhEAKCYAAComDwA7JgIAQiYAAFUmAwBcJgYAcCYFAHgmAACBJgAAgyYBAIomBwCYJgoArCYEALImAAC0JgIAuCYEAMAmAwDFJgEAySYAAM8mBADYJgIA3CYGAOYmAgDtJgIA8SYBAPcmDgAJJwEADCcBABAnAQAVJwIAIicDACgnBAAwJwAAMicuAGQnAABpJwEAbicBAHEnAAB3JwEAeicCAIAnAwCLJwIAkicAAJQnAACWJwAAmCcAAJonAACeJwAAoycDAKonJwDTJwkA3ycBAOMnAQDmJwAA6CcAAOsnAQDwJwIA9ScAAPcnAAD6JwEA/ycBAAMoAAAHKAAACigDABIoAAAdKAAAHygBACIoDgA3KAEAOygCAD8oAABBKBYAWigBAF4oDgBuKAEAcSgFAHgoCgCEKAAAhigAAIgoBAA="}],\
["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCHCQQQQQQIFGTPPTTFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCFIKKNNNNNMNNNNCNNNNNNNMNNNNNNNNNNNNNNNNNNNCNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPNMMMMMMNMCNNMMNNNNNNMMNMCMMCNNCMMCMMMMNNNNNMMNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHKFFNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPFPFPPPPIFPPPFPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFPRIIIIIKKKKRGFPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHMNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNHHNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPFPPPPPGIGPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHQQQQHHNNNNNNNNNOOOOJJJEEEEEEEEGPPNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFFEEPFFFKGKFEEEEPPPEPIPPKKKPFPPIIGKEEPIIIPPEPEEEKEEPPEPKKPEPGPPIFEKPPKGEEIEKGPPGFFFPPEEPKFPEPEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOEONNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOONNOONMMNNNNNNNNNNNNCNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHKFINNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPEPPKGGPPFFIKNNNNNNNNNNNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNMNNNNNNNMMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNMNNNNNMNNNNNNNNNNNNNNNNNMMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNKKKKKFFFNHHHHHHHNHHEHNNNNNNNNHHNNHHNNNNNNNNNNNNNHHHNNNNCNNNNNNNMNNNNNHHHNNNNNNNNNMNNHNNNNENHHHNNNNNHNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_data_type_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkIdIter","ChunkedArray","ChunkedArrayLayout","FAST_EXPLODE_LIST","Multi","MultiNoNull","SORTED_ASC","SORTED_DSC","Settings","Single","SingleNoNull","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add_to","agg_list","all","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_slice","apply_values","apply_values_generic","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitand","bitand_assign","bitor","bitor","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","cast","cast","cast_and_apply_in_place","cast_unchecked","checked_div","checked_div_num","chunk_id","chunks","chunks_mut","clear","clone","clone","clone_into","clone_into","collect","comparison","complement","cont_slice","contains","data_views","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","difference","div","div","div","div","divide","drop","drop","drop","drop","dtype","empty","eq","equal","equal","equal_missing","equal_missing","extend","extend","fill_null_with_values","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iterator_par","from_name","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_flags","get_inner","get_object","get_object_unchecked","get_sorted_flag","get_unchecked","group_tuples","group_tuples_perfect","gt","gt","gt_eq","gt_eq","has_validity","head","init","init","init","init_rand","inner_dtype","insert","intersection","intersects","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_no_null_iter","into_series","is_all","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter","iter_names","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt_eq","lt_eq","max","max","max_as_series","mean","mean","median","median_as_series","min","min","min_as_series","min_max","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","none_to_nan","not","not_equal","not_equal","not_equal_missing","not_equal_missing","null_count","object","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_as_series","prune_empty_chunks","quantile","quantile_as_series","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","rem","rem","rem","remainder","remove","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set","set_fast_explode","set_inner_dtype","set_null_count","set_sorted_flag","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","sort","sort_with","std","std_as_series","sub","sub","sub","sub","sub","sub_assign","subtract","sum","sum","sum_as_series","symmetric_difference","tail","take","take","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","to_ndarray","to_owned","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","toggle","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","type_id","union","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_as_series","vzip","vzip","vzip","with_chunk","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_null","append_null","append_null","append_null","append_null","append_option","append_option","append_value","append_value","append_value","append_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finish","finish","finish","finish","finish","finish","finish","finish","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","init","init","init","init","into","into","into","into","list","new","new","new","new","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","from","from","from","from","from","from","from","get_list_builder","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_values_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","new","next","next","next_back","next_back","par","size_hint","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","list","string","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","One","Zero","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","clone","clone_into","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_array","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","slice_sorted_non_null_and_offset","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","descending","descending","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","into","into","maintain_order","maintain_order","multithreaded","multithreaded","new","new","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_order_descending","with_order_descending","with_order_descendings","with_order_reversed","with_order_reversed","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_to_buffer","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_binary","as_borrowed","as_ref","as_ref","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","bitand","bitor","bitor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","call_categorical_merge_operation","cast","cast","cast","cast","cast","cast","cast","cast","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode_and_offsets","explode_and_offsets","field","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_amortized","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_owned","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash_impl","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_enum","is_float","is_float","is_integer","is_integer","is_known","is_list","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","last","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","max","max_as_series","max_as_series","max_as_series","mean","median","median","median_as_series","median_as_series","merge_dtypes","min","min_as_series","min_as_series","min_as_series","mmap_slice","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","n_unique","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","offsets","offsets","par_iter","par_iter","par_iter_indexed","par_iter_indexed","partial_cmp","partial_cmp","precision","precision","quantile","quantile","quantile_as_series","quantile_as_series","rand_bernoulli","remainder","remainder","remainder","remainder","remainder","remainder","remainder","reverse","reverse","reverse","reverse","reverse","reverse","revmap","scale","scale","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","set","set","set","set_fast_explode","set_inner_dtype","set_name","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","std_as_series","std_as_series","strict_cast","string_cache","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","sum","sum_as_series","sum_as_series","sum_as_series","take_unchecked","take_unchecked","take_unchecked","take_unchecked","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string_unchecked","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","try_zip_and_apply_amortized","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unique","unique","unique","value","value","value_unchecked","value_within_range","values_iter","var_as_series","var_as_series","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_nullable_idx","with_validity_typed","zero","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","append","append_null","append_value","arg_sort","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cast","clone","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drain_iter_and_finish","drop","drop","drop","drop","dtype","equal","equal","equal","equal_missing","equal_missing","equal_missing","finish","finish","finish","from","from","from","from","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","gt","gt","gt_eq","gt_eq","gt_eq","init","init","init","init","into","into","into","into","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","max_as_series","merge_map","min_as_series","n_unique","name","new","new","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","uses_lexical_ordering","value_counts","vzip","vzip","vzip","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","build_local","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","find","fmt","fmt","from","from","get","get_categories","get_optional","init","init","into","into","is_global","is_local","len","same_src","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow_mut","borrow_mut","constants","deref","deref","deref","deref_mut","deref_mut","drop","drop","feature_gated","fmt","fmt","fmt","from","from","from","get_warning_function","init","init","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","ahash","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","add","add","add","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","mul","mul","mul","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","rem","rem","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sub","sub","sub","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Float32","Float32","Float64","Float64","Int32","Int32","Int64","Int64","Null","Null","Row","String","String","UInt32","UInt32","UInt64","UInt64","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","finish","fmt","from","from","hash","hash","idx","init","init","into","into","populate_multiple_key_hashmap","try_from","try_from","try_into","try_into","type_id","type_id","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vzip","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","Earliest","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","MeltArgs","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","Null","Null","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","OutOfBounds","Physical","PolarsArray","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","Raise","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","VarAggSeries","VecHash","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocator","as_fd","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","context","context_trace","convert_inner_type","data_type","data_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default_arrays","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","df","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fields","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_str","from_vec","ge","get_mut","get_mut_unchecked","get_names","get_unchecked","gt","has_validity","hash","hash","hash","hash","hash","idx","increment_strong_count","increment_strong_count_in","index_of","indexes_to_usizes","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_mut","interpol","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_raw","into_series","is_empty","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","le","len","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_as_series","max_as_series","median_as_series","metadata","metadata","min_as_series","min_as_series","min_periods","name","ne","negative_to_usize","new","new","new","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","null","null","partial_cmp","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_as_series","prod_as_series","provide","ptr_eq","quantile_as_series","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_as_series","store","string_cache","strong_count","sum_as_series","sum_as_series","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_or_clone","utf8","var_as_series","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","weights","window_size","with_metadata","with_metadata","write","write_vectored","error","error","msg","msg","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","set_global_random_seed","IndexOfSchema","Schema","SchemaRef","__clone_box","borrow","borrow_mut","clone","clone_into","contains","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","get","get_at_index","get_at_index_mut","get_field","get_full","get_names","get_names","hash","index_of","index_of","init","insert_at_index","into","into_iter","is_empty","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","len","merge","new","new_inserting_at_index","remove","rename","set_dtype","set_dtype_at_index","shift_remove","shift_remove_index","to_arrow","to_owned","to_supertype","try_from","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","type_id","vzip","with_capacity","with_column","Ascending","Ascending","ChunkCompare","Descending","Descending","IntoSeries","IsSorted","IsSorted","Not","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_sum_as_series","_sum_as_series","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_sort","arg_sort","arg_unique","arg_unique","arithmetic","array_ref","as_any","as_any_mut","as_any_mut","as_list","as_mut","as_ref","as_ref","as_single_ptr","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitand","bitor","bitor","bitxor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","categorical","checked_div","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","dot","drop","drop","drop","drop_nulls","drop_nulls","dtype","dtype","eq","eq","equal","equal","equal","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_object","get_object","get_object_chunked_unchecked","get_object_chunked_unchecked","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_series","is_sorted_flag","iter","len","limit","limit","list","lt","lt","lt","lt_eq","lt_eq","lt_eq","max","max_as_series","max_as_series","mean","mean","mean_as_series","median","median","median_as_series","median_as_series","min","min_as_series","min_as_series","mul","mul","mul","mul","n_chunks","n_chunks","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_as_series","quantile_as_series","rechunk","rem","rem","rem","rename","rename","reshape","reverse","reverse","rolling_map","rolling_map","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","sort_with","std","std","std_as_series","std_as_series","str","str_value","strict_cast","sub","sub","sub","sub","sum","sum_as_series","tail","take","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","to_arrow","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique","unique_stable","unpack","unstable","var","var","var_as_series","var_as_series","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","add_to","add_to","checked","div","divide","divide","divide","mul","multiply","multiply","multiply","rem","remainder","remainder","remainder","sub","subtract","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div","checked_div_num","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","Arg","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","TrustMyLength","Wrap","__clone_box","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all_equal","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","concat_df","concat_df_unchecked","contains","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","dtypes_to_schema","dtypes_to_supertype","ensure_sorted_arg","eq","equivalent","equivalent","equivalent","flatten","fold_options","from","from","from","from_fallible_iter","from_iter","from_iter","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_par_iter","from_trusted_len_iter_rev","from_trusted_len_iter_rev","get_supertype","get_time_units","handle_casting_failures","hash","init","init","init","into","into","into","into_inner","into_iter","into_vec","into_vec","into_vec","materialize_dyn_int","new","new","next","next_back","rayon","size_hint","slice_slice","split_ca","split_df_as_ref","to_owned","trust_my_length","try_from","try_from","try_from","try_get_supertype","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[39,"polars_core::chunked_array"],[476,"polars_core::chunked_array::arithmetic"],[504,"polars_core::chunked_array::builder"],[608,"polars_core::chunked_array::builder::list"],[762,"polars_core::chunked_array::collect"],[776,"polars_core::chunked_array::float"],[778,"polars_core::chunked_array::from_iterator_par"],[782,"polars_core::chunked_array::iterator"],[819,"polars_core::chunked_array::iterator::par"],[821,"polars_core::chunked_array::object"],[892,"polars_core::chunked_array::object::builder"],[915,"polars_core::chunked_array::object::registry"],[943,"polars_core::chunked_array::ops"],[1064,"polars_core::chunked_array::ops::arity"],[1099,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1101,"polars_core::chunked_array::ops::gather"],[1104,"polars_core::chunked_array::ops::search_sorted"],[1133,"polars_core::chunked_array::ops::sort"],[1140,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1141,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1148,"polars_core::chunked_array::ops::sort::options"],[1222,"polars_core::chunked_array::temporal"],[1223,"polars_core::chunked_array::temporal::conversion"],[1226,"polars_core::config"],[1230,"polars_core::datatypes"],[2620,"polars_core::datatypes::categorical"],[2760,"polars_core::datatypes::categorical::revmap"],[2812,"polars_core::datatypes::categorical::string_cache"],[2831,"polars_core::datatypes::revmap"],[2837,"polars_core::datatypes::string_cache"],[2841,"polars_core::error"],[2902,"polars_core::error::PolarsError"],[2906,"polars_core::error::constants"],[2909,"polars_core::export"],[2917,"polars_core::fmt"],[2947,"polars_core::frame"],[3209,"polars_core::frame::explode"],[3238,"polars_core::frame::group_by"],[3473,"polars_core::frame::group_by::GroupByMethod"],[3474,"polars_core::frame::group_by::GroupsProxy"],[3476,"polars_core::frame::group_by::aggregations"],[3489,"polars_core::frame::group_by::expr"],[3492,"polars_core::frame::row"],[3586,"polars_core::functions"],[3588,"polars_core::hashing"],[3636,"polars_core::prelude"],[4190,"polars_core::prelude::PolarsError"],[4194,"polars_core::prelude::default_arrays"],[4200,"polars_core::prelude::list"],[4223,"polars_core::prelude::null"],[4253,"polars_core::prelude::revmap"],[4259,"polars_core::prelude::slice"],[4262,"polars_core::prelude::string_cache"],[4266,"polars_core::prelude::utf8"],[4270,"polars_core::random"],[4271,"polars_core::schema"],[4343,"polars_core::series"],[4724,"polars_core::series::arithmetic"],[4749,"polars_core::series::arithmetic::checked"],[4757,"polars_core::series::ops"],[4783,"polars_core::series::unstable"],[4807,"polars_core::utils"],[4917,"polars_core::utils::flatten"],[4922,"dyn_clone::sealed"],[4923,"num_traits"],[4924,"num_traits::cast"],[4925,"polars_error"],[4926,"polars_core::series::arithmetic::borrowed"],[4927,"polars_core::frame::group_by::proxy"],[4928,"core::option"],[4929,"core::iter::traits::iterator"],[4930,"core::ops::function"],[4931,"core::marker"],[4932,"polars_core::datatypes::dtype"],[4933,"alloc::string"],[4934,"polars_core::datatypes::aliases"],[4935,"polars_core::series::arithmetic::borrowed::checked"],[4936,"polars_arrow::array"],[4937,"alloc::vec"],[4938,"core::iter::traits::double_ended"],[4939,"core::iter::traits::collect"],[4940,"core::fmt"],[4941,"core::result"],[4942,"polars_utils::iter::fallible"],[4943,"polars_arrow::bitmap::immutable"],[4944,"rayon::iter"],[4945,"polars_arrow::trusted_len"],[4946,"polars_core::datatypes::any_value"],[4947,"polars_core::series::series_trait"],[4948,"polars_core::chunked_array::logical::decimal"],[4949,"core::iter::traits::exact_size"],[4950,"bitflags::iter"],[4951,"core::slice::iter"],[4952,"core::iter::adapters::map"],[4953,"core::convert"],[4954,"core::ops::range"],[4955,"polars_arrow::legacy::kernels::rolling::no_nulls"],[4956,"polars_core::datatypes::field"],[4957,"polars_core::chunked_array::ops::rolling_window"],[4958,"polars_utils::index"],[4959,"ahash::random_state"],[4960,"polars_utils::hashing"],[4961,"ndarray::aliases"],[4962,"either"],[4963,"core::any"],[4964,"polars_core::chunked_array::arithmetic::numeric"],[4965,"polars_core::chunked_array::builder::string"],[4966,"polars_arrow::array::binview"],[4967,"polars_core::chunked_array::builder::boolean"],[4968,"polars_core::chunked_array::builder::null"],[4969,"polars_core::chunked_array::builder::primitive"],[4970,"core::clone"],[4971,"polars_core::chunked_array::builder::list::anonymous"],[4972,"polars_core::chunked_array::builder::list::boolean"],[4973,"polars_core::chunked_array::builder::list::primitive"],[4974,"polars_core::chunked_array::builder::list::binary"],[4975,"polars_core::chunked_array::builder::list::null"],[4976,"alloc::boxed"],[4977,"polars_arrow::array::boolean"],[4978,"polars_arrow::datatypes"],[4979,"polars_arrow::bitmap::utils::iterator"],[4980,"polars_arrow::bitmap::utils::zip_validity"],[4981,"alloc::sync"],[4982,"polars_arrow::offset"],[4983,"core::hash"],[4984,"polars_arrow::array::static_array"],[4985,"core::error"],[4986,"polars_arrow::array::primitive"],[4987,"polars_arrow::legacy::array::slice"],[4988,"polars_row::row"],[4989,"chrono::naive::datetime"],[4990,"alloc::borrow"],[4991,"polars_arrow::array::static_array_collect"],[4992,"bytemuck::zeroable"],[4993,"polars_core::chunked_array::logical::categorical"],[4994,"polars_core::chunked_array::logical::categorical::merge"],[4995,"polars_core::chunked_array::logical"],[4996,"polars_core::datatypes::time_unit"],[4997,"polars_arrow::types"],[4998,"polars_arrow::datatypes::physical_type"],[4999,"core::borrow"],[5000,"smartstring::alias"],[5001,"polars_arrow::pushable"],[5002,"core::cmp"],[5003,"polars_core::chunked_array::logical::categorical::builder"],[5004,"polars_core::chunked_array::logical::categorical::revmap"],[5005,"polars_core::chunked_array::logical::categorical::string_cache"],[5006,"polars_error::warning"],[5007,"polars_core::series::from"],[5008,"polars_utils::aliases"],[5009,"polars_arrow::datatypes::schema"],[5010,"polars_core::chunked_array::ndarray"],[5011,"polars_arrow::record_batch"],[5012,"polars_arrow::array::struct_"],[5013,"polars_utils::idx_vec"],[5014,"rayon::iter::plumbing"],[5015,"polars_core::frame::group_by::into_groups"],[5016,"core::iter::adapters::copied"],[5017,"core::iter::adapters::zip"],[5018,"polars_arrow::legacy::kernels::rolling"],[5019,"polars_utils::float"],[5020,"polars_arrow::types::native"],[5021,"polars_core::frame::group_by::aggregations::agg_list"],[5022,"polars_core::frame::row::av_buffer"],[5023,"polars_arrow::array::binary"],[5024,"polars_core::hashing::identity"],[5025,"hashbrown::map"],[5026,"polars_core::hashing::vector_hasher"],[5027,"core::alloc"],[5028,"std::os::fd::owned"],[5029,"std::os::fd::raw"],[5030,"core::mem::maybe_uninit"],[5031,"polars_arrow::legacy::kernels::time"],[5032,"core::default"],[5033,"polars_arrow::scalar"],[5034,"std::fs"],[5035,"std::io::error"],[5036,"regex::error"],[5037,"alloc::collections"],[5038,"simdutf8::basic"],[5039,"alloc::ffi::c_str"],[5040,"core::ffi::c_str"],[5041,"std::path"],[5042,"std::ffi::os_str"],[5043,"polars_arrow::legacy::array::default_arrays"],[5044,"polars_arrow::buffer::immutable"],[5045,"polars_arrow::array::list"],[5046,"polars_core::named_from"],[5047,"polars_arrow::legacy::array"],[5048,"polars_core::chunked_array::ops::aggregate"],[5049,"polars_core::chunked_array::ops::aggregate::quantile"],[5050,"polars_arrow::legacy::index"],[5051,"core::pin"],[5052,"core::io::borrowed_buf"],[5053,"std::io"],[5054,"polars_core::chunked_array::ops::aggregate::var"],[5055,"alloc::collections::btree::map"],[5056,"polars_arrow::legacy::array::list"],[5057,"polars_arrow::legacy::array::null"],[5058,"polars_arrow::bitmap::mutable"],[5059,"polars_arrow::array::utf8"],[5060,"polars_core::series::iterator"],[5061,"polars_arrow::legacy::utils"],[5062,"polars_arrow::legacy::trusted_len::rev"],[5063,"smartstring::config"],[5064,"smartstring"],[5065,"polars_error::constants"],[5066,"polars_arrow::legacy::prelude"],[5067,"polars_arrow::legacy::array::utf8"],[5068,"polars_core::utils::any_value"],[5069,"polars_core::utils::schema"],[5070,"polars_core::utils::supertype"],[5071,"polars_core::utils::series"]],"if":"`````````````{{}b}``0``````````````{{}d}``````````````````{{{f{c}}h}b{}}0{{{f{{l{j}}}}}d}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}{f{Aj}}}Adn}{{{f{{l{Al}}}}}d}{{}An}{{{f{{l{Al}}}}}{{B`{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{{l{j}}}}{f{Bh}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}42{{{f{Bj{l{c}}}}{f{{l{c}}}}}b{{C`{}{{Bl{Bn}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cd{B`}{{Cb{B`}}}}Cf}}{{{f{{l{j}}}}c}{{l{j}}}{{Cj{Ch}{{Cb{Ad}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Cj{{B`{Ch}}}{{Cb{{B`{c}}}}}}Cf}C`}{{{f{{l{Cl}}}}c}Ad{{Cd{{f{Ad}}}{{Cb{Ad}}}}}}{{{f{{l{Cn}}}}c}Ad{{Cd{{f{Ad}}}{{Cb{Ad}}}}}}{{{f{{l{c}}}}g}{{l{i}}}C`{}{{Cj{B`}{{Cb{{B`{e}}}}}}}C`}{{{l{c}}e}{{l{c}}}n{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{c}}}}{f{Cd}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cd}}}{{l{e}}}nC`}{{{f{Bj{l{c}}}}e}bn{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{D`}}}}c}{{l{D`}}}{{Cj{{f{{Dd{Db}}}}}{{Cb{{f{{Dd{Db}}}}}}}}}}{{{f{{l{Df}}}}c}{{l{Df}}}{{Cj{{f{Bh}}}{{Cb{{f{Bh}}}}}}}}{{{f{{l{c}}}}Dhg}{{l{i}}}C`{}{{Cj{}{{Cb{e}}}}}C`}{{{f{{l{Df}}}}c}{{l{Df}}}{{Cj{{f{Bh}}{f{BjDj}}}}}}{{{f{{l{j}}}}{f{Cd}}}{{Af{Dl}}}}{{{f{{l{c}}}}g{f{Bj{Dd{e}}}}}bn{}{{Cd{B`{f{e}}}{{Cb{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{c}}}}g}{{l{i}}}C`{}{{Cj{}{{Cb{e}}}}}C`}{{{f{{l{c}}}}Dn}E`n}{{{f{{l{c}}}}{f{{Dd{Ad}}}}{f{Eb}}}{{Af{E`}}}n}{{{f{{l{c}}}}}{{Af{E`}}}n}`{{{f{{l{Df}}}}}Ed}{{{f{{l{c}}}}}{{f{{l{c}}}}}C`}{{{f{{l{c}}}}}{{f{Dh}}}C`}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}C`C`{{Cj{{B`{Ch}}B`B`}{{Cb{{B`{Ad}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEf{}}{{AnAn}An}{{{f{BjAn}}An}b}210{{{f{An}}}Db}0321{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bjc}}}{{f{Bje}}}{}{}}00``{{{f{{l{c}}}}{f{Dh}}}{{Af{Ad}}}n}{{{f{{l{c}}}}e}{{l{g}}}n{{Cd{}{{Cb{}}}}Cf}n}1{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Eh}{{{f{{l{c}}}}e}{{Af{Ad}}}EhAb}{{{f{{l{c}}}}}EjC`}{{{f{{l{c}}}}}{{f{{En{El}}}}}C`}{{{f{Bj{l{c}}}}}{{f{Bj{En{El}}}}}C`}{{{f{{l{c}}}}}{{l{c}}}C`}0{{{f{An}}}An}{{{f{c}}{f{Bje}}}b{}{}}0``{AnAn}{{{f{{l{c}}}}}{{Af{{f{Dd}}}}}n}{{{f{An}}An}d}{{{f{{l{c}}}}}{{`{{F`{}{{Bb{{f{Dd}}}}}}}}}n}{{}{{l{c}}}C`}{{}An}{Fb{{f{c}}}{}}00{Fb{{f{Bjc}}}{}}00{{AnAn}An}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bj{l{c}}}}}bC`}{Fbb}00{{{f{{l{c}}}}}{{f{Dh}}}C`};{{{f{An}}{f{An}}}d}{{{f{{l{c}}}}e}FdnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fdn}10{{{f{Bj{l{c}}}}{f{{l{c}}}}}bn}{{{f{BjAn}}c}b{{Ff{}{{Bb{An}}}}}}{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Fd}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}}{{B`{Fb}}}C`}`{{{f{{l{c}}}}{f{BjFh}}}Fjn}{{{f{{l{Al}}}}{f{BjFh}}}Fj}{{{f{An}}{f{BjFh}}}Fj}0000{{{f{{l{c}}}}e}bC`{{Cj{B`}}}}{{{f{{l{j}}}}c}b{{Cj{{B`{Ch}}}}}}{c{{l{e}}}Fl{{C`{}{{Fn{c}}}}}}{cc{}}00{Db{{B`{An}}}}{DbAn}00{{{f{Bh}}c}{{l{e}}}Ff{{C`{}{{Fn{}}}}C`}}{{{f{{l{c}}}}e}{{l{c}}}{{C`{}{{Fn{}}}}C`}Ff}{{{f{Bh}}{En{El}}}{{l{c}}}C`}{{{f{Bh}}{En{El}}Dh}{{l{c}}}C`}{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}0{c{{l{Al}}}{{Ff{}{{Bb{{B`{d}}}}}}}}{c{{l{e}}}{{Ff{}{{Bb{B`}}}}}n}{c{{l{e}}}{{Ff{}{{Bb{{Gf{En{B`{Gd}}}}}}}}}n}{cAn{{Ff{}{{Bb{An}}}}}}{{{f{Bh}}c}{{l{e}}}{{Bf{}{{Bb{B`}}}}}n}43{{{f{Bh}}c}{{l{e}}}{{Bf{}{{Bb{}}}}}n}`{{{f{Bh}}}{{B`{An}}}}{c{{l{e}}}{{Gh{}{{Bb{B`}}}}}n}{{{f{Bh}}{f{Dd}}}{{l{c}}}n}{{{f{Bh}}{f{{Dd{B`}}}}}{{l{c}}}n}{c{{l{e}}}{{Gj{}{{Bb{B`}}}}}n}{{{f{Bh}}En}{{l{c}}}n}{{{f{Bh}}En{B`{Gd}}}{{l{c}}}n}{{{f{Bh}}Fb}{{l{c}}}n}0{{{f{{l{c}}}}Fb}{{l{c}}}C`}{{{f{Bh}}Fb{f{Dh}}}Dl}{{{f{{l{c}}}}Fb}B`C`}{{{f{{l{c}}}}Fb}{{Af{Gl}}}n}{{{f{{l{c}}}}Fb}Gln}{{{f{{l{j}}}}Fb}{{B`{Ad}}}}{{{f{{l{c}}}}}AnC`}{{{f{{l{j}}}}}Ad}{{{f{{l{{Gn{c}}}}}}Fb}{{B`{{f{H`}}}}}Hb}0{{{f{An}}}Hd}7{{{f{{l{c}}}}dd}{{Af{Aj}}}n}{{{f{{l{c}}}}FbdFb}AjEf}{{{f{{l{c}}}}{f{{l{c}}}}}Fdn}{{{f{{l{c}}}}e}FdnAb}01{{{f{{l{c}}}}}dC`}{{{f{{l{c}}}}{B`{Fb}}}{{l{c}}}C`}{{}Fb}00{{FbHf{B`{Hh}}}{{l{c}}}n}{{{f{{l{j}}}}}Dh}{{{f{BjAn}}An}b}{{AnAn}An}{{{f{An}}An}d}{ce{}{}}00{{{l{Hj}}{B`{Fb}}Fb}{{Af{Hl}}}}{{{l{Hj}}{B`{Fb}}Fb}Hl}{{{f{{l{c}}}}}en{}}{Anc{}}{{{f{{l{c}}}}}{{`{HnI`{Ib{}{{Bb{}}}}F`Gj}}}n}{{{l{c}}}AdC`}{{{f{An}}}d}?0{{{f{{l{c}}}}}FdId}000{{{f{{l{c}}}}}FdC`}0{{{f{{l{c}}}}}dC`}{{{f{{l{c}}}}}HdC`}{{{f{{l{c}}}}}{{`{{If{}{{Bb{B`}}}}}}}C`}{{{f{An}}}{{Ih{An}}}}{{{f{An}}}{{Ij{An}}}}{{{f{{l{c}}}}}{{J`{{Il{El}}{In{{f{El}}}{{Cb{{B`{{f{Gd}}}}}}}}}}}C`}`{{{f{{l{c}}}}}B`C`}{{{f{{l{c}}}}}{{B`{Fb}}}C`}{{{f{{l{c}}}}}{{Jb{c}}}C`}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}{{{f{{l{c}}}}}FbC`}{{{f{{l{c}}}}e}{{l{c}}}n{A`Jd}}00{{{f{{l{c}}}}Fb}{{l{c}}}C`}{{{f{{l{c}}}}e}FdnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fdn}10{{{f{{l{c}}}}}B`n}{{{f{{l{Al}}}}}{{B`{d}}}}{{{f{{l{c}}}}}Adn}{{{f{{l{c}}}}}{{B`{Jf}}}n}{{{f{{l{Al}}}}}{{B`{Jf}}}}{{{f{{l{c}}}}}{{B`{Jf}}}Ef}{{{f{{l{c}}}}}AdEf}564{{{f{{l{c}}}}}{{B`{Gf}}}n}{{{f{Bh}}{f{Dd}}}{{l{c}}}n}{{{f{Bh}}{f{{Dd{Db}}}}FbFb}{{l{Al}}}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}{{Af{Fb}}}n}{{{f{{l{c}}}}}{{f{Bh}}}C`}{{{f{Bh}}c}{{l{Jh}}}{{Jj{{Dd{{B`{Hh}}}}}}}}{{{f{Bh}}c}{{l{Cn}}}{{Jj{{Dd{{B`{Jf}}}}}}}}{{{f{Bh}}c}{{l{Jl}}}{{Jj{{Dd{Jn}}}}}}{{{f{Bh}}c}{{l{D`}}}{{Jj{{Dd{{B`{{En{Db}}}}}}}}}}{{{f{Bh}}c}{{l{Jl}}}{{Jj{{Dd{{B`{Jn}}}}}}}}{{{f{Bh}}{Kb{K`}}}{{l{Kd}}}}{{{f{Bh}}c}{{l{Kd}}}{{Jj{{Dd{K`}}}}}}{{{f{Bh}}c}{{l{Cn}}}{{Jj{{Dd{Jf}}}}}}{{{f{Bh}}c}{{l{D`}}}{{Jj{{Dd{{En{Db}}}}}}}}{{{f{Bh}}c}{{l{Cl}}}{{Jj{{Dd{Hf}}}}}}{{{f{Bh}}{Kb{Kf}}}{{l{Kh}}}}{{{f{Bh}}c}{{l{Kh}}}{{Jj{{Dd{Kf}}}}}}{{{f{Bh}}c}{{l{Kh}}}{{Jj{{Dd{{B`{Kf}}}}}}}}{{{f{Bh}}c}{{l{Al}}}{{Jj{{Dd{d}}}}}}{{{f{Bh}}c}{{l{Al}}}{{Jj{{Dd{{B`{d}}}}}}}}{{{f{Bh}}{Kb{Hh}}}{{l{Jh}}}}{{{f{Bh}}c}{{l{Kd}}}{{Jj{{Dd{{B`{K`}}}}}}}}{{{f{Bh}}c}{{l{Cl}}}{{Jj{{Dd{{B`{Hf}}}}}}}}{{{f{Bh}}c}{{l{Jh}}}{{Jj{{Dd{Hh}}}}}}{{{f{Bh}}c}{{l{Df}}}{{Jj{{Dd{{B`{Dj}}}}}}}}{{{f{Bh}}c}{{l{Df}}}{{Jj{{Dd{Dj}}}}}}{{{f{Bh}}{Kb{Jn}}}{{l{Jl}}}}{{{f{Bh}}}{{l{{Gn{c}}}}}Hb}{{{f{{l{c}}}}FbFb}{{l{c}}}n}{{{f{Bh}}{En{c}}}{{l{{Gn{c}}}}}Hb}{{{f{Bh}}{En{c}}Gd}{{l{{Gn{c}}}}}Hb}{{{f{Bh}}En}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Id}{AnAn}{{{f{{l{c}}}}e}FdnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fdn}01{{{f{{l{c}}}}}FbC`}``{{{f{{l{Df}}}}}{{`{{Kj{}{{Bb{{B`{{f{Bh}}}}}}}}}}}}{{{f{{l{j}}}}}{{`{{Kj{}{{Bb{{B`{Ad}}}}}}}}}}{{{f{{l{Df}}}}}{{`{{Kl{}{{Bb{{B`{{f{Bh}}}}}}}}}}}}{{{f{Bj{l{j}}}}}{{`{{Kl{}{{Bb{{B`{Ad}}}}}}}}}}{{{f{{l{c}}}}}Adn}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}JfKn}{{Af{{B`{Jf}}}}}Ef}{{{f{{l{c}}}}JfKn}{{Af{Ad}}}Ef}{{{f{Bh}}FbJf}{{Af{{l{Al}}}}}}{{{f{Bh}}FbJfJf}{{Af{{l{c}}}}}n}{{{f{Bh}}Fb}{{l{c}}}n}{{{f{Bh}}FbJfJf}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}C`}{{{f{{l{c}}}}}{{f{L`}}}C`}{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{BjAn}}An}b}{{{f{Bj{l{c}}}}{f{Bh}}}bC`}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cd}}Lb}{{Af{Ad}}}n}{{{f{{l{c}}}}Fbe}{{Af{{l{c}}}}}Id{{Cj{{f{Bj{l{c}}}}}{{Cb{B`}}}}}}{{{f{{l{c}}}}Jfdd{B`{Hh}}}{{Af{{l{c}}}}}C`}{{{f{{l{c}}}}Fbdd{B`{Hh}}}{{Af{{l{c}}}}}C`}{{{f{{l{c}}}}eB`}{{Af{{l{c}}}}}n{{Ff{}{{Bb{Ld}}}}}}{{{f{{l{c}}}}eg}{{Af{{l{c}}}}}n{{Ff{}{{Bb{Ld}}}}}{{Cd{B`}{{Cb{B`}}}}}}{{{f{{l{c}}}}{f{Fd}}B`}{{Af{{l{c}}}}}n}{{{f{BjAn}}And}b}{{{f{Bj{l{j}}}}}b}{{{f{Bj{l{j}}}}Dh}b}{{{f{Bj{l{c}}}}Ld}bC`}{{{f{Bj{l{c}}}}Hd}bC`}{{{f{BjAn}}Hd}b}{{{f{{l{c}}}}Jn}{{l{c}}}n}{{{f{{l{c}}}}JnB`}{{l{c}}}n}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}JnFb}{{l{c}}}C`}{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{c}}}}Dn}{{l{c}}}n}{{{f{{l{c}}}}Db}{{B`{Jf}}}n}{{{f{{l{c}}}}Db}AdEf}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{AnAn}An}{{{f{BjAn}}An}b}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}B`n}{{{f{{l{Al}}}}}{{B`{Ld}}}}{{{f{{l{c}}}}}Lfn}5{{{f{{l{c}}}}{B`{Fb}}}{{l{c}}}C`}{{{f{{l{c}}}}{f{e}}}{{Af{{l{c}}}}}C`{{Jj{{Dd{Ld}}}}Lh}}{{{f{{l{c}}}}{f{E`}}}{{Af{{l{c}}}}}C`}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{C`{}{{Lj{Bn}}}}C`}{{Jj{{Dd{Ld}}}}Lh}}{{{f{{l{c}}}}{f{E`}}}{{l{c}}}{{C`{}{{Lj{Bn}}}}C`}}`{{{f{{l{c}}}}dLl}{{En{{En{Ln}}}}}C`}{{{f{{l{c}}}}}{{l{c}}}Id}{{{f{{l{Df}}}}Fb}{{Af{Ad}}}}{{{f{Bj{l{j}}}}Dh}b}{{{f{{l{c}}}}}{{Af{M`}}}n}{{{f{{l{j}}}}}{{Af{Mb}}}}{{{f{c}}}e{}{}}0{{{f{{l{D`}}}}}Md}{{{f{{l{c}}}}}{{En{B`}}}n}{{{f{{l{c}}}}}{{Mf{En{En{B`}}}}}n}{{{f{BjAn}}An}b}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}{{{f{{l{j}}}}c}{{Af{{l{j}}}}}{{Cj{Ch}{{Cb{{Af{Ad}}}}}}}}{{{f{{l{j}}}}e}{{Af{{l{g}}}}}{}{{Cj{{B`{Ch}}}{{Cb{{Af{{B`{c}}}}}}}}Cf}C`}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}C`{}{}{{Cj{B`}{{Cb{{G`{{B`{e}}g}}}}}}Cf}C`}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}C`{}{}{{Cj{}{{Cb{{G`{eg}}}}}}}C`}{c{{G`{e}}}{}{}}00{{{f{Bh}}g}{{G`{{l{i}}e}}}Fl{}{{Ff{}{{Bb{{G`{ce}}}}}}}{{C`{}{{Fn{c}}}}C`}}111{{{f{{l{j}}}}{f{{l{c}}}}e}{{Af{{l{j}}}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{Af{{B`{Ad}}}}}}}}}}{{{f{c}}}Mh{}}00{{AnAn}An}{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{{f{{l{c}}}}}}}C`}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}Fb}{}C`}{{{f{{l{c}}}}Db}{{B`{Jf}}}n}{{{f{{l{c}}}}Db}AdEf}{ce{}{}}00{{{f{Bh}}c}{{l{e}}}Fl{{C`{}{{Fn{c}}}}C`}}{{{f{{l{c}}}}{En{El}}}{{l{c}}}C`}{{{l{c}}{f{Bh}}}{{l{c}}}C`}{{{f{{Dd{Mj}}}}e}c{}{{Ml{{f{E`}}}{{Cb{c}}}}}}{{{f{{l{c}}}}Hd}{{l{c}}}C`}{{{l{c}}}en{}}{{{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}2310{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}452301452376542301543210{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{B`{Ad}}}}}}}}{{{f{{l{c}}}}{f{Fd}}{f{{l{c}}}}}{{Af{{l{c}}}}}C`}````{{{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}}e{}{}{}}{{{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}c}e{}{}{}}{{c{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}}e{}{}{}}{{{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}}g{}{}{}}{{{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}c}g{}{}{}}{{c{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}}g{}{}{}}{{{Nd{}{{Mn{c}}{N`{e}}{Nb{g}}}}}e{}{}{}}65654654650654654````````{{{f{c}}h}b{}}000{{{f{BjNf}}}b}{{{f{Bj{Nh{c}}}}}b{NjLh}}{{{f{BjNl}}}b}{{{f{BjNn}}}b}{{{f{Bj{O`{c}}}}}bn}{{{f{Bj{Nh{c}}}}{B`{e}}}b{NjLh}{{Jj{c}}}}{{{f{BjNf}}{B`{c}}}b{}}{{{f{BjNf}}c}b{}}{{{f{Bj{Nh{c}}}}e}b{NjLh}{{Jj{c}}}}{{{f{BjNl}}d}b}5{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bjc}}}{{f{Bje}}}{}{}}000{{{f{{Nh{c}}}}}{{Nh{c}}}{NjLh}}{{{f{Nl}}}Nl}{{{f{Nn}}}Nn}{{{f{{O`{c}}}}}{{O`{c}}}{nOb}}{{{f{c}}{f{Bje}}}b{}{}}000{Fb{{f{c}}}{}}000{Fb{{f{Bjc}}}{}}000{Fbb}000{Nf{{l{c}}}C`}{{{Nh{{Dd{Db}}}}}Ed}{{{Nh{Bh}}}Md}{OdMd}{OfEd}{NlFd}`{{{O`{c}}}{{l{c}}}n}{cc{}}000{{{f{Bh}}e}Oh{}{{Bf{}{{Bb{{B`{c}}}}}}}}{{{f{Bh}}e}Oh{}{{Bf{}{{Bb{c}}}}}}{{{f{Bh}}{f{{Dd{c}}}}}Oh{}}{{{f{Bh}}{f{{Dd{{B`{c}}}}}}}Oh{}}{{}Fb}000{ce{}{}}000`{{{f{Bh}}Fb}{{Nh{c}}}{NjLh}}{{{f{Bh}}Fb}Nl}{{{f{Bh}}Fb}Nn}{{{f{Bh}}Fb}{{O`{c}}}n}{{{f{BjNf}}}b}{{{f{BjNl}}}b}{{{f{BjNn}}}b}{{{f{Bj{O`{c}}}}}bn}{{{f{c}}}e{}{}}000{c{{G`{e}}}{}{}}0000000{{{f{c}}}Mh{}}000;;;;````````{{{f{BjOj}}{f{Fl}}}b}{{{f{BjOj}}}b}{{{f{BjOl}}}b}{{{f{BjOn}}c}b{{Bf{}{{Bb{{B`{d}}}}}}Gj}}{{{f{Bj{A@`{c}}}}e}bn{{Bf{}{{Bb{B`}}}}Gj}}{{{f{Bj{A@`{c}}}}e}bn{{Bf{}{{Bb{}}}}Gj}}{{{f{BjA@b}}}b}54{{{f{BjA@d}}}b}{{{f{BjA@f}}}b}{{{f{BjOn}}}b}{{{f{BjA@h}}}b}{{{f{Bj{A@`{c}}}}}bn}{{{f{BjOj}}{B`{{f{Fl}}}}}b}{{{f{BjOj}}{B`{{f{Ad}}}}}{{Af{b}}}}{{{f{BjA@b}}{B`{{f{Ad}}}}}{{Af{b}}}}{{{f{Bj{A@`{c}}}}{B`{{f{Dd}}}}}bn}{{{f{BjA@b}}{f{Ad}}}{{Af{b}}}}{{{f{BjOj}}{f{Ad}}}{{Af{b}}}}{{{f{BjOl}}{f{Ad}}}{{Af{b}}}}{{{f{BjA@d}}{f{Ad}}}{{Af{b}}}}{{{f{BjA@f}}{f{Ad}}}{{Af{b}}}}{{{f{BjOn}}{f{Ad}}}{{Af{b}}}}{{{f{BjA@h}}{f{Ad}}}{{Af{b}}}}{{{f{Bj{A@`{c}}}}{f{Ad}}}{{Af{b}}}n}{{{f{Bj{A@`{c}}}}{f{Dd}}}bn}{{{f{BjA@d}}c}b{{Bf{}{{Bb{{B`{{f{Bh}}}}}}}}Gj}}{{{f{BjA@f}}c}b{{Bf{}{{Bb{{B`{{f{{Dd{Db}}}}}}}}}}Gj}}{{{f{BjA@d}}c}b{{Bf{}{{Bb{{f{Bh}}}}}}}}{{{f{BjA@f}}c}b{{Bf{}{{Bb{{f{{Dd{Db}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bjc}}}{{f{Bje}}}{}{}}000000`{{}Oj}{{}Ol}{Fb{{f{c}}}{}}000000{Fb{{f{Bjc}}}{}}000000{Fbb}000000{{{f{A@d}}}d}{{{f{A@f}}}d}{{{f{On}}}d}{{{f{{A@`{c}}}}}dn}{{{f{A@b}}}d}{{{f{A@d}}}{{f{L`}}}}{{{f{A@f}}}{{f{L`}}}}{{{f{On}}}{{f{L`}}}}{{{f{{A@`{c}}}}}{{f{L`}}}n}{{{f{A@b}}}{{f{L`}}}}{{{f{BjOj}}}Dl}{{{f{BjOl}}}Dl}{{{f{BjA@h}}}Dl}{{{f{BjA@b}}}Dl}{cc{}}000000{{{f{Dh}}FbFb{f{Bh}}}{{Af{{A@j{A@b}}}}}}{{}Fb}000000{{{f{BjA@d}}}El}{{{f{BjA@f}}}El}{{{f{BjOn}}}El}{{{f{Bj{A@`{c}}}}}Eln}{{{f{BjA@b}}}El}{ce{}{}}000000{{{f{Bh}}Fb{B`{Dh}}}Oj}{{{f{Bh}}Fb{B`{Dh}}}Ol}{{{f{Bh}}FbFb}A@d}{{{f{Bh}}FbFb}A@f}{{{f{Bh}}FbFb}On}{{{f{Bh}}Fb}A@h}{{{f{Bh}}FbFbDh}{{A@`{c}}}n}{{{f{Bh}}FbFbDhDh}{{A@`{c}}}n}{c{{G`{e}}}{}{}}0000000000000{{{f{c}}}Mh{}}000000:::::::``{{A@l{f{Bh}}}{{l{c}}}C`}{{A@n{f{{l{c}}}}}{{l{c}}}C`}10{{A@n{f{Bh}}Dh}{{l{c}}}C`}0{{A@l{f{Bh}}}{{G`{{l{c}}e}}}C`{}}{{A@n{f{{l{c}}}}}{{G`{{l{c}}e}}}C`{}}10{{A@n{f{Bh}}Dh}{{G`{{l{c}}e}}}C`{}}0`{AA`AA`}``{{AAb{f{Bh}}Dh}e{}{{AAd{c}}}}{{e{f{Bh}}Dh}AAd{}{{Gh{}{{Bb{c}}}}}}```{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bjc}}}{{f{Bje}}}{}{}}0{Fb{{f{c}}}{}}0{Fb{{f{Bjc}}}{}}0{Fbb}0{cc{}}0{{}Fb}0{ce{}{}}000{{{f{AAf}}}AAh}{{{f{BjAAh}}}{{B`{c}}}{}}{{{f{Bj{AAj{c}}}}}{{B`{e}}}Bf{}}1{{{f{Bj{AAj{c}}}}}{{B`{e}}}F`{}}`{{{f{AAh}}}{{Gf{Fb{B`{Fb}}}}}}{{{f{{AAj{c}}}}}{{Gf{Fb{B`{Fb}}}}}Bf}{c{{G`{e}}}{}{}}000{{{f{c}}}Mh{}}088``````{{{f{c}}h}b{}}{e{{AAl{c}}}Hb{{Ff{}{{Bb{{B`{{f{c}}}}}}}}}}{e{{AAl{c}}}Hb{{Ff{}{{Bb{{f{c}}}}}}}}{{AAne}g{}{{Ff{}{{Bb{c}}}}}{}}0{{{f{H`}}}{{f{AB`}}}}{{{f{{AAl{c}}}}}{{f{AB`}}}Hb}{{{f{Bj{AAl{c}}}}}{{f{BjAB`}}}Hb}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}`{{{f{{AAl{c}}}}}{{AAl{c}}}{HbOb}}{{{f{c}}{f{Bje}}}b{}{}}{{{f{{AAl{c}}}}}{{f{AAn}}}Hb}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{{f{H`}}}}{f{{f{H`}}}}}d}{{{f{H`}}{f{H`}}}d}{{{f{{AAl{c}}}}{f{BjFh}}}Fj{HbABb}}{cc{}}{{FbAAn}{{AAl{c}}}Hb}{{{f{{AAl{c}}}}Fb}{{B`{{f{c}}}}}Hb}{{}AAn}{{{f{Gd}}{f{{AAl{c}}}}{f{{AAl{c}}}}}{{AAl{c}}}Hb}{{AAn{f{Gd}}cc}{{AAl{e}}}{}Hb}{{{f{Gd}}{f{{AAl{c}}}}e}{{AAl{c}}}Hb{}}{{{f{Gd}}c{f{{AAl{e}}}}}{{AAl{e}}}{}Hb}{{}Fb}{ce{}{}}{{{f{{AAl{c}}}}}eHb{}}{{{f{{AAl{c}}}}Fb}dHb}0{{{f{c}}Fb}d{}}{{{f{{AAl{c}}}}}{{ABh{{f{c}}{ABd{c}}ABf}}}Hb}{{{f{{AAl{c}}}}}{{ABh{egABf}}}Hb{}{}}{{{f{{AAl{c}}}}}FbHb}0`{{{f{Bj{AAl{c}}}}{B`{Gd}}}bHb}{{{f{Bj{AAl{c}}}}FbFb}bHb}{{{f{c}}FbFb}e{}{}}01{{{f{H`}}}{{A@j{H`}}}}{{{f{{AAl{c}}}}}{{A@j{Fl}}}Hb}{{{f{c}}}e{}{}}{g{{G`{{AAl{c}}e}}}Hb{}{{Ff{}{{Bb{{G`{{B`{{f{c}}}}e}}}}}}}}{g{{G`{{AAl{c}}e}}}Hb{}{{Ff{}{{Bb{{G`{{f{c}}e}}}}}}}}{{AAng}{{G`{ie}}}{}{}{{Ff{}{{Bb{{G`{ce}}}}}}}{}}0{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}{{{f{H`}}}{{f{Bh}}}}{{}{{f{Bh}}}}{{{f{{AAl{c}}}}}{{B`{{f{Gd}}}}}Hb}{{{f{{AAl{c}}}}Fb}{{f{c}}}Hb}0{{{f{{AAl{c}}}}Fb}eHb{}}{{{f{{AAl{c}}}}}{{f{{ABj{{En{c}}}}}}}Hb}{{{f{{AAl{c}}}}}{{ABd{c}}}Hb}{{{f{{AAl{c}}}}}eHb{}}{ce{}{}}{{{f{{AAl{c}}}}{B`{Gd}}}{{A@j{Fl}}}Hb}{{{AAl{c}}{B`{Gd}}}{{AAl{c}}}Hb}0`{{{f{Bj{ABl{c}}}}}bHb}0{{{f{Bj{ABl{c}}}}{B`{c}}}bHb}{{{f{Bj{ABl{c}}}}{f{AB`}}}bHb}{{{f{Bj{ABl{c}}}}c}bHb}{{{f{Bj{ABl{c}}}}{f{AB`}}}{{Af{b}}}Hb}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{}{{ABl{c}}}Hb}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{ABl{c}}}{{ABn{c}}}Hb}{cc{}}{{}Fb}{ce{}{}}{{{f{Bh}}Fb}{{ABl{c}}}Hb}{{{f{Bj{ABl{c}}}}}AdHb}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}4````{{{f{BjAC`}}}b}{{{f{BjAC`}}{B`{{f{AB`}}}}}b}{{{f{BjAC`}}{f{AB`}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}`?>={{{f{ACb}}{f{BjFh}}}Fj}<{{{f{Bh}}Fb}{{A@j{AC`}}}}{{}ACd}{{}AAn}>={{}d}`{{ACfACdAAn}b}{{{f{BjAC`}}}Ad}==<{ce{}{}}````````````````````````````````````````{{{f{c}}h}b{}}{{{f{{ACj{}{{ACh{c}}}}}}g}{{ACj{}{{ACh{c}}}}}{}{}{{Cd{{B`{e}}}{{Cb{{B`{c}}}}}}Cf}}{{{f{ACl}}{f{Cd}}}ACl}{{{f{ACl}}{f{Cd}}}{{l{c}}}C`}{{{f{{ACj{}{{ACh{c}}}}}}i{f{Bj{Dd{g}}}}}b{}{}{}{{Cd{{B`{e}}{f{g}}}{{Cb{g}}}}}}{{{f{{ACj{}{{ACh{c}}}}}}g}{{ACj{}{{ACh{c}}}}}{}{}{{Cd{e}{{Cb{c}}}}Cf}}{{{f{ACn}}Dn}E`}{{{f{ACn}}{f{{Dd{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{AD`}}}{{Af{E`}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{ADb}}{f{Dh}}}{{Af{Ad}}}}0{{{f{ADd}}}ADd}{{{f{c}}{f{Bje}}}b{}{}}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{ADd}}{f{ADd}}}d}{{{f{{ADf{}{{Bb{c}}}}}}e}c{}{}}0{{{f{ADh}}}{{Af{Ad}}}}{{{f{ADh}}}{{Af{{Gf{Ad{ADj{Jn}}}}}}}}`{{{f{ADl}}c}{{Af{ADl}}}{}}{{{f{ADn}}{f{Fd}}}{{Af{{l{c}}}}}C`}`{{{f{ADd}}{f{BjFh}}}Fj}{cc{}}`{{{f{Bh}}cFb}AE`{}}{{{f{Bh}}Fb}AEb}`{{{f{AEd}}Fb}{{Af{Gl}}}}{{{f{AEd}}Fb}Gl}::{{{f{ADd}}{f{Bjc}}}bAEf}{{}Fb}{ce{}{}}{{{f{AEh}}}{{Af{Fd}}}}{{{f{AEj}}}{{Af{Fd}}}}??{{{f{AEl}}}{{B`{c}}}{}}{{{f{AEl}}}{{B`{Jf}}}}{{{f{AEn}}}{{B`{c}}}{}}2{{{f{AEl}}}{{B`{{Gf{cc}}}}}{}}{{{f{AD`}}}{{Af{Fb}}}}{{{f{AF`}}FbFb}{{l{c}}}C`}{{{f{{ADf{}{{Bb{c}}}}}}e}c{}{}}0{{{f{ADh}}}{{Af{{ADj{Jn}}}}}}{{{f{AEn}}JfKn}{{Af{{B`{c}}}}}{}}{{{f{AFb}}}AFb}{{{f{AFd}}{f{Cd}}Lb}{{Af{Ad}}}}{{{f{AFf}}c{B`{e}}}{{Af{AFf}}}{{Ff{}{{Bb{Ld}}}}}{}}{{{f{AFf}}ci}{{Af{AFf}}}{{Ff{}{{Bb{Ld}}}}}{}{}{{Cd{{B`{e}}}{{Cb{{B`{g}}}}}}}}`{{{f{AFf}}{f{Fd}}{B`{c}}}{{Af{AFf}}}{}}{{{f{AFh}}Jn}{{l{c}}}C`}{{{f{AFj}}Jnc}{{l{e}}}{}C`}`{{{f{ACn}}d}{{l{c}}}C`}{{{f{ACn}}Dn}{{l{c}}}C`}{{{f{AFl}}Db}{{B`{Jf}}}}{{{f{AEl}}}{{B`{c}}}{}}{{{f{AFn}}{f{c}}}{{Af{AFn}}}Lh}{{{f{AG`}}{f{c}}}AG`Lh}{{{f{AGb}}}{{En{{f{{Dd{Db}}}}}}}}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}{{{f{AD`}}}{{Af{AD`}}}}8{ce{}{}}`{{{f{AGd}}{f{Fd}}{f{{l{c}}}}}{{Af{{l{c}}}}}C`}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}C`C`{{Cd{ff}{{Cb{}}}}}{{Cd{f}{{Cb{}}}}}{{Cd{f}{{Cb{}}}}}C`}{{{l{c}}{l{e}}gik}{{l{m}}}C`C`{{Cd{}{{Cb{}}}}}{{Cd{}{{Cb{}}}}}{{Cd{}{{Cb{}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}C`C`Fl{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}C`C`{{AGf{B`B`}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}g}bC`C`{{Cj{B`B`}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}C`C`{}{{Cj{}{{Cb{g}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bh}}}{{l{k}}}C`C`{FlAGh}{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bh}}}{{l{k}}}C`C`Fl{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Fn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}C`C`Fl{{Cj{}{{Cb{g}}}}}{{C`{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Af{Ad}}}C`C`{{Cj{ff}{{Cb{{A@j{Fl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}C`C`{{Cj{ff}{{Cb{{A@j{Fl}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{G`{{l{m}}i}}}C`C`{}{}{{Cj{B`B`}{{Cb{{G`{{B`{g}}i}}}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}C`C`C`{{AGj{B`B`B`}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}k}{{G`{{l{m}}i}}}C`C`FlAGl{{Cj{ff}{{Cb{{G`{gi}}}}}}}{{C`{}{{Fn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bh}}}{{G`{{l{m}}i}}}C`C`FlAGl{{Cj{ff}{{Cb{{G`{gi}}}}}}}{{C`{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{G`{{l{c}}g}}}C`C`AGl{{Cj{ff}{{Cb{{G`{{A@j{Fl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{G`{{l{o}}k}}}C`C`C`{}{}{{Cj{B`B`B`}{{Cb{{G`{{B`{i}}k}}}}}}}C`}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}C`{}{}{{Cj{B`}{{Cb{{G`{{B`{e}}g}}}}}}}C`}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}C`{}{}{{Cj{}{{Cb{{G`{eg}}}}}}}C`}{{{f{{l{c}}}}i}{{G`{{l{k}}g}}}C`{FlAGh}AGl{{Cj{f}{{Cb{{G`{eg}}}}}}}{{C`{}{{Fn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}C`{{AGn{B`}}}C`}{{{f{{l{c}}}}e}{{l{g}}}C`AGnC`}{{{f{{l{c}}}}g}{{l{i}}}C`Fl{{Cj{f}{{Cb{e}}}}}{{C`{}{{Fn{e}}}}}}{{{l{c}}g}{{l{i}}}C`Fl{{Cj{}{{Cb{e}}}}}{{C`{}{{Fn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}C`{FlAGh}{{Cj{f}{{Cb{e}}}}}{{C`{}{{Fn{e}}}}}}0{{{f{{l{c}}}}}Fbn}0{{HdHd}Hd}{{{f{E`}}Ld}{{Af{b}}}}{{{f{{AH`{Ld}}}}Ld}{{Af{b}}}}````{{{f{c}}h}b{}}{{AHb{f{c}}d}LdAGh}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{AHb}}}AHb}{{{f{c}}{f{Bje}}}b{}{}}{{}AHb}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{AHb}}{f{AHb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AHb}}{f{BjFh}}}Fj}{cc{}}{{{f{AHb}}{f{Bjc}}}bAEf}{{}Fb}{ce{}{}}{{{f{{l{c}}}}}{{Gf{Fb{l{c}}}}}C`}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}4`{{Fb{f{Bj{En{d}}}}}b}```{{{f{AHd}}FbFb}AHd}0{{Fb{f{{Dd{Ad}}}}{f{BjEb}}}{{Af{{AHf{E`}}}}}}{{{f{{Dd{Ad}}}}{f{{Dd{d}}}}d}{{Af{AHh}}}}{{{f{Bh}}{f{{Dd{Ad}}}}{f{{Dd{d}}}}d}{{Af{AHj}}}}{{{f{Bh}}{f{{Dd{Ad}}}}}{{Af{AHj}}}}{{{f{Ad}}}{{Af{El}}}}{{{f{{Dd{Ad}}}}}{{Af{AHh}}}}{{{f{{Dd{Ad}}}}}{{Af{AHj}}}}0```{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bjc}}}{{f{Bje}}}{}{}}0{{{f{Dn}}}Dn}{{{f{Eb}}}Eb}{{{f{c}}{f{Bje}}}b{}{}}0{{}Dn}{{}Eb}{Fb{{f{c}}}{}}0{Fb{{f{Bjc}}}{}}0``{Fbb}0{{{f{Dn}}{f{Dn}}}d}{{{f{Eb}}{f{Eb}}}d}{{{f{c}}{f{e}}}d{}{}}00000{{{f{Dn}}{f{BjFh}}}Fj}{{{f{Eb}}{f{BjFh}}}Fj}{{{f{Eb}}}Dn}{cc{}}{{{f{Dn}}}Eb}1{{{f{Dn}}{f{Bjc}}}bAEf}{{{f{Eb}}{f{Bjc}}}bAEf}{{}Fb}0{ce{}{}}0````{{}Dn}{{}Eb}``{{{f{AHd}}FbFb}AHd}0{{{f{c}}}e{}{}}0{c{{G`{e}}}{}{}}000{{{f{c}}}Mh{}}066{{Dnd}Dn}{{Ebd}Eb}101010{{Ebc}Eb{{Ff{}{{Bb{d}}}}}}{DnDn}{EbEb}`{AHlJn}00{{}d}>>0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000000000000000000000{{{f{Dl}}}d}{{{f{Hl}}{f{Hl}}}c{}}{{{f{Fd}}{f{Fd}}}c{}}{{FdFd}c{}}{{MdMd}c{}}{{{f{Md}}{f{Md}}}c{}}{{{f{Md}}{f{Bh}}}c{}}{{{f{Ed}}{f{{Dd{Db}}}}}c{}}{{EdEd}c{}}{{{f{Ed}}{f{Ed}}}c{}}{{{f{Gl}}{f{Gl}}}Gl}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHn}}}{}}000000{{{f{Md}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ed}}{f{Ad}}}{{Af{Ad}}}}{{{f{Fd}}{f{Ad}}}{{Af{Ad}}}}{{{f{Dl}}{f{Aj}}}Ad}{{{f{Fd}}{f{Aj}}}Ad}{{{f{Md}}{f{Aj}}}Ad}{{{f{Ed}}{f{Aj}}}Ad}{{{f{{ABn{c}}}}{f{Aj}}}AdHb}{{{f{Fd}}}d}{{{f{Fd}}}{{B`{d}}}}{{{f{Dl}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{Dl}}{f{Bh}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{Dl}}c}Dl{{Cd{{B`{Ad}}}{{Cb{{B`{Ad}}}}}}Cf}}{{{f{Fd}}c}Fd{{Cd{{B`{d}}}{{Cb{{B`{d}}}}}}Cf}}{{{f{Md}}c}Md{{Cd{{B`{{f{Bh}}}}}{{Cb{{B`{{AI`{Bh}}}}}}}}Cf}}{{{f{Ed}}c}Ed{{Cd{{B`{{f{{Dd{Db}}}}}}}{{Cb{{B`{{AI`{{Dd{Db}}}}}}}}}}Cf}}{{{f{{ABn{c}}}}e}{{ABn{c}}}Hb{{Cd{{B`{{f{c}}}}}{{Cb{{B`{c}}}}}}Cf}}{{{f{Dl}}c}Dl{{Cj{Ch}{{Cb{Ad}}}}}}{{{f{Dl}}e}{{l{g}}}{}{{Cj{{B`{Ch}}}{{Cb{{B`{c}}}}}}Cf}C`}{{{f{AIb}}c}Ad{{Cd{{f{Ad}}}{{Cb{Ad}}}}}}{{{f{AId}}c}Ad{{Cd{{f{Ad}}}{{Cb{Ad}}}}}}{{{f{Fd}}{f{Cd}}}Fd}{{{f{Md}}{f{Cd}}}Md}{{{f{Ed}}{f{Cd}}}Ed}{{{f{Fd}}{f{Cd}}}{{l{c}}}C`}{{{f{Md}}{f{Cd}}}{{l{c}}}C`}{{{f{Ed}}{f{Cd}}}{{l{c}}}C`}{{{f{Md}}c}Md{{Cj{{f{Bh}}}{{Cb{{f{Bh}}}}}}}}{{{f{Ed}}c}Ed{{Cj{{f{{Dd{Db}}}}}{{Cb{{f{{Dd{Db}}}}}}}}}}{{{f{Md}}c}Md{{Cj{{f{Bh}}{f{BjDj}}}}}}{{{f{Dl}}{f{Cd}}}{{Af{Dl}}}}{{{f{Dl}}e{f{Bj{Dd{c}}}}}b{}{{Cd{{B`{Ad}}{f{c}}}{{Cb{c}}}}}}{{{f{Fd}}e{f{Bj{Dd{c}}}}}b{}{{Cd{{B`{d}}{f{c}}}{{Cb{c}}}}}}{{{f{Md}}e{f{Bj{Dd{c}}}}}b{}{{Cd{{B`{{f{Bh}}}}{f{c}}}{{Cb{c}}}}}}{{{f{Ed}}e{f{Bj{Dd{c}}}}}b{}{{Cd{{B`{{f{{Dd{Db}}}}}}{f{c}}}{{Cb{c}}}}}}{{{f{{ABn{c}}}}g{f{Bj{Dd{e}}}}}bHb{}{{Cd{{B`{{f{c}}}}{f{e}}}{{Cb{e}}}}}}{{{f{Dl}}c}Dl{{Cd{Ad}{{Cb{Ad}}}}Cf}}{{{f{Fd}}c}Fd{{Cd{d}{{Cb{d}}}}Cf}}{{{f{Md}}c}Md{{Cd{{f{Bh}}}{{Cb{{AI`{Bh}}}}}}Cf}}{{{f{Ed}}c}Ed{{Cd{{f{{Dd{Db}}}}}{{Cb{{AI`{{Dd{Db}}}}}}}}Cf}}{{{f{{ABn{c}}}}e}{{ABn{c}}}Hb{{Cd{{f{c}}}{{Cb{c}}}}Cf}}{{{f{Fd}}Dn}E`}{{{f{Md}}Dn}E`}{{{f{Ed}}Dn}E`}{{{f{AHj}}Dn}E`}{{{f{Fd}}{f{{Dd{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{Md}}{f{{Dd{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{Ed}}{f{{Dd{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{AHj}}{f{{Dd{Ad}}}}{f{Eb}}}{{Af{E`}}}}{{{f{Fd}}}{{Af{E`}}}}{{{f{Md}}}{{Af{E`}}}}{{{f{Ed}}}{{Af{E`}}}}{{{f{{ABn{c}}}}}{{Af{E`}}}Hb}{eAIf{}{{Ff{}{{Bb{c}}}}}}0{{AAne}AIh{}{{Ff{}{{Bb{c}}}}}}0{{{f{Md}}}Ed}{{{f{Gl}}}Gl}{{{f{Dh}}}{{f{Dh}}}}{{{f{L`}}}{{f{Dh}}}}{{{f{AIj}}}{{f{Dh}}}}{{{f{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}}}{{B`{{f{{Dd{c}}}}}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Dl}}{f{{l{c}}}}{f{{l{e}}}}g}DlC`C`{{Cj{{B`{Ch}}B`B`}{{Cb{{B`{Ad}}}}}}}}{{FdFd}c{}}{{{f{Fd}}{f{Fd}}}c{}}0101{{{f{c}}}{{f{e}}}{}{}}0000000000000000000000000000000000{{{f{Bjc}}}{{f{Bje}}}{}{}}0000000000000000000000000000000000{Dh{{A@j{Dh}}}}{{{f{AJf}}{f{AJf}}c}{{Af{AJf}}}AJh}{{{f{AJj}}{f{Dh}}}{{Af{Ad}}}}{{{f{Hl}}{f{Dh}}}{{Af{Ad}}}}{{{f{Dl}}{f{Dh}}}{{Af{Ad}}}}{{{f{Fd}}{f{Dh}}}{{Af{Ad}}}}{{{f{Md}}{f{Dh}}}{{Af{Ad}}}}{{{f{Ed}}{f{Dh}}}{{Af{Ad}}}}{{{f{AHj}}{f{Dh}}}{{Af{Ad}}}}{{{f{Gl}}{f{Dh}}}Gl}54321`{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHn}}}{}}0000{{{f{AIb}}{f{Ad}}}{{Af{Ad}}}}{{{f{AId}}{f{Ad}}}{{Af{Ad}}}}{{{f{{AJl{ce}}}}}{{AJl{ce}}}C`C`}{{{f{AJn}}}AJn}{{{f{Gl}}}Gl}{{{f{AK`}}}AK`}{{{f{Dh}}}Dh}{{{f{L`}}}L`}{{{f{AKb}}}AKb}{{{f{AKd}}}AKd}{{{f{AKf}}}AKf}{{{f{Kh}}}Kh}{{{f{Jh}}}Jh}{{{f{AKh}}}AKh}{{{f{AKj}}}AKj}{{{f{Kd}}}Kd}{{{f{Jl}}}Jl}{{{f{Cl}}}Cl}{{{f{Cn}}}Cn}{{{f{AKl}}}AKl}{{{f{AKn}}}AKn}{{{f{Df}}}Df}{{{f{D`}}}D`}{{{f{AL`}}}AL`}{{{f{Al}}}Al}{{{f{ALb}}}ALb}{{{f{ALd}}}ALd}{{{f{ALf}}}ALf}{{{f{ALh}}}ALh}{{{f{AAn}}}AAn}{{{f{ALj}}}ALj}{{{f{c}}{f{Bje}}}b{}{}}0000000000000000000000000000{{{f{BjL`}}Dh}b}{ALle{}{{AIf{c}}AGh}}0{{ALlAAn}e{}{{AIh{c}}AGh}}0{{{f{Dh}}}d}00{ALnDh}{{{f{L`}}}{{f{Dh}}}}{{}Gl}{{}AK`}{{}Dh}{{}AAn}{{{f{{AJl{ce}}}}}{{f{g}}}C`C`{}}{Fb{{f{c}}}{}}0000000000000000000000000000000000{{{f{Bj{AJl{ce}}}}}{{f{Bjg}}}C`C`{}}{Fb{{f{Bjc}}}{}}0000000000000000000000000000000000{{{f{Hl}}{f{Hl}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHn}}}{}}000000{Fbb}0000000000000000000000000000000000{{{f{AJj}}}{{f{Dh}}}}{{{f{Hl}}}{{f{Dh}}}}{{{f{Gl}}}Dh}`{{{f{Gl}}{f{Gl}}}d}{{{f{AK`}}{f{AK`}}}d}{{{f{Dh}}{f{AAn}}}d}{{{f{Dh}}{f{Dh}}}d}{{{f{L`}}{f{L`}}}d}{{{f{AKb}}{f{AKb}}}d}{{{f{AAn}}{f{AAn}}}d}{{{f{ALj}}{f{ALj}}}d}{{{f{Gl}}{f{Gl}}d}d}{{{f{Dl}}{f{Dl}}}Fd}{{{f{Fd}}{f{Fd}}}Fd}{{{f{Md}}{f{Md}}}Fd}{{{f{Md}}{f{Bh}}}Fd}{{{f{Ed}}{f{Ed}}}Fd}{{{f{Ed}}{f{{Dd{Db}}}}}Fd}543201{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{Dl}}}{{Af{{Gf{Ad{ADj{Jn}}}}}}}}{{{f{Md}}}{{Af{{Gf{Ad{ADj{Jn}}}}}}}}{{{f{{AJl{ce}}}}}L`C`C`}{{{f{Fd}}d}{{Af{Fd}}}}{{{f{Ed}}{f{{Dd{Db}}}}}{{Af{Ed}}}}{{{f{Dl}}{f{Fd}}}{{Af{Dl}}}}{{{f{Fd}}{f{Fd}}}{{Af{{l{Al}}}}}}{{{f{Md}}{f{Fd}}}{{Af{{l{Df}}}}}}{{{f{Ed}}{f{Fd}}}{{Af{{l{D`}}}}}}{{{f{AHj}}{f{Fd}}}{{Af{AHj}}}}{{{f{{ABn{c}}}}{f{Fd}}}{{Af{{l{{Gn{c}}}}}}}Hb}{{AJh{f{AM`}}{f{AM`}}}{{Af{AM`}}}}{{{f{Dl}}{f{BjFh}}}Fj}{{{f{Md}}{f{BjFh}}}Fj}{{{f{Ed}}{f{BjFh}}}Fj}{{{f{{ABn{c}}}}{f{BjFh}}}FjHb}{{{f{AJn}}{f{BjFh}}}Fj}{{{f{Gl}}{f{BjFh}}}Fj}0{{{f{AK`}}{f{BjFh}}}Fj}{{{f{Dh}}{f{BjFh}}}Fj}0{{{f{L`}}{f{BjFh}}}Fj}{{{f{AKb}}{f{BjFh}}}Fj}0{{{f{AAn}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{ALj}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{Dl}}c}b{{Cj{{B`{Ch}}}}}}{cc{}}0000000{{{B`{c}}}Gl{{AMd{Gl}}}}{cGlAMf}22{{{f{Gl}}}Dh}3{GlDh}{{{f{AAn}}}Dh}{{{f{AMh}}}L`}{{{f{Gl}}}L`}7{{{f{ALj}}}AKb}888888888888888888888{AMjAAn}9{AMlAAn}:{{{f{AAn}}d}Dh}{cDl{{Ff{}{{Bb{{B`{{A@j{Fl}}}}}}}}}}{cDl{{Ff{}{{Bb{{B`{Ad}}}}}}}}{eDl{{AMn{Ad}}}{{Ff{}{{Bb{c}}}}}}{cFd{{Ff{}{{Bb{d}}}}}}{eMd{{`{Bh}}}{{Ff{}{{Bb{c}}}}}}{eMd{{Jj{Bh}}}{{Ff{}{{Bb{{B`{c}}}}}}}}{eEd{{Jj{{Dd{Db}}}}}{{Ff{}{{Bb{{B`{c}}}}}}}}{eEd{{`{{Dd{Db}}}}}{{Ff{}{{Bb{c}}}}}}{e{{ABn{c}}}Hb{{Ff{}{{Bb{{B`{c}}}}}}}}{{{f{Bh}}c}{{l{Al}}}{{Bf{}{{Bb{{B`{d}}}}}}}}{{{f{Bh}}e}Md{{Jj{Bh}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{{f{Bh}}e}Ed{{Jj{{Dd{Db}}}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{{f{Bh}}e}{{ABn{c}}}Hb{{Bf{}{{Bb{{B`{c}}}}}}}};:97856{eAHj{{`{{Dd{Db}}}}}{{Ff{}{{Bb{c}}}}}}{eAHj{{Jj{{Dd{Db}}}}}{{Ff{}{{Bb{{B`{c}}}}}}}}6{{{f{Bh}}c}{{l{Al}}}{{Bf{}{{Bb{d}}}}}}{{{f{Bh}}e}Md{{Jj{Bh}}}{{Bf{}{{Bb{c}}}}}}{{{f{Bh}}e}Ed{{Jj{{Dd{Db}}}}}{{Bf{}{{Bb{c}}}}}}{{{f{Bh}}e}{{ABn{c}}}Hb{{Bf{}{{Bb{c}}}}}}{{AN`Dh}L`}{cDl{{Gh{}{{Bb{{B`{Ad}}}}}}}}{cFd{{Gh{}{{Bb{{B`{d}}}}}}}}{cFd{{Gh{}{{Bb{d}}}}}}{eMd{{Jj{Bh}}HnI`}{{Gh{}{{Bb{{B`{c}}}}}}}}{eMd{{`{Bh}}HnI`ANb}{{Gh{}{{Bb{c}}}}}}{eEd{{Jj{{Dd{Db}}}}HnI`}{{Gh{}{{Bb{{B`{c}}}}}}}}{eEd{{`{{Dd{Db}}}}HnI`ANb}{{Gh{}{{Bb{c}}}}}}{{c{f{Bh}}Dh}Dl{{Gh{}{{Bb{{B`{Ad}}}}}}}}{{{f{Bh}}{f{{Dd{d}}}}}Fd}{{{f{Bh}}{f{{Dd{c}}}}}Md{{Jj{Bh}}}}{{{f{Bh}}{f{{Dd{c}}}}}Ed{{Jj{{Dd{Db}}}}}}{{{f{Bh}}{f{{Dd{c}}}}}{{ABn{c}}}Hb}{{{f{Bh}}{f{{Dd{{B`{d}}}}}}}Fd}{{{f{Bh}}{f{{Dd{{B`{c}}}}}}}Md{{Jj{Bh}}}}{{{f{Bh}}{f{{Dd{{B`{c}}}}}}}Ed{{Jj{{Dd{Db}}}}}}{{{f{Bh}}{f{{Dd{{B`{c}}}}}}}{{ABn{c}}}Hb}{cFd{{Gj{}{{Bb{{B`{d}}}}}}}}{{{En{c}}AAn}{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{En{c}}AAn}{{AGh{}{{AIl{e}}{AIn{c}}{AJ`{g}}}}}{AJb{AJd{e}}}Ob{{F`{}{{Bb{e}}}}GjHnI`}}{{FbcAAn}{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Bh}}{f{Ad}}Fb}Dl}{{{f{Bh}}dFb}Fd}{{{f{Bh}}{f{Bh}}Fb}Md}{{{f{Bh}}{f{{Dd{Db}}}}Fb}Ed}{{{f{Bh}}{f{{Dd{Db}}}}Fb}AHj}{{{f{Bh}}cFb}{{ABn{c}}}Hb}{{FbAAn}{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Bh}}Fb}Dl}{{{f{Bh}}Fb}Fd}{{{f{Bh}}Fb}Md}{{{f{Bh}}Fb}Ed}{{{f{Bh}}Fb}AHj}{{{f{Bh}}Fb}{{ABn{c}}}Hb}{{{f{Bh}}Fb{f{Dh}}}Dl}{{{f{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}}Fb}{{B`{c}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Hl}}Fb}{{Af{Gl}}}}{{{f{AJj}}Fb}{{Af{Gl}}}}0{{{f{Dl}}Fb}{{Af{Gl}}}}{{{f{Fd}}Fb}{{Af{Gl}}}}{{{f{Md}}Fb}{{Af{Gl}}}}{{{f{Ed}}Fb}{{Af{Gl}}}}{{{f{AHj}}Fb}{{Af{Gl}}}}{{{f{{ABn{c}}}}Fb}{{Af{Gl}}}Hb}{{{f{Hl}}Fb}Gl}{{{f{AJj}}Fb}Gl}0{{{f{Dl}}Fb}Gl}{{{f{Fd}}Fb}Gl}{{{f{Md}}Fb}Gl}{{{f{Ed}}Fb}Gl}{{{f{AHj}}Fb}Gl}{{{f{{ABn{c}}}}Fb}GlHb}{{{f{Dl}}Fb}{{B`{Ad}}}}{{}Dh}00000000000000000000000{{{f{Dl}}}Ad}{{{f{{ABn{c}}}}Fb}{{B`{{f{H`}}}}}Hb}0{{{f{Gl}}}{{B`{{f{Bh}}}}}}{{{f{ANd}}Fb}Gl}{{{f{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}}Fb}{{B`{c}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Dl}}}Fb}{{{f{Md}}}Fb}{{{f{AHj}}}Fb}{{{f{Dl}}dd}{{Af{Aj}}}}{{{f{Fd}}dd}{{Af{Aj}}}}{{{f{Md}}dd}{{Af{Aj}}}}{{{f{Ed}}dd}{{Af{Aj}}}}{{{f{AHj}}dd}{{Af{Aj}}}}{{{f{{ABn{c}}}}dd}{{Af{Aj}}}Hb}{{{f{Dl}}{f{Dl}}}Fd}{{{f{Fd}}{f{Fd}}}Fd}{{{f{Md}}{f{Bh}}}Fd}{{{f{Md}}{f{Md}}}Fd}{{{f{Ed}}{f{{Dd{Db}}}}}Fd}{{{f{Ed}}{f{Ed}}}Fd}543201{{{f{Gl}}{f{Bjc}}}bAEf}{{{f{AK`}}{f{Bjc}}}bAEf}{{{f{Dh}}{f{Bjc}}}bAEf}{{{f{AKb}}{f{Bjc}}}bAEf}{{{f{AAn}}{f{Bjc}}}bAEf}{{{f{ALj}}{f{Bjc}}}bAEf}{{{f{Gl}}{f{Bjc}}d}bAEf}{{}Fb}0000000000000000000000000000000000{{{f{Dl}}}Dh}{{{f{Dh}}}{{B`{{f{Dh}}}}}}{{{f{AAn}}}{{B`{{f{AAn}}}}}}{ce{}{}}0000000000000000000000000000000000{{ANf{B`{Fb}}Fb}{{Af{Hl}}}}{{ANf{B`{Fb}}Fb}Hl}{{{f{Dl}}}c{}}{{{f{Fd}}}c{}}{{{f{Md}}}c{}}{{{f{Ed}}}c{}}{{{f{AHj}}}c{}}{{{f{{ABn{c}}}}}eHb{}}{HlAd}{{Lf{f{Bh}}}Ad}{ANfAd}{Gl{{Af{Gl}}}}{{{f{Dh}}}d}00{{{f{Gl}}}d}111010111110101011110111101{{{f{AAn}}}d}{{{f{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}}}{{ABh{cgABf}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}}}{{B`{c}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Dl}}{f{Dl}}}Fd}{{{f{Fd}}{f{Fd}}}Fd}{{{f{Md}}{f{Bh}}}Fd}{{{f{Md}}{f{Md}}}Fd}{{{f{Ed}}{f{{Dd{Db}}}}}Fd}{{{f{Ed}}{f{Ed}}}Fd}543210{{{f{AJf}}{f{AJf}}}{{Af{{Gf{AJfAJf}}}}}}{{DlDl}{{Af{{Gf{DlDl}}}}}}{{{f{Dh}}{f{Dh}}}{{Af{d}}}}{{{f{Fd}}}{{B`{d}}}}{{{f{Fd}}}Ad}{{{f{Md}}}Ad}{{{f{Ed}}}Ad}{{{f{Fd}}}{{B`{Jf}}}}{{{f{AIb}}}{{B`{Hf}}}}{{{f{AId}}}{{B`{Jf}}}}{{{f{AIb}}}Ad}{{{f{AId}}}Ad}{{{f{Dh}}{f{Dh}}}{{Af{Dh}}}}9876{{{f{Bh}}{f{{Dd{Db}}}}FbFb}Fd}{{{f{Hl}}{f{Hl}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHn}}}{}}000000{{{f{Md}}}{{Af{Fb}}}}{{{f{Ed}}}{{Af{Fb}}}}{{{f{L`}}}{{f{AN`}}}}`{{}c{}}00{{DhGl}Lf}{{{f{Bh}}c}Md{{Jj{{Dd{{AI`{Bh}}}}}}}}{{{f{Bh}}c}Md{{Jj{{Dd{{f{Bh}}}}}}}}{{{f{Bh}}c}Md{{Jj{{Dd{{B`{{f{Bh}}}}}}}}}}{{{f{Bh}}c}Md{{Jj{{Dd{{B`{{AI`{Bh}}}}}}}}}}{{{f{Bh}}c}Ed{{Jj{{Dd{{B`{{AI`{{Dd{Db}}}}}}}}}}}}{{{f{Bh}}c}Ed{{Jj{{Dd{{f{{Dd{Db}}}}}}}}}}{{{f{Bh}}c}Ed{{Jj{{Dd{{AI`{{Dd{Db}}}}}}}}}}{{{f{Bh}}c}Ed{{Jj{{Dd{{B`{{f{{Dd{Db}}}}}}}}}}}}{{{f{Bh}}{f{{Dd{c}}}}}{{ABn{c}}}Hb}{{{f{Bh}}e}{{ABn{c}}}Hb{{Jj{{Dd{{B`{c}}}}}}}}{{{f{Bh}}Dh}L`}{{{f{Bh}}}{{ABn{c}}}Hb}{{{f{Dl}}FbFb}Dl}{{{f{Fd}}FbFb}Fd}{{{f{Md}}FbFb}Md}{{{f{Ed}}FbFb}Ed}{{{f{AHj}}FbFb}AHj}{{{f{{ABn{c}}}}FbFb}{{ABn{c}}}Hb}{{{f{Bh}}{En{c}}}{{ABn{c}}}Hb}{{{f{Bh}}{En{c}}Gd}{{ABn{c}}}Hb}{{{f{Fd}}}c{}}{Fdc{}}{{{f{Dl}}{f{Dl}}}Fd}{{{f{Fd}}{f{Fd}}}Fd}{{{f{Md}}{f{Md}}}Fd}{{{f{Md}}{f{Bh}}}Fd}{{{f{Ed}}{f{Ed}}}Fd}{{{f{Ed}}{f{{Dd{Db}}}}}Fd}543210{{{f{Dl}}}{{Af{{ADj{Jn}}}}}}{{{f{Md}}}{{Af{{ADj{Jn}}}}}}{{{f{Dl}}}{{`{{Kj{}{{Bb{{B`{Ad}}}}}}}}}}{{{f{Md}}}{{`{{Kj{}{{Bb{{B`{{f{Bh}}}}}}}}}}}}{{{f{BjDl}}}{{`{{Kl{}{{Bb{{B`{Ad}}}}}}}}}}{{{f{Md}}}{{`{{Kl{}{{Bb{{B`{{f{Bh}}}}}}}}}}}}{{{f{Gl}}{f{Gl}}}{{B`{ANh}}}}{{{f{AKb}}{f{AKb}}}{{B`{ANh}}}}{{{f{Hl}}}{{B`{Fb}}}}{{{f{{AJl{ALbHj}}}}}{{B`{Fb}}}}{{{f{AIb}}JfKn}{{Af{{B`{Hf}}}}}}{{{f{AId}}JfKn}{{Af{{B`{Jf}}}}}}{{{f{AIb}}JfKn}{{Af{Ad}}}}{{{f{AId}}JfKn}{{Af{Ad}}}}{{{f{Bh}}FbJf}{{Af{Fd}}}}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHn}}}{}}000000{{{f{Dl}}}Dl}{{{f{Fd}}}Fd}{{{f{Md}}}Md}{{{f{Ed}}}Ed}{{{f{AHj}}}AHj}{{{f{{ABn{c}}}}}{{ABn{c}}}Hb}`{{{f{Hl}}}Fb}{{{f{{AJl{ALbHj}}}}}Fb}{{{f{Fd}}c{B`{d}}}{{Af{Fd}}}{{Ff{}{{Bb{Ld}}}}}}{{{f{Md}}c{B`{{f{Bh}}}}}{{Af{Md}}}{{Ff{}{{Bb{Ld}}}}}}{{{f{Ed}}c{B`{{f{{Dd{Db}}}}}}}{{Af{Ed}}}{{Ff{}{{Bb{Ld}}}}}}{{{f{Fd}}ce}{{Af{Fd}}}{{Ff{}{{Bb{Ld}}}}}{{Cd{{B`{d}}}{{Cb{{B`{d}}}}}}}}{{{f{Md}}ce}{{Af{Md}}}{{Ff{}{{Bb{Ld}}}}}{{Cd{{B`{{f{Bh}}}}}{{Cb{{B`{Dj}}}}}}}}{{{f{Ed}}ce}{{Af{Ed}}}{{Ff{}{{Bb{Ld}}}}}{{Cd{{B`{{f{{Dd{Db}}}}}}}{{Cb{{B`{{En{Db}}}}}}}}}}{{{f{Fd}}{f{Fd}}{B`{d}}}{{Af{Fd}}}}{{{f{Md}}{f{Fd}}{B`{{f{Bh}}}}}{{Af{Md}}}}{{{f{Ed}}{f{Fd}}{B`{{f{{Dd{Db}}}}}}}{{Af{Ed}}}}{{{f{BjDl}}}b}{{{f{BjDl}}Dh}b}{{{f{BjL`}}AN`}b}{{{f{Dl}}Jn}Dl}{{{f{Fd}}Jn}Fd}{{{f{Md}}Jn}Md}{{{f{Ed}}Jn}Ed}{{{f{AHj}}Jn}AHj}{{{f{{ABn{c}}}}Jn}{{ABn{c}}}Hb}{{{f{Dl}}Jn{B`{{f{Ad}}}}}Dl}{{{f{Fd}}Jn{B`{d}}}Fd}{{{f{Md}}Jn{B`{{f{Bh}}}}}Md}{{{f{Ed}}Jn{B`{{f{{Dd{Db}}}}}}}Ed}{{{f{AHj}}Jn{B`{{f{{Dd{Db}}}}}}}AHj}{{{f{{ABn{c}}}}Jn{B`{{Gn{c}}}}}{{l{{Gn{c}}}}}Hb}{{{f{Fd}}d}Fd}{{{f{Md}}d}Md}{{{f{Ed}}d}{{l{D`}}}}{{{f{AHj}}d}AHj}{{{f{Fd}}Dn}{{l{Al}}}}{{{f{Md}}Dn}{{l{Df}}}}{{{f{Ed}}Dn}{{l{D`}}}}{{{f{AHj}}Dn}AHj}{{{f{AIb}}Db}Ad}{{{f{AId}}Db}Ad}{{{f{Gl}}{f{Dh}}}{{B`{Gl}}}}`{{{f{Hl}}{f{Hl}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{G`{AdAHn}}}{}}000000{{{f{Fd}}}{{B`{Ld}}}}{{{f{Fd}}}Lf}{{{f{Md}}}Lf}{{{f{Ed}}}Lf}{{{f{Md}}{f{c}}}Md{{Jj{{Dd{Ld}}}}Lh}}{{{f{Md}}{f{E`}}}Md}{{{f{Ed}}{f{E`}}}Ed}{{{f{Ed}}{f{c}}}Ed{{Jj{{Dd{Ld}}}}Lh}}{{{f{Dh}}d}AAn}{{{f{L`}}d}AMh}{AKbALj}{{{f{Dh}}{f{Bh}}d}AMh}{AKb{{f{Bh}}}}{{{f{Md}}Fb}{{Af{Ad}}}}{{{f{BjDl}}Dh}b}{{{f{AAn}}}{{f{AAn}}}}{{{f{Dl}}}{{Af{Mb}}}}{{{f{c}}}e{}{}}0000000000000000000000000000{{{f{Dh}}}Dh}{{{f{AAn}}}ANj}{{{f{c}}}Dj{}}00{{{f{Ed}}}Md}{{{f{Dl}}c}{{Af{Dl}}}{{Cj{Ch}{{Cb{{Af{Ad}}}}}}}}{{{f{Dl}}e}{{Af{{l{g}}}}}{}{{Cj{{B`{Ch}}}{{Cb{{Af{{B`{c}}}}}}}}Cf}C`}{g{{G`{AIfe}}}{}{}{{Ff{}{{Bb{{G`{ce}}}}}}}}0{{AAng}{{G`{AIhe}}}{}{}{{Ff{}{{Bb{{G`{ce}}}}}}}}0{ALl{{G`{eg}}}{}{{AIf{c}}AGh}{}}0{{ALlAAn}{{G`{eg}}}{}{{AIh{c}}AGh}{}}0{{{f{Gl}}}{{Af{c}}}Jd}{c{{G`{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000{{{f{Gl}}{f{Dh}}}{{Af{Gl}}}}{{{f{Dh}}d}{{Af{AAn}}}}{{{f{Dl}}{f{{l{c}}}}e}{{Af{Dl}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{Af{{B`{Ad}}}}}}}}}}{{{f{c}}}Mh{}}0000000000000000000000000000000000{{{f{AAn}}}AAn}{{{f{Fd}}}{{Af{Fd}}}}{{{f{Md}}}{{Af{Md}}}}{{{f{Ed}}}{{Af{Ed}}}}{{{f{{ABn{c}}}}}{{Af{{l{{Gn{c}}}}}}}Hb}{{{f{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}}Fb}cOb{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Lf}}}{{f{Gl}}}}1{{{f{Dh}}Gl}d}{{{f{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}}}gOb{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{AIb}}Db}Ad}{{{f{AId}}Db}Ad}{{{f{Fd}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{ANl}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{ANn}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AM`}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AO`}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AOb}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AOd}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AOf}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AOh}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{ANf}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AIb}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AId}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{Md}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{Ed}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{AHj}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}{{{f{{ABn{c}}}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}Hb}{{{f{Fd}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{ANl}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{ANn}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AM`}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AO`}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AOb}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AOd}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AOf}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AOh}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{ANf}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AIb}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AId}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{Md}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{Ed}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{AHj}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}{{{f{{ABn{c}}}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}Hb}{ce{}{}}0000000000000000000000000000000000{Fbc{}}0{Fb{{AOj{ce}}}{}{}}{{{f{{Dd{Mj}}}}e}c{}{{Ml{{f{E`}}}{{Cb{c}}}}}}{{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}{B`{Gd}}}{{AGh{}{{AIl{c}}{AIn{e}}{AJ`{g}}}}}Ob{AJb{AJd{c}}}{{F`{}{{Bb{c}}}}GjHnI`}}{{{f{Dh}}}Gl}{{{f{Dl}}{f{{l{c}}}}e}DlC`{{Cj{{B`{Ch}}B`}{{Cb{{B`{Ad}}}}}}}}```````````{{{f{c}}h}b{}}{{{f{AJf}}}d}{{AJfd}AJf}{{{f{BjAOl}}{B`{{f{Bh}}}}}b}{{{f{BjAJf}}{f{AJf}}}{{Af{b}}}}{{{f{BjAOl}}}b}{{{f{BjAOl}}{f{Bh}}}b}{{{f{AJf}}Dn}E`}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bjc}}}{{f{Bje}}}{}{}}000{{{f{AJf}}{f{AJf}}c}{{Af{AJf}}}AJh}{{{f{AJf}}{f{Dh}}}{{Af{Ad}}}}{{{f{AJf}}}AJf}{{{f{c}}{f{Bje}}}b{}{}}{{}AOn}{Fb{{f{c}}}{}}000{Fb{{f{Bjc}}}{}}000{{AOlc}AJf{{Ff{}{{Bb{{B`{{f{Bh}}}}}}}}}}{Fbb}000{{{f{AJf}}}{{f{Dh}}}}{{{f{AJf}}{f{Md}}}c{}}{{{f{AJf}}{f{AJf}}}c{}}{{{f{AJf}}{f{Bh}}}c{}}210{{AJh{f{AM`}}{f{AM`}}}{{Af{AM`}}}}{AOlAJf}{AOn{{ABj{B@`}}}}{cc{}}000{{AM`{ABj{B@`}}dB@b}AJf}{{AM`B@b}AJf}{{{f{Md}}{f{ALn}}B@b}{{Af{AJf}}}}{{{f{Bh}}dFbB@b}AJf}{{{f{AJf}}Fb}{{Af{Gl}}}}{{{f{AJf}}Fb}Gl}{{{f{AJf}}}{{f{{ABj{B@`}}}}}}=<;<;={{}Fb}000{ce{}{}}0000{AJfAd}{{{f{AJf}}}d}0{{{f{AJf}}}B@d}{{{f{AJf}}}Fb}{{{f{AJf}}{f{Md}}}c{}}{{{f{AJf}}{f{AJf}}}c{}}{{{f{AJf}}{f{Bh}}}c{}}120{{{f{AJf}}{f{AJf}}}{{Af{{Gf{AJfAJf}}}}}}{{DlDl}{{Af{{Gf{DlDl}}}}}}{{{f{AJf}}}Ad}{{{f{BjAOn}}{f{{ABj{B@`}}}}}{{Af{b}}}}1{{{f{AJf}}}{{Af{Fb}}}}{{{f{AJf}}}{{f{Bh}}}}{{{f{Bh}}FbB@b}AOl}{{{ABj{B@`}}}AOn}{{{f{BjB@d}}}{{B`{c}}}{}}:;9:;9<{{{f{AJf}}}{{f{AM`}}}}{{{f{BjAOl}}{f{Bh}}}{{Gf{Kfd}}}}`{{{f{B@d}}}{{Gf{Fb{B`{Fb}}}}}}{{{f{AJf}}d}AJf}{{{f{AJf}}Dn}AJf}`{{{f{AJf}}dd}El}{{{f{AJf}}{f{ALn}}B@f}AJf}{{{f{AJf}}}{{Af{AJf}}}}{{{f{AJf}}}AJf}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0000000{{{f{c}}}Mh{}}0004{{{f{AJf}}}d}{{{f{AJf}}}{{Af{B@h}}}}{ce{}{}}000``````{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bjc}}}{{f{Bje}}}{}{}}0{ALnB@`}{{{f{B@b}}}B@b}{{{f{B@`}}}B@`}{{{f{c}}{f{Bje}}}b{}{}}0{{}B@b}{{}B@`}{Fb{{f{c}}}{}}0{Fb{{f{Bjc}}}{}}0{Fbb}0{{{f{B@b}}{f{B@b}}}d}{{{f{B@`}}{f{Bh}}}{{B`{Kf}}}}{{{f{B@b}}{f{BjFh}}}Fj}{{{f{B@`}}{f{BjFh}}}Fj}{cc{}}0{{{f{B@`}}Kf}{{f{Bh}}}}{{{f{B@`}}}{{f{ALn}}}}{{{f{B@`}}Kf}{{B`{{f{Bh}}}}}}{{}Fb}0{ce{}{}}0{{{f{B@`}}}d}0{{{f{B@`}}}Fb}{{{f{B@`}}{f{B@`}}}d}{{{f{c}}}e{}{}}0{c{{G`{e}}}{}{}}000{{{f{c}}}Mh{}}066`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{}B@j}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{{}b}{{{f{BjB@j}}}b}{Fbb}2{cc{}}6{{}Fb}{ce{}{}}<<;{{}d}1```````660````````````````````{{{f{B@l}}}{{f{Bh}}}}<<;;`9{{{f{B@l}}}f}:9966`{{{f{B@n}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{B@l}}{f{BjFh}}}{{G`{bAMb}}}}077{cB@l{{AMd{{AI`{Bh}}}}}}{{}{{In{{f{Bh}}B@n}{{Cb{b}}}}}}8877{cAHnAGl}````{{{In{{f{Bh}}B@n}{{Cb{b}}}}}b}{cAHnBA`}{{{f{c}}}Dj{}}{c{{G`{e}}}{}{}}000{{{f{c}}}Mh{}}0==``````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{BAb}}}BAb}{{{f{c}}{f{Bje}}}b{}{}}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{BjFh}}BAdFb}Fj}{cc{}}{{}BAf}{{}BAb}{{}{{B`{Fb}}}}{{}Dj}{{}d}{{}Fb}{ce{}{}}{{{B`{BAf}}}b}{BAbb}{{{B`{Fb}}}b}2{{{B`{d}}}b}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}7```````````{{{f{c}}h}b{}}00{{{f{BjB@h}}{En{Ad}}{f{BAh}}}{{Af{b}}}}{{{f{B@h}}{f{Cd}}}{{En{Ad}}}}0{{{f{B@h}}{f{Fd}}}{{Af{B@h}}}}{{{f{B@h}}{f{{Dd{AN`}}}}}{{Af{B@h}}}}0{{{f{B@h}}JnFb}B@h}{{{f{B@h}}{f{Ad}}}c{}}{{B@h{f{Ad}}}c{}}{{{f{B@h}}{f{B@h}}}c{}}{{{f{BjB@h}}}{{f{BjB@h}}}}{{{f{BjB@h}}{f{Bh}}e}{{Af{{f{BjB@h}}}}}BAj{{Ml{{f{Ad}}}{{Cb{c}}}}}}{{{f{BjB@h}}Fbe}{{Af{{f{BjB@h}}}}}BAj{{Ml{{f{Ad}}}{{Cb{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bjc}}}{{f{Bje}}}{}{}}0000{{{f{B@h}}}B@h}{{{f{BAl}}}BAl}{{{f{BAn}}}BAn}2{{{f{c}}{f{Bje}}}b{}{}}00{{{f{B@h}}{f{Bh}}}{{Af{{f{Ad}}}}}}{{{f{B@h}}e}{{Af{{En{{f{Ad}}}}}}}{{Jj{Bh}}}{{Ff{}{{Bb{c}}}}}}{{}BAn}{{}B@h}{Fb{{f{c}}}{}}0000{Fb{{f{Bjc}}}{}}0000?{{{f{B@h}}{f{Ad}}}c{}}{{B@h{f{Ad}}}c{}}{Fbb}0000{{{f{B@h}}{f{Bh}}}{{Af{B@h}}}}{{{f{BjB@h}}{f{Bh}}}{{Af{Ad}}}}{{{f{B@h}}{f{{Dd{c}}}}}B@h{{Jj{Bh}}}}{{{f{B@h}}{f{{BB`{{f{Bh}}}}}}}B@h}{{{f{B@h}}{B`{{f{{Dd{c}}}}}}}{{Af{B@h}}}{{Jj{Bh}}}}{{{f{B@h}}}{{En{Dh}}}};{{{f{BAn}}{f{BAn}}}d}{{{f{B@h}}{f{B@h}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{B@h}}}Fb}`{{{f{B@h}}e}{{Af{B@h}}}{{Jj{Bh}}}{{Ff{}{{Bb{c}}}}}}{{{f{B@h}}{En{Ad}}}{{Af{B@h}}}}{{{f{BjB@h}}{f{B@h}}}{{Af{b}}}}{{{f{B@h}}}{{En{L`}}}}{{{f{B@h}}ADd}{{Af{B@h}}}}{{{f{B@h}}{f{Fd}}}{{Af{B@h}}}}{{{f{BAl}}{f{BjFh}}}Fj}{{{f{BAn}}{f{BjFh}}}Fj}{{{f{B@h}}{f{BjFh}}}Fj}0{cc{}}000{{{f{BBb}}}B@h}1{{{f{BAh}}}B@h}{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{cB@h{{Ff{}{{Bb{Ad}}}}}}{{{f{{Dd{BBd}}}}}{{Af{B@h}}}}{{{f{{Dd{BBd}}}}{f{BAh}}}{{Af{B@h}}}}{{c{f{BAh}}}{{Af{B@h}}}{{Bf{}{{Bb{{f{BBd}}}}}}}}{{{f{B@h}}Fb}{{B`{{En{Gl}}}}}}{{{f{B@h}}{f{Bh}}}{{B`{Fb}}}}{{{f{B@h}}}{{En{{f{Bh}}}}}}{{{f{B@h}}}{{En{AN`}}}}{{{f{B@h}}}{{f{{Dd{Ad}}}}}}{{{f{BjB@h}}}{{f{Bj{En{Ad}}}}}}{{{f{B@h}}Fb}{{Af{BBd}}}}{{{f{B@h}}Fb{f{BjBBd}}}{{Af{b}}}}{{{f{B@h}}Fb{f{BjBBd}}}b}{{{f{B@h}}}{{B`{{Af{Dh}}}}}}`{{{f{B@h}}e}{{Af{BBf}}}{{Jj{Bh}}}{{Ff{}{{Bb{c}}}}}}0{{{f{B@h}}{En{Ad}}dd}{{Af{BBf}}}}{{{f{BAn}}{f{Bjc}}}bAEf}{{{f{BjB@h}}{B`{Ll}}}{{Af{AO`}}}}{{{f{B@h}}{B`{Fb}}}B@h}{{{f{B@h}}}Fb}{{{f{B@h}}{f{{Dd{Ad}}}}}{{Af{B@h}}}}{{{f{BjB@h}}{f{{Dd{Ad}}}}}{{Af{{f{BjB@h}}}}}}{{{f{BjB@h}}{f{{Dd{Ad}}}}}{{f{BjB@h}}}}{{{f{B@h}}{BBh{Fb}}}{{f{c}}}{}}{{{f{B@h}}BBj}{{f{c}}}{}}{{{f{B@h}}{BBl{Fb}}}{{f{c}}}{}}{{{f{B@h}}{f{Bh}}}{{f{c}}}{}}{{{f{B@h}}Fb}{{f{c}}}{}}{{{f{B@h}}{BBn{Fb}}}{{f{c}}}{}}{{{f{B@h}}{Kb{Fb}}}{{f{c}}}{}}{{{f{B@h}}{BC`{Fb}}}{{f{c}}}{}}{{}Fb}0000{{{f{BjB@h}}Fbc}{{Af{{f{BjB@h}}}}}BAj}{ce{}{}}000000{{{f{B@h}}}{{Af{Fd}}}}{{{f{B@h}}}d}1{{{f{B@h}}}{{Il{Ad}}}}{{{f{B@h}}d}BCb}{{{f{B@h}}}BCd}{{{f{B@h}}}{{Af{{B`{Ad}}}}}}{{{f{B@h}}BAl}{{Af{{B`{Ad}}}}}}{{{f{B@h}}ce}{{Af{B@h}}}{{BCf{AN`}}}{{BCf{AN`}}}}{{{f{B@h}}BCh}{{Af{B@h}}}}3{{B@h{f{Ad}}}c{}}{{{f{B@h}}{f{B@h}}}c{}}{{{f{B@h}}{f{Ad}}}c{}}{{{f{B@h}}}Fb}{{{En{c}}}{{Af{B@h}}}BAj}{{{En{Ad}}}B@h}{{{En{Ad}}}{{Af{B@h}}}}{{{f{BjBCb}}}{{B`{c}}}{}}{{{f{BjBCd}}}{{B`{c}}}{}}{{{f{B@h}}}B@h}{{{f{B@h}}cd}{{Af{{En{B@h}}}}}{{BCf{Dj}}}}0{{B@he}{{Af{c}}}{}{{Cd{B@h}{{Cb{{Af{c}}}}}}}}{{{f{BjB@h}}e}{{Af{c}}}{}{{Cd{{f{BjB@h}}}{{Cb{{Af{c}}}}}}}}{{B@hgc}{{Af{e}}}{}{}{{Cd{B@hc}{{Cb{{Af{e}}}}}}}}{{{f{BjB@h}}}{{B`{Ad}}}}{{{f{B@h}}{f{B@h}}}d}>=?{{{f{BjB@h}}{f{Bh}}{f{Bh}}}{{Af{{f{BjB@h}}}}}}{{{f{BjB@h}}{f{Bh}}c}{{Af{{f{BjB@h}}}}}BAj}{{{f{BjB@h}}Fbc}{{Af{{f{BjB@h}}}}}BAj}19`{{{f{B@h}}{f{Ad}}dd{B`{Hh}}}{{Af{B@h}}}}0{{{f{B@h}}Fbdd{B`{Hh}}}{{Af{B@h}}}}{{{f{B@h}}}BAh}{{{f{B@h}}{f{B@h}}}{{Af{b}}}}{{{f{B@h}}e}{{Af{B@h}}}{{Jj{Bh}}}{{Ff{}{{Bb{c}}}}}}{{{f{B@h}}Fb}{{B`{{f{Ad}}}}}}{{{f{B@h}}c}{{Af{B@h}}}{{BCj{Fb}}}}2{{{f{B@h}}c}{{Af{{En{Ad}}}}}{{BCf{AN`}}}}{{{f{B@h}}e{f{BCl}}}{{Af{B@h}}}{{Jj{Bh}}}{{Ff{}{{Bb{c}}}}}}{{{f{B@h}}e{f{BAh}}}{{Af{B@h}}}{{Jj{Bh}}}{{Ff{}{{Bb{c}}}}}}{{{f{BjB@h}}{f{{Dd{c}}}}}{{Af{b}}}{{Jj{Bh}}}}{{{f{B@h}}}{{Gf{FbFb}}}}{{{f{B@h}}Jn}B@h}{{{f{B@h}}}d}{{{f{BjB@h}}}b}{{{f{BCb}}}{{Gf{Fb{B`{Fb}}}}}}{{{f{BCd}}}{{Gf{Fb{B`{Fb}}}}}}{{{f{B@h}}JnFb}B@h}0{{{f{B@h}}cEb}{{Af{B@h}}}{{BCf{AN`}}}}{{{f{BjB@h}}cEb}{{Af{{f{BjB@h}}}}}{{BCf{AN`}}}}{B@h{{`{{Bf{}{{Bb{B@h}}}}}}}}{{B@hFbd}{{En{B@h}}}}{{B@h{f{Ad}}}c{}}{{{f{B@h}}{f{Ad}}}c{}}{{{f{B@h}}{f{B@h}}}c{}}{{{f{B@h}}BAl}{{Af{{B`{Ad}}}}}}{{{f{B@h}}{B`{Fb}}}B@h}{{{f{B@h}}{f{E`}}}{{Af{B@h}}}}{{{f{B@h}}{f{E`}}}B@h}{{{f{B@h}}{f{E`}}d}B@h}{{{f{B@h}}BCn}{{Af{Mb}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Dj{}}{{{f{B@h}}FbcEb}{{Af{B@h}}}{{BCf{AN`}}}}{{{f{BjB@h}}{B`{{f{Bh}}}}{B`{{Mf{Dj{En{Dj}}}}}}}{{Af{B@h}}}}{{{f{BjB@h}}{f{Bh}}e}{{Af{{f{BjB@h}}}}}BAj{{Ml{{f{Ad}}}{{Cb{{Af{c}}}}}}}}{{{f{BjB@h}}Fbe}{{Af{{f{BjB@h}}}}}BAj{{Ml{{f{Ad}}}{{Cb{{Af{c}}}}}}}}{c{{G`{e}}}{}{}}000{{{Gf{BD`{f{{Dd{AMh}}}}}}}{{Af{B@h}}}}1{BDb{{Af{B@h}}}}{{c{f{BAh}}}{{Af{B@h}}}{{Bf{}{{Bb{{Af{{f{BBd}}}}}}}}}}{{{f{B@h}}{f{Bh}}}{{Af{Fb}}}}44444{{{f{c}}}Mh{}}0000{{{f{B@h}}{B`{{f{{Dd{Dj}}}}}}BAn{B`{{Gf{JnFb}}}}}{{Af{B@h}}}}{{{f{B@h}}d{B`{{f{{Dd{Dj}}}}}}BAn{B`{{Gf{JnFb}}}}}{{Af{B@h}}}}1{{{f{B@h}}{f{B@h}}}{{Af{B@h}}}}{{{f{BjB@h}}{f{B@h}}}{{Af{{f{BjB@h}}}}}}{ce{}{}}0000{{{f{B@h}}}Fb}{{{f{BjB@h}}c}{{Af{{f{BjB@h}}}}}BAj}{{{f{BjB@h}}c{f{BAh}}}{{Af{{f{BjB@h}}}}}BAj}{{{f{BjB@h}}Ad}{{f{BjB@h}}}}{{{f{B@h}}{f{Bh}}{B`{Ld}}}{{Af{B@h}}}}{{{f{BjB@h}}{f{Bh}}{B`{Ld}}}{{f{BjB@h}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{BCh}}}BCh}{{{f{c}}{f{Bje}}}b{}{}}{{}BCh}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{BCh}}{f{BCh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCh}}{f{BjFh}}}Fj}{cc{}}{{{f{BCh}}{f{Bjc}}}bAEf}`{{}Fb}{ce{}{}}`{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}```3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BBf}}}{{Af{B@h}}}}`{{{f{BDd}}}{{f{{Dd{BDf}}}}}}{{{f{BBf}}c}{{Af{B@h}}}{{Cj{B@h}{{Cb{{Af{B@h}}}}}}HnI`}}{{{f{Aj}}}Dl}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Bjc}}}{{f{Bje}}}{}{}}0000000{{{f{BDd}}}BDd}{{{f{Aj}}}Aj}{{{f{BBf}}}BBf}{{{f{BDh}}}BDh}{{{f{c}}{f{Bje}}}b{}{}}000:{{}BDd}{{}Aj}{Fb{{f{c}}}{}}00{{{f{BDj}}}{{f{c}}}{}}11111{Fb{{f{Bjc}}}{}}0000000`{{BDle}{}{}{{BDn{c}}}}{Fbb}0000{{{f{BjBDd}}}b}111{{{f{BDd}}{f{BDd}}}d}{{{f{Aj}}{f{Aj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BE`}}}Ld}{{{f{BDd}}}{{f{{Dd{Ld}}}}}}{{{f{BBf}}}{{Af{B@h}}}}{{{f{BjBDd}}}{{f{Bj{En{Ld}}}}}}{{{f{BDd}}{f{BjFh}}}Fj}{{{f{Aj}}{f{BjFh}}}Fj}{{{f{BBf}}{f{BjFh}}}Fj}{{{f{BDh}}{f{BjFh}}}Fj}0{{{f{Bh}}BDh}Dj}{cc{}}000{{{En{{En{BEb}}}}}BDd}{{{En{{Gf{{En{Ld}}{En{BDf}}}}}}}BDd}2{{{En{BEb}}}BDd}3{BDdAj}44{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{cBDd{{Ff{}{{Bb{BEb}}}}}}{cBDd{{Gh{}{{Bb{BEb}}}}}}{{{f{Aj}}Fb}BE`}{{{f{BBf}}}{{f{Aj}}}}{{{f{BjBBf}}}{{f{BjAj}}}}{{{f{Aj}}}E`}{{{f{BEd}}dd}{{Af{Aj}}}}0{{{f{BBf}}}{{Af{B@h}}}}{{{f{BjAj}}}{{f{BjBDd}}}}{{}Fb}0000000{ce{}{}}0000000{AjBDd}1{{{f{BDd}}}c{}}{BDdc{}}310{{{f{BE`}}}d}{{{f{Aj}}}d}{{{f{BDd}}}d}{{{f{BDd}}}{{BEh{{BEf{{Il{Ld}}}}{Il{BDf}}}}}}{{{f{Aj}}}BEj}{{{f{BBf}}}{{En{Ad}}}}{{{f{BBf}}{B`{{Gf{JnFb}}}}}{{En{Ad}}}}={{{f{BE`}}}Fb}{{{f{Aj}}}Fb}?????{{{En{Ld}}{En{BDf}}d}BDd}{{{f{B@h}}{En{Ad}}Aj{B`{{En{Dj}}}}}BBf}{{{f{BjBEj}}}{{B`{c}}}{}}{{{f{BjBEj}}Fb}{{B`{c}}}{}}{{{f{BBf}}c}{{Af{B@h}}}{{Cd{B@h}{{Cb{{Af{B@h}}}}}}HnI`}}{{{f{c}}}{}{}}{{{f{Aj}}}BDl}{{{f{BBf}}JfKn}{{Af{B@h}}}}{{BBfe}BBf{{Jj{Bh}}}{{Ff{}{{Bb{c}}}}}}{{{f{Aj}}JnFb}BDj}{{{f{BjBDd}}}b}{{{f{BjAj}}}b}{{{f{BBf}}Db}{{Af{B@h}}}}{{{f{BBf}}}{{Af{B@h}}}}{Aj{{En{Ld}}}}0{BBfAj}{{{f{BjBBf}}}Aj}{{{f{c}}}e{}{}}000{{{f{c}}}Dj{}}{c{{G`{e}}}{}{}}000000000000000{{{f{c}}}Mh{}}0000000{AjAj}{{{f{Aj}}}{{f{BDd}}}}{{{f{Aj}}}{{f{BEl}}}};{ce{}{}}0000000`````{{{f{BDd}}c}Ad{{Cd{{Gf{Ld{f{BDf}}}}}{{Cb{B`}}}}HnI`}}{{{f{BDd}}c}Ad{{Cd{{Gf{Ld{f{BDf}}}}}{{Cb{}}}}HnI`}}{{{f{{Dd{{BEn{Ld}}}}}}c}Ad{{Cd{{BEn{Ld}}}{{Cb{B`}}}}HnI`}}{{{f{{Dd{{BEn{Ld}}}}}}c}Ad{{Cd{{BEn{Ld}}}{{Cb{}}}}HnI`}}{{{f{{Dd{c}}}}eBF`}{{AH`{c}}}{BFbBFd}{{Bf{}{{Bb{{Gf{LdLd}}}}}}Gj}}{{{f{{Dd{c}}}}{f{Gd}}eBF`}{{AH`{c}}}{BFbBFd}{{Bf{}{{Bb{{Gf{LdLd}}}}}}Gj}}{{{f{{l{c}}}}LdLd}{{l{c}}}C`}{{{f{BEl}}{f{{Dd{El}}}}}d}{{{f{BFf}}{f{Aj}}}Ad}{{BFhBFh}BFh}0`{{{f{BFj}}{f{B@h}}{f{Aj}}}{{Af{Ad}}}}{{{f{BFj}}}{{Af{{f{Bh}}}}}}```````````````````````{{{f{c}}h}b{}}00{{{f{BjBFl}}Gl}{{B`{b}}}}{{{f{BjBFn}}{f{Gl}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bjc}}}{{f{Bje}}}{}{}}00{{{f{BFl}}}BFl}{{{f{BFn}}}BFn}{{{f{BBd}}}BBd}{{{f{c}}{f{Bje}}}b{}{}}00{{{f{{Dd{c}}}}}Dh{{AMn{Dh}}}}{{}BBd}{Fb{{f{c}}}{}}00{Fb{{f{Bjc}}}{}}00{Fbb}00{{{f{BBd}}{f{BBd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BBd}}{f{BjFh}}}Fj}{{{Gf{{f{Dh}}Fb}}}BFl}{cc{}}{{{Gf{{f{Dh}}Fb}}}BFn}11{{eFb}BAh{{AMd{Dh}}}{{Bf{}{{Bb{{En{{Gf{Djc}}}}}}}}}}{{}Fb}00{ce{}{}}00{BFlAd}{BFnAd}{{{f{Dh}}Fb}BFl}{{{f{Dh}}Fb}BFn}{{{En{Gl}}}BBd}{{{f{BjBFl}}Fb}Ad}{{{f{BjBFn}}Fb}Ad}{{{f{{Dd{BBd}}}}{B`{Fb}}}{{Af{BAh}}}}0{{{f{{Dd{BBd}}}}{B`{Fb}}}{{Af{{En{Dh}}}}}}{{{f{c}}}e{}{}}00{c{{G`{e}}}{}{}}00000{{{f{c}}}Mh{}}00<<<{{{f{{Dd{B@h}}}}}{{Af{B@h}}}}0`````{{HhHh}Hh}{{{f{{Dd{B@h}}}}{B`{Ll}}}{{Af{{Gf{{En{AO`}}Ll}}}}}}{{{f{{BG`{Jn}}}}Ll{f{Bj{En{Hh}}}}}b}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bjc}}}{{f{Bje}}}{}{}}0{{}BGb}{Fb{{f{c}}}{}}0{Fb{{f{Bjc}}}{}}0{Fbb}0{{{f{BGb}}}Hh}{{{f{BGd}}{f{BjFh}}}Fj}{cc{}}0{{{f{BGd}}{f{Bjc}}}bAEf}``{{}Fb}0{ce{}{}}0{{{f{Bj{BGf{BGdce}}}}LdHh{f{B@h}}gi}b{}BGh{{Cd{}{{Cb{c}}}}}{{Cj{{f{Bjc}}}}}}{c{{G`{e}}}{}{}}000{{{f{c}}}Mh{}}0{{{f{BGj}}Ll{f{Bj{En{Hh}}}}}{{Af{b}}}}0{{{f{BGj}}Ll{f{Bj{Dd{Hh}}}}}{{Af{b}}}}055{{{f{BjBGb}}{f{{Dd{Db}}}}}b}{{{f{BjBGb}}K`}b}{{{f{BjBGb}}Jn}b}{{{f{BjBGb}}Kf}b}{{{f{BjBGb}}Hh}b}`````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000{{{f{{ABj{ce}}}}}{{f{e}}}{}BGl}{{{f{{ABj{c}}}}}BGn{BH`Lh}}{{{f{{ABj{ce}}}}}{}LhBGl}{{{f{{ABj{c}}}}}K`BHb}{{{f{{ABj{ce}}}}}{{f{c}}}LhBGl}{{{ABj{{BHd{c}}e}}}{{ABj{ce}}}{}BGl}{{{ABj{{Dd{{BHd{c}}}}e}}}{{ABj{{Dd{c}}e}}}{}BGl}{{{f{c}}}{{f{e}}}{}{}}0030000000000{{{f{Bjc}}}{{f{Bje}}}{}{}}000000000000{{{f{AJf}}{f{AJf}}c}{{Af{AJf}}}AJh}{{{f{{ABj{c}}}}}{{B`{{f{AGl}}}}}{AGlLh}}`{{{f{BHf}}{f{Ad}}}{{Af{Ad}}}}{{{f{BHf}}c}{{Af{Ad}}}Ab}{{{f{Mj}}}Mj}{{{f{BHh}}}BHh}{{{f{{ABj{ce}}}}}{{ABj{ce}}}Lh{BGlOb}}{{{f{Lb}}}Lb}{{{f{BCn}}}BCn}{{{f{AMh}}}AMh}{{{f{BBb}}}BBb}{{{f{Kn}}}Kn}{{{f{BHj}}}BHj}{{{f{BHl}}}BHl}{{{f{BHn}}}BHn}{{{f{c}}{f{Bje}}}b{}{}}0000000000{{{f{{ABj{ce}}}}{f{{ABj{ce}}}}}ANh{BI`Lh}BGl}{ALle{}{{AIf{c}}AGh}}0{{ALlAAn}e{}{{AIh{c}}AGh}}0{{{f{c}}{f{e}}}ANh{}{}}{{AHnB@l}AHn}{AHnAHn}{{{f{Fl}}{f{AAn}}}{{A@j{Fl}}}}{{{f{AMh}}}{{f{AAn}}}}```{{}b}{cbBGl}{{}{{ABj{c}}}BIb}{{}Lb}{{}BCn}{{}AMh}{{}BBb}{{}Kn}`{Fb{{f{c}}}{}}000{{{f{{ABj{ce}}}}}{{f{c}}}LhBGl}111111111{Fb{{f{Bjc}}}{}}000000000000{{{f{{ABj{c}}}}}{{f{Bh}}}{AGlLh}}`{{{ABj{AB`c}}}{{G`{{ABj{ec}}{ABj{AB`c}}}}}BGl{AB`HnI`}}{{{ABj{AB`c}}}{{ABj{ec}}}BGl{AB`HnI`}}{{{f{{ABj{ce}}}}}{{BId{ce}}}Lh{ObBGl}}{Fbb}00{{{f{Bj{ABj{ce}}}}}bLhBGl}1111111111{{{f{Mj}}{f{Mj}}}d}{{{f{{ABj{Fl}}}}{f{Fl}}}d}{{{f{{ABj{BIf}}}}{f{BIf}}}d}{{{f{{ABj{ce}}}}{f{{ABj{ce}}}}}d{BIhLh}BGl}{{{f{Lb}}{f{Lb}}}d}{{{f{BCn}}{f{BCn}}}d}{{{f{AMh}}{f{AMh}}}d}{{{f{BBb}}{f{BBb}}}d}{{{f{Kn}}{f{Kn}}}d}{{{f{BHn}}{f{BHn}}}d}{{{f{c}}{f{e}}}d{}{}}00000000000000000000{BHh{{Gf{KfKf}}}}`{{BBbc}BBb{{Cd{Fb{f{AMh}}}{{Cb{d}}}}}}{{AJh{f{AM`}}{f{AM`}}}{{Af{AM`}}}}{{{f{Bj{ABj{BIj}}}}}{{G`{bBIl}}}}{{{f{AHn}}{f{BjFh}}}{{G`{bAMb}}}}0{{{f{Mj}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{BHh}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{{ABj{ce}}}}{f{BjFh}}}{{G`{bAMb}}}{ABbLh}BGl}{{{f{{ABj{ce}}}}{f{BjFh}}}{{G`{bAMb}}}{BA`Lh}BGl}{{{f{{ABj{ce}}}}{f{BjFh}}}{{G`{bAMb}}}LhBGl}{{{f{Lb}}{f{BjFh}}}Fj}{{{f{BCn}}{f{BjFh}}}Fj}{{{f{AMh}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{BBb}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{Kn}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{BHj}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{BHl}}{f{BjFh}}}{{G`{bAMb}}}}{{{f{BHn}}{f{BjFh}}}{{G`{bAMb}}}}`{BIlAHn}{BInAHn}{BJ`AHn}{BJbAHn}{cc{}}0{KfMj}1{BJd{{ABj{BJf}}}}{{{f{{Dd{c}}}}}{{ABj{{Dd{c}}}}}Ob}{{{f{BJf}}}{{ABj{BJf}}}}{{{A@j{ce}}}{{ABj{ce}}}LhBGl}{c{{ABj{c}}}{}}{Dj{{ABj{Bh}}}}{{{ABj{Bh}}}{{ABj{{Dd{Db}}}}}}{{{f{Bh}}}{{ABj{Bh}}}}{{{BEn{c}}}{{ABj{{Dd{c}}}}}{}}{{{En{ce}}}{{ABj{{Dd{c}}e}}}{}{BGlOb}}{BJh{{ABj{BJj}}}}{{{AI`{c}}}{{ABj{c}}}{BJlLh}}{{{f{BJj}}}{{ABj{BJj}}}}{BJn{{ABj{BK`}}}}{{{f{BK`}}}{{ABj{BK`}}}}{cc{}}{BKbc{}}11111{{{En{AMh}}}BBb}2222{{c{B`{Gd}}}BKd{}}{{{BKf{Jn}}{BKf{Db}}{B`{Gd}}}BKh}{{{BKf{Jn}}{BKf{Db}}{B`{Gd}}}BKj}{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{e{{ABj{{Dd{c}}}}}{}{{Ff{}{{Bb{c}}}}}}{{gFb}{{BKl{Jn}}}Jj{{Ff{}{{Bb{{B`{c}}}}}}}{{Ff{}{{Bb{{B`{e}}}}}}}}0{e{{BKl{Jn}}}{{Ff{}{{Bb{{B`{d}}}}}}}{{Ff{}{{Bb{{B`{c}}}}}}}}{{gAAn}{{BKl{Jn}}}BFd{{Ff{}{{Bb{{B`{c}}}}}}}{{Ff{}{{Bb{{B`{e}}}}}}}}2{e{{ABj{{Dd{c}}}}}Hn{{Gh{}{{Bb{c}}}}}}{{}{{ABj{c}}}Lh}{c{{ABj{ec}}}BGlLh}{{{f{Bh}}}{{G`{BKn}}}}{{{f{Bh}}c}BL`{}}{{{f{{ABj{ce}}}}{f{{ABj{ce}}}}}d{BLbLh}BGl}{{{f{Bj{ABj{ce}}}}}{{B`{{f{Bjc}}}}}LhBGl}{{{f{Bj{ABj{ce}}}}}{{f{Bjc}}}LhBGl}{{{f{BBb}}}{{En{{f{Bh}}}}}}{{{f{El}}Fb}Gl}4{{{f{BLd}}}d}{{{f{{ABj{ce}}}}{f{Bjg}}}b{BLfLh}BGlAEf}{{{f{BCn}}{f{Bjc}}}bAEf}{{{f{AMh}}{f{Bjc}}}bAEf}{{{f{Kn}}{f{Bjc}}}bAEf}{{{f{BHn}}{f{Bjc}}}bAEf}{{{f{Mj}}}Kf}{{}b}{cb{ObBGl}}{{{f{BBb}}{f{Bh}}}{{B`{Fb}}}}{{{f{{Dd{Kf}}}}}{{`{{Bf{}{{Bb{Fb}}}}}}}}{{}Fb}000000000000`{{{f{BjBHh}}}{{f{BjHh}}}}`{ce{}{}}000000000000{{{ABj{ce}}}{{B`{c}}}{}BGl}{{{ABj{ce}}}{}LhBGl}{{{ABj{BLh}}}Ad}{{{f{BBb}}}d}{{{f{BHh}}}d}{{{f{Mj}}}d}`{{{f{{ABj{BIj}}}}}d}{{{f{c}}}d{}}1{{{f{{ABj{ce}}}}{f{{ABj{ce}}}}}d{BLbLh}BGl}{{{f{BBb}}}Fb}`1{{{f{AJf}}{f{AJf}}}{{Af{{Gf{AJfAJf}}}}}}{{DlDl}{{Af{{Gf{DlDl}}}}}}{{{f{Bj{ABj{ce}}}}}{{f{Bjc}}}Ob{BGlOb}}{{{f{BLj}}}Ad}0{{{f{BLl}}}Ad}``11``{{{f{{ABj{ce}}}}{f{{ABj{ce}}}}}d{BIhLh}BGl}{{BLnFb}{{B`{Fb}}}}{{{f{Bh}}c}BM`{}}{c{{ABj{c}}}{}}{{cAAnd}AMh{{AMd{Dj}}}}{e{{ABj{c}}}{}{{Ml{{f{{BId{c}}}}}{{Cb{c}}}}}}{{ce}{{ABj{ce}}}{}BGl}{{}{{ABj{{BHd{c}}}}}{}}{c{{ABj{{BHd{e}}c}}}BGl{}}{Fb{{ABj{{Dd{{BHd{c}}}}}}}{}}{{Fbc}{{ABj{{Dd{{BHd{e}}}}c}}}BGl{}}3210`{{}Mj}{{}BHh}{{{f{{ABj{ce}}}}{f{{ABj{ce}}}}}{{B`{ANh}}}{BLbLh}BGl}{c{{BMb{{ABj{c}}}}}{}}{{ce}{{BMb{{ABj{ce}}}}}{}BGl}`````{{{f{BLj}}}Ad}0{{{f{{ABj{c}}}}{f{BjBMd}}}b{AGlLh}}{{{f{{ABj{ce}}}}{f{{ABj{ce}}}}}dLhBGl}{{{f{BLl}}JfKn}{{Af{Ad}}}}{{{f{Bj{ABj{BIj}}}}{f{Bj{Dd{Db}}}}}{{G`{FbBIl}}}}{{{f{Bj{ABj{BIj}}}}BMf}{{G`{bBIl}}}}{{{f{Bj{ABj{BIj}}}}{f{Bj{En{Db}}}}}{{G`{FbBIl}}}}{{{f{Bj{ABj{BIj}}}}{f{BjDj}}}{{G`{FbBIl}}}}{{{f{Bj{ABj{BIj}}}}{f{Bj{Dd{BMh}}}}}{{G`{FbBIl}}}}`{{{f{Bj{ABj{BIj}}}}BMj}{{G`{HhBIl}}}}`{{{f{AHd}}FbFb}AHd}0{{{f{{ABj{c}}}}}{{B`{{f{AGl}}}}}{AGlLh}}{{{f{BMl}}Db}Ad}{{KfKf}BHh}`{{{f{{ABj{ce}}}}}FbLhBGl}{{{f{BLj}}}Lf}0{{{f{Mj}}}{{B`{Kf}}}}{{{f{c}}}e{}{}}0000000000{{{f{c}}}Dj{}}0{ALl{{G`{eg}}}{}{{AIf{c}}AGh}{}}0{{ALlAAn}{{G`{eg}}}{}{{AIh{c}}AGh}{}}0{c{{G`{e}}}{}{}}00{{{ABj{{Dd{c}}e}}}{{G`{{ABj{{BEn{c}}e}}}}}{}BGl}11111111111111111111111{{BLnFb}{{G`{FbAHn}}}}{c{{G`{{ABj{c}}BMn}}}{}}{{ce}{{G`{{ABj{ce}}BMn}}}{}BGl}{{}{{G`{{ABj{{BHd{c}}}}BMn}}}{}}{c{{G`{{ABj{{BHd{e}}c}}BMn}}}BGl{}}10{c{{G`{{BMb{{ABj{c}}}}BMn}}}{}}{{ce}{{G`{{BMb{{ABj{ce}}}}BMn}}}{}BGl}{{{ABj{ce}}}{{G`{c{ABj{ce}}}}}{}BGl}{{{f{c}}}Mh{}}000000000000{{{ABj{ce}}}cObBGl}`{{{f{BMl}}Db}Ad}{ce{}{}}000000000000{{{f{{ABj{ce}}}}}FbLhBGl}``{{AMh{BN`{DjDj}}}AMh}{{BBb{BN`{DjDj}}}BBb}{{{f{Bj{ABj{BIj}}}}{f{{Dd{Db}}}}}{{G`{FbBIl}}}}{{{f{Bj{ABj{BIj}}}}{f{{Dd{BNb}}}}}{{G`{FbBIl}}}}```````{{c{B`{Gd}}}BKd{}}{{{BKf{Jn}}{BKf{Db}}{B`{Gd}}}BKh}{{{BKf{Jn}}{BKf{Db}}{B`{Gd}}}BKj}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{BNd{B`{{f{AAn}}}}}{{G`{{BKl{Jn}}AHn}}}}{cc{}}{{}Fb}{ce{}{}}{{{f{BNd}}}d}{FbBNd}{{{f{BNd}}}{{f{{Dd{Jn}}}}}}{{{f{BjBNd}}{f{Fl}}}b}{{{f{BjBNd}}}b}{{{f{BjBNd}}{f{{Dd{{A@j{Fl}}}}}}}b}1{{{f{BjBNd}}{B`{{f{Fl}}}}}b}{BNd{{BNf{Jn}}}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}:`{{{f{c}}h}b{}}{{{f{BNh}}}{{f{AB`}}}}{{{f{BjBNh}}}{{A@j{Fl}}}}{{{f{BjBNh}}}{{f{BjAB`}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{BNh}}}BNh}{{{f{c}}{f{Bje}}}b{}{}}{{{f{BNh}}}{{f{AAn}}}}{{}BNh}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{BjBNh}}Fb}b}{{{f{BNh}}{f{BjFh}}}{{G`{bAMb}}}}{cc{}}{{}Fb}{ce{}{}}{{{f{BNh}}}Fb}{FbBNh}{{{f{BjBNh}}}b}70{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}{{{f{BNh}}}{{B`{{f{BNj}}}}}}7```````{{{f{AHd}}FbFb}AHd}0`{{}b}0{{}d}``{{eFbFb}{{BNl{Jn}}}{{Jj{Bh}}}{{Bf{}{{Bb{c}}}}}}{{eFbFb}{{BG`{Jn}}}{{Jj{{Dd{Db}}}}}{{Bf{}{{Bb{c}}}}}}{Hhb}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{BAh}}}BAh}{{{f{c}}{f{Bje}}}b{}{}}{{{f{BAh}}{f{Bh}}}d}{{}BAh}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{BAh}}{f{BAh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BAh}}{f{BjFh}}}Fj}{{{f{{Dd{Ad}}}}}BAh}{{{f{BBb}}}BAh}{cc{}}{BBbBAh}{{{f{BNn}}}BAh}{{{f{BBd}}}BAh}{BNnBAh}{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{eBAh{{AMd{L`}}}{{Ff{}{{Bb{c}}}}}}{{{f{BAh}}{f{Bh}}}{{B`{{f{Dh}}}}}}{{{f{BAh}}Fb}{{B`{{Gf{{f{AN`}}{f{Dh}}}}}}}}{{{f{BjBAh}}Fb}{{B`{{Gf{{f{BjAN`}}{f{BjDh}}}}}}}}{{{f{BAh}}{f{Bh}}}{{B`{L`}}}}{{{f{BAh}}{f{Bh}}}{{B`{{Gf{Fb{f{AN`}}{f{Dh}}}}}}}}{{{f{BO`}}}{{En{{f{Bh}}}}}}{{{f{BAh}}}{{En{{f{Bh}}}}}}{{{f{BAh}}{f{Bjc}}}bAEf}{{{f{BO`}}{f{Bh}}}{{B`{Fb}}}}{{{f{BAh}}{f{Bh}}}{{B`{Fb}}}}{{}Fb}{{{f{BjBAh}}FbAN`Dh}{{Af{{B`{Dh}}}}}}{ce{}{}}{BAhc{}}{{{f{BAh}}}d}{{{f{BAh}}}{{`{{Bf{}{{Bb{{Gf{{f{AN`}}{f{Dh}}}}}}}}}}}}{{{f{BAh}}}{{`{{Ib{}{{Bb{{f{Dh}}}}}}}}}}{{{f{BjBAh}}}{{`{{Ib{}{{Bb{{f{BjDh}}}}}}}}}}{{{f{BAh}}}{{`{{Ib{}{{Bb{L`}}}}}}}}{{{f{BAh}}}{{`{{Ib{}{{Bb{{f{AN`}}}}}}}}}}{{{f{BAh}}}Fb}{{{f{BjBAh}}BAh}b}{{}BAh}{{{f{BAh}}FbAN`Dh}{{Af{BAh}}}}{{{f{BjBAh}}{f{Bh}}}{{B`{Dh}}}}{{{f{BjBAh}}{f{Bh}}AN`}{{B`{AN`}}}}{{{f{BjBAh}}{f{Bh}}Dh}{{B`{Dh}}}}{{{f{BjBAh}}FbDh}{{B`{Dh}}}}3{{{f{BjBAh}}Fb}{{B`{{Gf{AN`Dh}}}}}}{{{f{BAh}}d}BBb}{{{f{c}}}e{}{}}{{{f{BjBAh}}{f{BAh}}}{{Af{d}}}}{c{{G`{e}}}{}{}}{{{f{BAh}}{f{Bh}}}{{Af{{f{Dh}}}}}}{{{f{BAh}}Fb}{{Af{{Gf{{f{AN`}}{f{Dh}}}}}}}}{{{f{BAh}}{f{Bh}}}{{Af{L`}}}}{{{f{BAh}}{f{Bh}}}{{Af{{Gf{Fb{f{AN`}}{f{Dh}}}}}}}}{{{f{BjBAh}}{f{Bh}}}{{Af{{f{BjDh}}}}}}{{{f{BO`}}{f{Bh}}}{{Af{Fb}}}}6{{{f{c}}}Mh{}}{ce{}{}}{FbBAh}{{{f{BjBAh}}AN`Dh}{{B`{Dh}}}}``````````````{{{f{c}}h}b{}}0{{{f{BLh}}}{{Af{Lf}}}}0{{{f{Bh}}{En{El}}{f{AAn}}}{{Af{Ad}}}}{{{f{Bh}}{En{El}}{f{AAn}}{B`{{f{BOb}}}}}{{Af{Ad}}}}{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`Jd}{}}{{{f{Ad}}c}e{A`Jd}{}}{{{f{BjAd}}{f{Ad}}}{{Af{{f{BjAd}}}}}}{{{f{BLh}}Dn}E`}0{{{f{BLh}}}{{Af{E`}}}}0`{{{f{Ad}}Fb}{{f{El}}}}{{{f{BLh}}}{{f{AB`}}}}{{{f{BjBLh}}}{{f{BjAB`}}}}0{{{f{Ad}}}Dl}{{{f{BjBLh}}}{{f{Bj{l{c}}}}}C`}{{{f{BLh}}}{{f{{l{c}}}}}C`}{{{f{Ad}}}{{f{BLh}}}}{{{f{BjBLh}}}{{Af{Fb}}}}0{{{f{BjAd}}}{{Af{Fb}}}}{{{f{Ad}}}{{Af{{f{Ed}}}}}}{{{f{Ad}}}{{Af{{f{AHj}}}}}}{{{f{BLh}}{f{Ad}}}{{Af{Ad}}}}00000{{{f{Ad}}}{{Af{{f{Fd}}}}}}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bjc}}}{{f{Bje}}}{}{}}00{{{f{BLh}}{f{Dh}}}{{Af{Ad}}}}{{{f{Ad}}{f{Dh}}}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{{f{AJf}}}}}}66{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ad}}c}{{Af{Ad}}}Ab}{{{f{BLh}}}Ej}{{{f{BLh}}}{{f{{En{El}}}}}}{{{f{BjBLh}}}{{f{Bj{En{El}}}}}}{{{f{BjAd}}}{{f{Bj{En{El}}}}}}{{{f{Ad}}}Ad}{{{f{Hd}}}Hd}1{{{f{BLh}}}{{ABj{BLh}}}}{{{f{c}}{f{Bje}}}b{}{}}0{{{f{BjAd}}}b}{{{f{Ad}}}{{Af{{f{Hl}}}}}}{{}Ad}{Fb{{f{c}}}{}}00{{{f{Ad}}}{{f{c}}}{}}{Fb{{f{Bjc}}}{}}00{{AdAd}c{}}{{Adc}e{A`Jd}{}}{{{f{Ad}}c}e{A`Jd}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}{f{Ad}}}{{Af{Jf}}}}{Fbb}00{{{f{BLh}}}Ad}0{{{f{BLh}}}{{f{Dh}}}}0{{{f{Hd}}{f{Hd}}}d}{{{f{Ad}}{f{Ad}}}d}{{{f{Ad}}{f{Bh}}}{{Af{Fd}}}}{{{f{Ad}}{f{Ad}}}{{Af{Fd}}}}{{{f{Ad}}c}{{Af{Fd}}}AMf}1{{{f{Ad}}c}eAMf{}}{{{f{Ad}}{f{Bh}}}c{}}55{{{f{c}}{f{e}}}d{}{}}00{{{f{Ad}}}Fb}{{{f{Ad}}}{{Af{Ad}}}}{{{f{BjAd}}{f{Ad}}}{{Af{{f{BjAd}}}}}}{{{f{Ad}}GlFb}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{AIb}}}}}}{{{f{Ad}}}{{Af{{f{AId}}}}}}{{{f{BLh}}}{{AI`{L`}}}}0{{{f{Ad}}ADd}{{Af{Ad}}}}{{{f{BLh}}{f{Fd}}}{{Af{Ad}}}}{{{f{Ad}}{f{Fd}}d}{{Af{Ad}}}}{{{f{Hd}}{f{BjFh}}}Fj}{{{f{Ad}}{f{BjFh}}}Fj}0{{{f{Ad}}}Dj}{cc{}}0{{{l{c}}}AdC`}1{{{f{Bh}}{f{{Dd{Gl}}}}d}{{Af{Ad}}}}{{{f{Bh}}{f{{Dd{Gl}}}}{f{Dh}}d}{{Af{Ad}}}}{{{f{Bh}}El}{{Af{Ad}}}}{{{f{Bh}}{En{El}}{f{Dh}}}Ad}{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{cAd{{Ff{}{{Bb{{f{Bh}}}}}}}}{cAd{{Ff{}{{Bb{Dj}}}}}}{cAd{{Ff{}{{Bb{{B`{Hf}}}}}}}}{cAd{{Ff{}{{Bb{{B`{Hh}}}}}}}}{cAd{{Ff{}{{Bb{{f{Jf}}}}}}}}{cAd{{Ff{}{{Bb{Jn}}}}}}{cAd{{Ff{}{{Bb{{B`{Jf}}}}}}}}{cAd{{Ff{}{{Bb{{f{Hh}}}}}}}}{cAd{{Ff{}{{Bb{{B`{Kf}}}}}}}}{cAd{{Ff{}{{Bb{Jf}}}}}}{cAd{{Ff{}{{Bb{{f{Jn}}}}}}}}{cAd{{Ff{}{{Bb{{f{Hf}}}}}}}}{cAd{{Ff{}{{Bb{d}}}}}}{cAd{{Ff{}{{Bb{{B`{Jn}}}}}}}}{cAd{{Ff{}{{Bb{Hh}}}}}}{cAd{{Ff{}{{Bb{Hf}}}}}}{cAd{{Ff{}{{Bb{{f{Kf}}}}}}}}{cAd{{Ff{}{{Bb{{f{K`}}}}}}}}{cAd{{Ff{}{{Bb{K`}}}}}}{cAd{{Ff{}{{Bb{{f{d}}}}}}}}{cAd{{Ff{}{{Bb{{B`{d}}}}}}}}{cAd{{Ff{}{{Bb{{B`{K`}}}}}}}}{cAd{{Ff{}{{Bb{Kf}}}}}}{{{f{Bh}}{En{Hf}}}Ad}{{{f{Bh}}{En{Kf}}}Ad}{{{f{Bh}}{En{Jn}}}Ad}{{{f{Bh}}{En{Jf}}}Ad}{{{f{Bh}}{En{Hh}}}Ad}{{{f{Bh}}{En{K`}}}Ad}{{{f{Bh}}Fb{f{Dh}}}Ad}{{{f{Ad}}FbFb}Ad}{{{f{BLh}}Fb}{{Af{Gl}}}}{{{f{Ad}}}Fb}{{{f{Ad}}}An}{{{f{BLh}}Fb}{{B`{{f{H`}}}}}}0{{{f{BLh}}FbFb}{{B`{{f{H`}}}}}}0{{{f{BLh}}Fb}Gl}0{{{f{Ad}}c}{{Af{Fd}}}AMf}{{{f{Ad}}{f{Ad}}}{{Af{Fd}}}}{{{f{Ad}}{f{Bh}}}{{Af{Fd}}}}2{{{f{Ad}}{f{Bh}}}c{}}2{{{f{BLh}}}d}{{{f{Hd}}{f{Bjc}}}bAEf}{{{f{Ad}}{B`{Fb}}}Ad}{{{f{Ad}}}{{Af{{f{AOd}}}}}}{{{f{Ad}}}{{Af{{f{AOf}}}}}}{{{f{Ad}}}{{Af{{f{AOh}}}}}}{{{f{Ad}}}{{Af{{f{AOb}}}}}}{{{f{Ad}}}{{Af{{f{E`}}}}}}`{{{f{Ad}}}{{Af{Dl}}}}{{}Fb}00{ce{}{}}00{AdB@h}1{BAjAd}{AdAd}=={{{f{Ad}}}{{Af{Fd}}}}000{{{f{BLh}}}Fd}0{{}d}00{{{f{Ad}}}Hd}{{{f{Ad}}}BOd}{{{f{BLh}}}Fb}{{{f{BLh}}Fb}Ad}0{{{f{Ad}}}{{Af{{f{Dl}}}}}}{{{f{Ad}}c}{{Af{Fd}}}AMf}{{{f{Ad}}{f{Bh}}}c{}}{{{f{Ad}}{f{Ad}}}{{Af{Fd}}}}012{{{f{Ad}}}{{Af{{B`{c}}}}}Jd}{{{f{BLh}}}{{Af{Ad}}}}0{{{f{BLh}}}{{B`{Jf}}}}0{{{f{Ad}}}Ad}1122322{{AdAd}c{}}{{Adc}e{A`Jd}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}c}e{A`Jd}{}}=={{{f{BLh}}}{{Af{Fb}}}}0{{{f{BLh}}}{{f{Bh}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{K`}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{Jn}}}}}}{{{f{Bh}}{f{Ad}}}Ad}{{{f{Bh}}c}Ad{{Jj{{Dd{Hf}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{Gl}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{{f{Bh}}}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{{B`{d}}}}}}}}{{{f{Bh}}{Kb{Kf}}}Ad}{{{f{Bh}}c}Ad{{Jj{{Dd{{B`{Jn}}}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{Jf}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{{B`{Hh}}}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{{AI`{{Dd{Db}}}}}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{{B`{Hf}}}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{{B`{Ad}}}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{Ad}}}}}}{{{f{Bh}}{Kb{K`}}}Ad}{{{f{Bh}}c}Ad{{Jj{{Dd{{B`{{f{Bh}}}}}}}}}}{{{f{Bh}}{Kb{Hh}}}Ad}{{{f{Bh}}c}Ad{{Jj{{Dd{{B`{Jf}}}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{{B`{K`}}}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{{En{Db}}}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{{B`{{AI`{Bh}}}}}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{{B`{{En{Db}}}}}}}}}}{{{f{Bh}}{Kb{Jn}}}Ad}{{{f{Bh}}c}Ad{{Jj{{Dd{{B`{{AI`{{Dd{Db}}}}}}}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{{B`{{f{{Dd{Db}}}}}}}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{{AI`{Bh}}}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{{f{{Dd{Db}}}}}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{d}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{Hh}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{{B`{Kf}}}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{Dj}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{{B`{Dj}}}}}}}}{{{f{Bh}}c}Ad{{Jj{{Dd{Kf}}}}}}{{{f{Bh}}c}AdBAj}{{{f{Bh}}{f{Dh}}}Ad}{{{f{BLh}}FbFb}Ad}{{{f{Bh}}Fb}Ad}{{{f{BjBOd}}}{{B`{c}}}{}}{{{f{Ad}}{f{Ad}}}{{Af{Fd}}}}{{{f{Ad}}{f{Bh}}}{{Af{Fd}}}}{{{f{Ad}}c}{{Af{Fd}}}AMf}2{{{f{Ad}}{f{Bh}}}c{}}{{{f{Ad}}c}eAMf{}}{{{f{Ad}}}{{Af{{f{`}}}}}}{{{f{BLh}}}Fb}`{{{f{Ad}}}BOf}{{{f{Ad}}}{{Af{Ad}}}}{{{f{BLh}}JfKn}{{Af{Ad}}}}0{{{f{BLh}}}Ad}{{{f{Ad}}c}e{A`Jd}{}}{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`Jd}{}}{{{f{BjBLh}}{f{Bh}}}b}{{{f{BjAd}}{f{Bh}}}{{f{BjAd}}}}{{{f{Ad}}{f{{Dd{Jn}}}}}{{Af{Ad}}}}6{HdHd}{{{f{BLh}}{f{Cd}}Lb}{{Af{Ad}}}}0{{{f{Ad}}Jfdd{B`{Hh}}}{{Af{Ad}}}}{{{f{Ad}}Fbdd{B`{Hh}}}{{Af{Ad}}}}{{{f{BjAd}}Hd}b}{{{f{BLh}}Jn}Ad}{{{f{BjBLh}}}b}0{{{f{BjAd}}}b}{{{f{Ad}}{B`{Hh}}}Ad}{{{f{BOd}}}{{Gf{Fb{B`{Fb}}}}}}{{{f{BLh}}JnFb}Ad}{{{f{Ad}}Dn}{{Af{Ad}}}}{{{f{BLh}}Dn}{{Af{Ad}}}}0{{{f{BLh}}Db}{{B`{Jf}}}}0{{{f{BLh}}Db}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{{f{Md}}}}}}{{{f{Ad}}Fb}{{Af{{AI`{Bh}}}}}}{{{f{Ad}}{f{Dh}}}{{Af{Ad}}}}{{Adc}e{A`Jd}{}}{{{f{Ad}}c}e{A`Jd}{}}{{{f{Ad}}{f{Ad}}}c{}}{{AdAd}c{}}{{{f{Ad}}}{{Af{c}}}Jd}{{{f{Ad}}}{{Af{Lf}}}}{{{f{Ad}}{B`{Fb}}}Ad}{{{f{BLh}}{f{E`}}}{{Af{Ad}}}}{{{f{BLh}}{f{{Dd{Ld}}}}}{{Af{Ad}}}}{{{f{BLh}}{f{{Dd{Ld}}}}}Ad}{{{f{Ad}}{f{{Dd{Ld}}}}d}Ad}{{{f{Ad}}{f{E`}}d}{{Af{Ad}}}}{{{f{BLh}}{f{E`}}}Ad}{{{f{Ad}}{f{{Dd{Ld}}}}}Ad}{{{f{Ad}}{f{E`}}d}Ad}{{{f{Ad}}Fbd}El}{{{f{Ad}}}{{Af{Ad}}}}{{{f{c}}}e{}{}}0{{{f{Ad}}}{{AI`{Ad}}}}{{{f{c}}}Dj{}}{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{c{{G`{e}}}{}{}}0{{{Gf{{f{Bh}}El}}}{{Af{Ad}}}}1{{{Gf{{f{AMh}}El}}}{{Af{Ad}}}}{{{Gf{{f{AMh}}{En{El}}}}}{{Af{Ad}}}}{{{Gf{{f{Bh}}{En{El}}}}}{{Af{Ad}}}}444{{{f{c}}}Mh{}}00{{{f{Ad}}}{{Af{{f{ANn}}}}}}{{{f{Ad}}}{{Af{{f{AM`}}}}}}{{{f{Ad}}}{{Af{{f{AO`}}}}}}{{{f{Ad}}}{{Af{{f{ANl}}}}}}{{{f{BLh}}}{{Af{Ad}}}}0?{{{f{BLh}}}{{Af{{f{{l{c}}}}}}}C`}`{{{f{BLh}}Db}{{B`{Jf}}}}0{{{f{BLh}}Db}{{Af{Ad}}}}0{ce{}{}}00{{Ad{f{Bh}}}Ad}{{{f{Ad}}c}Ad{A`Jd}}{{{f{Ad}}{f{Fd}}{f{Ad}}}{{Af{Ad}}}}````{{{BOh{}{{Cb{c}}}}{f{Ad}}}c{}}{{{f{BOj}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Ah}}}}{f{Ad}}}{{Af{Ad}}}}0`2100210021002100``{{{f{BHf}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Eh}}}}{f{Ad}}}{{Af{Ad}}}}0{{{f{BHf}}c}{{Af{Ad}}}Ab}{{{f{{l{Eh}}}}c}{{Af{Ad}}}Ab}0```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{BOl}}}BOl}{{{f{c}}{f{Bje}}}b{}{}}{{}BOl}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{{{f{BOl}}{f{BOl}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BOl}}{f{BjFh}}}Fj}{cc{}}{{{f{BOl}}{f{Bjc}}}bAEf}{{}Fb}{ce{}{}}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}3``{{{f{c}}h}b{}}{{{f{BjCh}}}{{f{BjAd}}}}{{{f{Ch}}}{{f{Ad}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bjc}}}{{f{Bje}}}{}{}}{{{f{Ch}}}Ch}{{{f{c}}{f{Bje}}}b{}{}}{{{f{Ch}}}Ad}{Fb{{f{c}}}{}}{Fb{{f{Bjc}}}{}}{Fbb}{cc{}}{{}Fb}{ce{}{}}{{{f{BjAd}}}Ch}{{{f{BjCh}}{f{BjEl}}}b}{{{f{c}}}e{}{}}{c{{G`{e}}}{}{}}0{{{f{c}}}Mh{}}5{{{f{BjCh}}{f{BjEl}}e}c{}{{Cd{{f{Ch}}}{{Cb{c}}}}}}````````{{{f{c}}h}b{}}8{{{En{B@h}}}{{Af{B@h}}}}{c{{Af{B@h}}}{{Ff{}{{Bb{B@h}}}}}}{cB@h{{Ff{}{{Bb{B@h}}}}}}{c{{B`{B@h}}}{{Ff{}{{Bb{B@h}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Gf{{AI`{{l{c}}}}{AI`{{l{e}}}}}}}C`C`}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Gf{{AI`{{l{c}}}}{AI`{{l{e}}}}{AI`{{l{g}}}}}}}C`C`C`}{{{f{BjBOn}}}d}{c{{Af{Dh}}}{{Ff{}{{Bb{{f{Gl}}}}}}}}{c{{Af{{Gf{DhFb}}}}}{{Ff{}{{Bb{{f{Gl}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{B`{Gd}}}C`C`}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bjc}}}{{f{Bje}}}{}{}}00{{{f{{C@`{ec}}}}}{{C@`{ec}}}Ob{Ob{Bf{}{{Bb{c}}}}}}{{{f{c}}{f{Bje}}}b{}{}}{{{f{{l{c}}}}{f{{l{c}}}}}{{Gf{{AI`{{l{c}}}}{AI`{{l{c}}}}}}}C`}{{{f{Ad}}{f{Ad}}}{{Gf{AdAd}}}}{BOne{}{{C@b{c}}}}{BOne{}{{C@d{c}}}}{c{{Af{B@h}}}{{Ff{}{{Bb{{f{B@h}}}}}}}}{cB@h{{Ff{}{{Bb{{f{B@h}}}}}}}}{{{f{BjBOn}}{f{c}}}dBIh}{{{f{{C@f{c}}}}}{{f{e}}}{}{}}{Fb{{f{c}}}{}}{{{f{{AHf{c}}}}}{{f{e}}}{}{}}11{Fb{{f{Bjc}}}{}}{{{f{Bj{AHf{c}}}}}{{f{Bje}}}{}{}}11{Fbb}00{cBAh{{Ff{}{{Bb{Dh}}}}}}{c{{Af{Dh}}}{{Ff{}{{Bb{{f{Dh}}}}}}}}{{{f{Ad}}{f{Bh}}}{{Af{b}}}}{{{f{{C@f{Ad}}}}{f{{C@f{Ad}}}}}d}{{{f{c}}{f{e}}}d{}{}}00`{{{f{BjBOn}}cg}{{B`{c}}}{}{}{{Cj{ce}{{Cb{c}}}}}}{cc{}}00{g{{G`{ic}}}{}{}{{Gb{c}{{Bb{e}}}}}{}}{c{{AHf{{l{e}}}}}{{Ff{}{{Bb{}}}}}n}{c{{AHf{Fd}}}{{Ff{}{{Bb{d}}}}}}{eC@d{}{{Ff{}{{Bb{c}}}}}}21{c{{AHf{{l{e}}}}}{{Gh{}{{Bb{}}}}}n}{c{{AHf{{l{e}}}}}{{Gj{}{{Bb{}}}}}n}{c{{AHf{Fd}}}{{Gj{}{{Bb{d}}}}}}{{{f{Dh}}{f{Dh}}}{{B`{Dh}}}}{{{f{AKb}}{f{AKb}}}AKb}{{{f{Ad}}{f{Ad}}}{{Af{b}}}}{{{f{{C@f{Ad}}}}{f{Bjc}}}bAEf}{{}Fb}00{ce{}{}}00{{{AHf{c}}}c{}}1{BCf{{En{c}}}{}}{c{{En{{C@j{C@h}}}}}{}}{c{{En{Dj}}}{}}{BAdGl}{c{{AHf{c}}}{}}{{eFb}{{C@`{ec}}}{}{{Bf{}{{Bb{c}}}}}}{{{f{Bj{C@`{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}}}{{{f{Bj{C@`{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}F`}}`{{{f{{C@`{ec}}}}}{{Gf{Fb{B`{Fb}}}}}{}{{Bf{}{{Bb{c}}}}}}{{{f{{Dd{c}}}}JnFb}{{f{{Dd{c}}}}}{}}{{{f{{l{c}}}}Fb}{{Af{{En{{l{c}}}}}}}C`}{{{f{B@h}}Fbd}{{En{B@h}}}}{{{f{c}}}e{}{}}{{BOnFb}{{C@`{BOnc}}}{}}{c{{G`{e}}}{}{}}00{{{f{Dh}}{f{Dh}}}{{Af{Dh}}}}111{{{f{c}}}Mh{}}00{ce{}{}}00{{{f{Dh}}e}c{}{{Cd{{f{BjCh}}}{{Cb{c}}}}}}{{{f{{Dd{{En{c}}}}}}}{{Gf{Fb{En{Fb}}}}}{}}{{{f{B@h}}}{{`{{Bf{}{{Bb{B@h}}}}}}}}{{{f{{Dd{c}}}}}{{AH`{Ld}}}{{Jj{{Dd{Mj}}}}HnI`}}{{{f{{Dd{e}}}}}{{En{c}}}{HnI`Cf}{{Jj{{Dd{c}}}}}}{{{f{Ad}}}{{En{Ad}}}}","D":"IGh","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",4922],[5,"ListType",1230],[5,"ChunkedArray",39],[10,"PolarsNumericType",1230],[10,"Num",4923],[10,"ToPrimitive",4924],[5,"Series",4343],[8,"PolarsResult",3636,4925],[10,"NumOpsDispatchInner",4724,4926],[6,"GroupsProxy",3238,4927],[5,"BooleanType",1230],[5,"Settings",39],[6,"Option",4928],[17,"Item"],[8,"ArrayBox",4783],[10,"Iterator",4929],[1,"str"],[0,"mut"],[17,"IsNested"],[5,"FalseT",1230],[10,"PolarsDataType",1230],[17,"Output"],[10,"Fn",4930],[10,"Copy",4931],[5,"UnstableSeries",4783],[10,"FnMut",4930],[5,"Float32Type",1230],[5,"Float64Type",1230],[5,"BinaryType",1230],[1,"u8"],[1,"slice"],[5,"StringType",1230],[6,"DataType",1230,4932],[5,"String",4933],[8,"ListChunked",1230],[5,"SortOptions",1148],[8,"IdxCa",1230,4934],[5,"SortMultipleOptions",1148],[8,"BinaryChunked",1230],[10,"PolarsIntegerType",1230],[10,"NumOpsDispatchCheckedInner",4749,4935],[8,"ChunkIdIter",39],[8,"ArrayRef",3636,4936],[5,"Vec",4937],[10,"DoubleEndedIterator",4938],[1,"usize"],[8,"BooleanChunked",1230],[10,"IntoIterator",4939],[5,"Formatter",4940],[8,"Result",4940],[10,"Array",4936],[17,"Array"],[6,"Result",4941],[10,"FallibleIterator",4942],[5,"Bitmap",4943],[1,"tuple"],[10,"IntoParallelIterator",4944],[10,"TrustedLen",4945],[6,"AnyValue",1230,4946],[5,"ObjectType",1230],[10,"PolarsObjectSafe",821],[10,"PolarsObject",821],[6,"IsSorted",4343,4947],[1,"f32"],[1,"u64"],[5,"Int128Type",1230],[8,"DecimalChunked",1230,4948],[10,"Send",4931],[10,"Sync",4931],[10,"ExactSizeIterator",4949],[10,"PolarsFloatType",1230],[10,"PolarsIterator",782],[5,"Iter",4950],[5,"IterNames",4950],[5,"Iter",4951],[1,"fn"],[5,"Map",4952],[6,"ChunkedArrayLayout",39],[10,"NumCast",4924],[1,"f64"],[5,"UInt64Type",1230],[10,"AsRef",4953],[5,"Int64Type",1230],[1,"i64"],[1,"i32"],[5,"Range",4954],[5,"Int32Type",1230],[1,"u32"],[5,"UInt32Type",1230],[10,"ParallelIterator",4944],[10,"IndexedParallelIterator",4944],[6,"QuantileInterpolOptions",3636,4955],[5,"Field",1230,4956],[5,"RollingOptionsFixedWindow",3636,4957],[8,"IdxSize",3636,4958],[5,"Scalar",1230,4946],[10,"Sized",4931],[17,"HasViews"],[5,"RandomState",4959],[5,"BytesHash",4960],[8,"ArrayView1",4961],[8,"Array2",4961],[8,"StringChunked",1230],[6,"Either",4962],[5,"TypeId",4963],[5,"NullableIdxSize",3636,4958],[10,"FnOnce",4930],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",476,4964],[10,"ChunkedBuilder",504],[5,"BinViewChunkedBuilder",504,4965],[10,"ViewType",4966],[5,"BooleanChunkedBuilder",504,4967],[5,"NullChunkedBuilder",504,4968],[5,"PrimitiveChunkedBuilder",504,4969],[10,"Clone",4970],[8,"StringChunkedBuilder",504,4965],[8,"BinaryChunkedBuilder",504,4965],[10,"NewChunkedArray",504],[5,"AnonymousListBuilder",608,4971],[5,"AnonymousOwnedListBuilder",608,4971],[5,"ListBooleanChunkedBuilder",608,4972],[5,"ListPrimitiveChunkedBuilder",608,4973],[10,"ListBuilderTrait",608],[5,"ListStringChunkedBuilder",608,4974],[5,"ListBinaryChunkedBuilder",608,4974],[5,"ListNullChunkedBuilder",608,4975],[5,"Box",4976],[10,"ChunkedCollectInferIterExt",762],[10,"ChunkedCollectIterExt",762],[10,"Canonical",776],[10,"ChunkedCollectParIterExt",778],[10,"FromParIterWithDtype",778],[5,"BooleanArray",4977],[5,"BoolIterNoNull",782],[5,"SomeIterator",782],[5,"ObjectArray",821],[6,"ArrowDataType",1230,4978],[10,"Any",4963],[10,"Debug",4940],[8,"ObjectValueIter",821],[5,"BitmapIter",4979],[6,"ZipValidity",4980],[5,"Arc",3636,4981],[5,"ObjectChunkedBuilder",892],[8,"ObjectChunked",1230],[10,"AnonymousObjectBuilder",915],[5,"ObjectRegistry",915],[8,"ObjectConverter",915],[8,"BuilderConstructor",915],[17,"FuncRet"],[10,"ChunkApply",943],[10,"ChunkApplyKernel",943],[10,"ChunkSort",943],[10,"ChunkUnique",943],[10,"ChunkCast",943],[6,"FillNullStrategy",943],[10,"ChunkCompare",943],[10,"ChunkExplode",943],[5,"OffsetsBuffer",4982],[10,"ChunkFillNullValue",943],[10,"ChunkFilter",943],[10,"ChunkFull",943],[10,"ChunkFullNull",943],[10,"ChunkAnyValue",943],[10,"Hasher",4983],[10,"IsFirstDistinct",943],[10,"IsLastDistinct",943],[10,"ChunkAgg",943],[10,"ChunkQuantile",943],[10,"ChunkExpandAtIndex",943],[10,"ChunkReverse",943],[10,"ChunkRollApply",943],[10,"ChunkSet",943],[10,"ChunkShift",943],[10,"ChunkShiftFill",943],[10,"ChunkVar",943],[10,"ChunkTake",943],[10,"ChunkTakeUnchecked",943],[10,"ChunkBytes",943],[10,"ChunkZip",943],[10,"BinaryFnMut",1064],[10,"StaticArray",1230,4984],[10,"TernaryFnMut",1064],[10,"Error",4985],[10,"UnaryFnMut",1064],[5,"PrimitiveArray",4986],[6,"SearchSortedSide",1104],[10,"SlicedArray",3636,4987],[5,"NoNull",4807],[5,"RowsEncoded",4988],[8,"BinaryOffsetChunked",1230],[5,"NaiveDateTime",4989],[6,"PolarsError",3636,4925],[6,"Cow",4990],[8,"Float32Chunked",1230],[8,"Float64Chunked",1230],[10,"ArrayFromIter",1230,4991],[10,"ArrayFromIterDtype",1230,4991],[10,"AsRefDataType",1230,4932],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",4992],[10,"From",4953],[5,"CategoricalChunked",2620,4993],[10,"CategoricalMergeOperation",2620,4994],[10,"LogicalType",1230,4995],[5,"Logical",1230,4995],[5,"OwnedObject",1230,4946],[6,"UnknownKind",1230,4932],[6,"TimeUnit",1230,4996],[5,"UInt8Type",1230],[5,"UInt16Type",1230],[5,"Int8Type",1230],[5,"Int16Type",1230],[5,"DateType",1230],[5,"TimeType",1230],[5,"BinaryOffsetType",1230],[5,"DecimalType",1230],[5,"DatetimeType",1230],[5,"DurationType",1230],[5,"CategoricalType",1230],[6,"ArrowTimeUnit",1230],[10,"ArrayCollectIterExt",3636,4991],[8,"Utf8ViewArray",4966],[8,"UInt32Chunked",1230],[5,"Error",4940],[10,"Into",4953],[10,"NumericNative",1230],[5,"ArrowField",3636],[6,"PrimitiveType",4997],[6,"IntegerType",4998],[10,"Borrow",4999],[8,"String",5000],[10,"NoOption",5001],[10,"GetAnyValue",1230,4946],[8,"Int128Chunked",1230],[6,"Ordering",5002],[6,"PhysicalType",4998],[8,"UInt8Chunked",1230],[8,"UInt16Chunked",1230],[8,"UInt64Chunked",1230],[8,"Int8Chunked",1230],[8,"Int16Chunked",1230],[8,"Int32Chunked",1230],[8,"Int64Chunked",1230],[8,"PlIdHashMap",1230,4934],[5,"CategoricalChunkedBuilder",2620,5003],[5,"GlobalRevMapMerger",2620,4994],[6,"RevMapping",2760,5004],[6,"CategoricalOrdering",2760,5004],[5,"CatIter",2620,4993],[1,"u128"],[5,"DataFrame",2947],[5,"StringCacheHolder",2812,5005],[5,"ErrString",2841,4925],[6,"PolarsWarning",2841,5006],[10,"Display",4940],[6,"FloatFmt",2917],[1,"i128"],[1,"char"],[5,"Schema",4271],[10,"IntoSeries",4343,5007],[6,"NullStrategy",2947],[6,"UniqueKeepStrategy",2947],[8,"PlHashSet",1230,5008],[5,"ArrowSchema",3636,5009],[5,"Row",3492],[5,"GroupBy",3238],[5,"RangeFrom",4954],[5,"RangeFull",4954],[5,"RangeToInclusive",4954],[5,"RangeInclusive",4954],[5,"RangeTo",4954],[5,"RecordBatchIter",2947],[5,"PhysRecordBatchIter",2947],[10,"IntoVec",4807],[5,"MeltArgs",3209],[10,"RangeBounds",4954],[8,"SchemaRef",4271],[6,"IndexOrder",3636,5010],[8,"RecordBatch",5011],[5,"StructArray",5012],[5,"GroupsIdx",3238,4927],[8,"IdxVec",5013],[6,"GroupByMethod",3238],[5,"SlicedGroups",3238,4927],[5,"GroupsProxyParIter",3238,4927],[10,"UnindexedConsumer",5014],[6,"GroupsIndicator",3238,4927],[8,"IdxItem",3238,4927],[10,"IntoGroupsProxy",3238,5015],[5,"Copied",5016],[5,"Zip",5017],[5,"GroupsProxyIter",3238,4927],[8,"GroupsSlice",3238,4927],[1,"array"],[8,"DynArgs",3636,5018],[10,"IsFloat",5019],[10,"NativeType",5020],[10,"AggList",3476,5021],[10,"TakeExtremum",3476],[10,"PhysicalAggExpr",3489],[6,"AnyValueBuffer",3492,5022],[6,"AnyValueBufferTrusted",3492,5022],[5,"BinaryArray",5023],[5,"IdHasher",3588,5024],[5,"IdxHash",3588,5024],[5,"HashMap",5025],[10,"BuildHasher",4983],[10,"VecHash",3588,5026],[10,"Allocator",5027],[5,"BorrowedFd",5028],[10,"AsFd",5028],[10,"AsRawFd",5029],[20,"MaybeUninit",5030],[10,"NumOpsDispatchChecked",3636,4935],[5,"ChunkId",3636,4958],[5,"RollingVarParams",3636,5018],[5,"RollingQuantileParams",3636,5018],[6,"NonExistent",3636,5031],[10,"Ord",5002],[10,"Default",5032],[5,"Weak",4981],[10,"Scalar",5033],[10,"PartialEq",5002],[5,"File",5034],[5,"Error",5035],[6,"Error",5036],[5,"TryReserveError",5037],[5,"Utf8Error",5038],[5,"CString",5039],[5,"CStr",5040],[5,"PathBuf",5041],[5,"Path",5041],[10,"ToOwned",4990],[5,"OsString",5042],[5,"OsStr",5042],[1,"never"],[10,"FromData",4194,5043],[5,"Buffer",5044],[10,"FromDataUtf8",4194,5043],[10,"FromDataBinary",4194,5043],[5,"ListArray",5045],[6,"Ambiguous",3636,5031],[10,"NamedFromOwned",3636,5046],[10,"PartialOrd",5002],[10,"PolarsArray",3636,5047],[10,"Hash",4983],[10,"SeriesTrait",4343,4947],[10,"ChunkAggSeries",3636,5048],[10,"QuantileAggSeries",3636,5049],[10,"IndexToUsize",3636,5050],[10,"NamedFrom",3636,5046],[5,"Pin",5051],[5,"Request",4985],[5,"BorrowedCursor",5052],[5,"IoSliceMut",5053],[6,"SeekFrom",5053],[10,"VarAggSeries",3636,5054],[5,"AllocError",5027],[5,"BTreeMap",5055],[5,"IoSlice",5053],[5,"AnonymousBuilder",4200,5056],[5,"Offsets",4982],[5,"MutableNullArray",4223,5057],[5,"MutableBitmap",5058],[5,"Utf8Array",5059],[8,"ArrowSchemaRef",5009],[10,"IndexOfSchema",4271],[8,"Metadata",4978],[5,"SeriesIter",4343,5060],[8,"SeriesPhysIter",4343,5060],[10,"LhsNumOps",4724,4926],[10,"NumOpsDispatch",4724,4926],[6,"NullBehavior",4757],[10,"CustomIterTools",4807,5061],[5,"TrustMyLength",4807,4945],[10,"FromIteratorReversed",5062],[10,"FromTrustedLenIterator",4807,5061],[5,"Wrap",4807],[5,"LazyCompact",5063],[5,"SmartString",5064],[10,"InitHashMaps",1230],[10,"InitHashMaps2",1230],[5,"TrueT",1230],[15,"IO",2902],[15,"Context",2902],[15,"Count",3473],[15,"Slice",3474],[10,"ListFromIter",3636],[10,"Utf8FromIter",4266],[10,"BinaryFromIter",4266]],"r":[[0,5024],[4,5005],[13,5005],[16,5005],[31,5005],[476,4964],[504,4965],[505,4965],[506,4967],[509,4968],[510,4969],[511,4965],[608,4971],[609,4971],[610,4974],[611,4972],[613,4975],[614,4973],[615,4974],[1133,4987],[1148,4987],[1231,4946],[1233,4991],[1234,4991],[1235,4991],[1236,4978],[1238,4932],[1254,4993],[1257,4993],[1258,5003],[1259,4994],[1260,5004],[1262,4932],[1263,4932],[1264,4932],[1275,4948],[1285,4956],[1286,4956],[1301,4946],[1303,4994],[1307,4934],[1308,5050],[1309,4934],[1310,4934],[1311,5008],[1312,4934],[1348,4995],[1349,4995],[1367,4946],[1370,5008],[1371,5008],[1372,4934],[1373,5008],[1374,5008],[1380,5004],[1381,4946],[1383,4984],[1395,4996],[1396,4932],[1423,4932],[1620,4994],[1634,4995],[1708,4932],[2220,4994],[2221,4994],[2232,4932],[2316,4993],[2354,4993],[2620,4993],[2621,4993],[2622,5003],[2623,4994],[2624,5004],[2626,4994],[2630,5004],[2647,4994],[2712,4994],[2713,4994],[2731,4993],[2735,4993],[2760,5004],[2765,5004],[2812,5005],[2818,5005],[2821,5005],[2829,5005],[2831,5004],[2836,5004],[2837,5005],[2838,5005],[2839,5005],[2840,5005],[2846,4925],[2852,4925],[2853,4925],[2854,5006],[2866,4925],[2874,4925],[2881,5006],[2886,4925],[2887,4925],[2888,4925],[2889,4925],[2890,4925],[2891,5006],[2892,4925],[2906,5065],[2907,5065],[2908,5065],[2909,3588],[3238,4927],[3244,4927],[3245,4927],[3246,4927],[3247,4927],[3248,4927],[3249,4927],[3252,4927],[3254,5015],[3266,4927],[3476,5021],[3494,5022],[3495,5022],[3588,5024],[3589,5024],[3590,5024],[3591,5026],[3594,5026],[3595,5026],[3636,5031],[3637,4981],[3638,4964],[3639,4991],[3640,4936],[3642,5009],[3643,4965],[3644,4967],[3646,4993],[3647,4993],[3648,5003],[3649,4994],[3650,5004],[3651,5048],[3652,4958],[3653,39],[3654,504],[3655,762],[3656,762],[3660,2947],[3662,5018],[3665,5043],[3666,5043],[3667,5043],[3669,4994],[3672,5050],[3673,4958],[3674,5010],[3675,5050],[3676,5007],[3677,4807],[3679,5066],[3680,5066],[3681,5066],[3684,4926],[3686,4974],[3687,4972],[3688,608],[3689,5047],[3690,4973],[3691,4974],[3694,3209],[3696,5046],[3697,5046],[3699,504],[3701,5031],[3704,4958],[3705,4958],[3706,4926],[3707,4935],[3710,5047],[3711,4925],[3712,782],[3713,821],[3714,4925],[3715,4969],[3716,5049],[3717,4955],[3720,5004],[3721,4957],[3722,5018],[3723,5018],[3726,4343],[3727,4947],[3729,4987],[3730,5005],[3732,4965],[3734,2947],[3735,5054],[3736,5026],[3782,4994],[3817,5047],[3820,0],[3830,5047],[3859,0],[3995,5050],[4037,5047],[4039,4994],[4040,4994],[4066,5047],[4072,4925],[4073,4925],[4074,4925],[4075,4925],[4087,4993],[4089,5047],[4095,4993],[4168,5047],[4194,5043],[4195,5043],[4196,5043],[4200,5056],[4223,5057],[4253,5004],[4258,5004],[4259,4987],[4262,5005],[4263,5005],[4264,5005],[4265,5005],[4266,5067],[4267,5067],[4345,943],[4348,5007],[4349,4947],[4350,4947],[4354,5060],[4355,5060],[4356,4947],[4724,4926],[4725,4926],[4726,4926],[4732,4926],[4749,4935],[4750,4935],[4808,5061],[4809,5061],[4810,5061],[4813,4945],[4824,5068],[4825,5068],[4855,5069],[4856,5070],[4857,5071],[4876,5070],[4878,5071],[4891,5070],[4906,5070],[4916,5071]],"b":[[53,"impl-Add-for-ChunkedArray%3CT%3E"],[54,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[55,"impl-Add-for-%26ChunkedArray%3CT%3E"],[56,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[70,"impl-ChunkedArray%3CFloat32Type%3E"],[71,"impl-ChunkedArray%3CFloat64Type%3E"],[76,"impl-ChunkedArray%3CT%3E"],[77,"impl-ChunkedArray%3CBinaryType%3E"],[78,"impl-ChunkedArray%3CStringType%3E"],[99,"impl-Settings"],[100,"impl-Flags-for-Settings"],[140,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[141,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[142,"impl-Div-for-ChunkedArray%3CT%3E"],[143,"impl-Div-for-%26ChunkedArray%3CT%3E"],[152,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[153,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[154,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[155,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[162,"impl-Debug-for-ChunkedArray%3CT%3E"],[163,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[164,"impl-Binary-for-Settings"],[165,"impl-UpperHex-for-Settings"],[166,"impl-Debug-for-Settings"],[167,"impl-Octal-for-Settings"],[168,"impl-LowerHex-for-Settings"],[176,"impl-Flags-for-Settings"],[177,"impl-Settings"],[185,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[186,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[187,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[190,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[191,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[217,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[218,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[219,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[220,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[259,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[260,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[261,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[262,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[263,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[264,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[270,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[271,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[272,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[273,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[274,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[275,"impl-ChunkedArray%3CBooleanType%3E"],[277,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[278,"impl-ChunkedArray%3CBooleanType%3E"],[281,"impl-ChunkedArray%3CBooleanType%3E"],[282,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[285,"impl-ChunkedArray%3CT%3E"],[286,"impl-ChunkedArray%3CBooleanType%3E"],[287,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[288,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[289,"impl-Mul-for-ChunkedArray%3CT%3E"],[290,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[294,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[295,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[296,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[297,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[298,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[299,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[300,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[301,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[302,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[303,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[304,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[305,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[306,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[307,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[308,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[309,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[310,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[311,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[312,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[313,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[314,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[315,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[323,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[324,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[325,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[326,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[330,"impl-ChunkedArray%3CStringType%3E"],[331,"impl-ChunkedArray%3CListType%3E"],[332,"impl-ChunkedArray%3CStringType%3E"],[333,"impl-ChunkedArray%3CListType%3E"],[344,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[345,"impl-Rem-for-ChunkedArray%3CT%3E"],[346,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[347,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[373,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[374,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[375,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[376,"impl-Sub-for-ChunkedArray%3CT%3E"],[380,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[381,"impl-ChunkedArray%3CBooleanType%3E"],[385,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[386,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[387,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[388,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[394,"impl-ChunkedArray%3CT%3E"],[395,"impl-ChunkedArray%3CListType%3E"],[402,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[403,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[404,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[440,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[441,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[442,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[443,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[444,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[445,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[446,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[447,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[448,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[449,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[450,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[451,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[452,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[453,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[454,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[455,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[456,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[457,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[458,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[459,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[460,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[461,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[462,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[463,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[464,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[465,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[466,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[467,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[468,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[469,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[470,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[471,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[472,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[473,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[556,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[557,"impl-BinViewChunkedBuilder%3Cstr%3E"],[826,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[827,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[859,"impl-ObjectArray%3CT%3E"],[860,"impl-StaticArray-for-ObjectArray%3CT%3E"],[872,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[873,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[883,"impl-ObjectArray%3CT%3E"],[884,"impl-StaticArray-for-ObjectArray%3CT%3E"],[886,"impl-ObjectArray%3CT%3E"],[887,"impl-StaticArray-for-ObjectArray%3CT%3E"],[889,"impl-Array-for-ObjectArray%3CT%3E"],[890,"impl-ObjectArray%3CT%3E"],[893,"impl-ObjectChunkedBuilder%3CT%3E"],[894,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[896,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[897,"impl-ObjectChunkedBuilder%3CT%3E"],[1461,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1462,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1463,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1464,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1465,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1466,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1467,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1468,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1543,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1544,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1545,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1546,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1547,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1548,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[1835,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[1836,"impl-PartialEq-for-DataType"],[1844,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[1845,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[1846,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1847,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[1850,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[1851,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[1852,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[1853,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1892,"impl-Display-for-AnyValue%3C\'_%3E"],[1893,"impl-Debug-for-AnyValue%3C\'a%3E"],[1895,"impl-Debug-for-DataType"],[1896,"impl-Display-for-DataType"],[1898,"impl-Debug-for-TimeUnit"],[1899,"impl-Display-for-TimeUnit"],[1911,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[1912,"impl-From%3CK%3E-for-AnyValue%3C\'_%3E"],[1915,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[1917,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[1918,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[1919,"impl-From%3C%26Field%3E-for-Field"],[1920,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[1944,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[1946,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[1949,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[1950,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[1951,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[1953,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1954,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1955,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1956,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[1962,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[1963,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[1965,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1966,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1967,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[1968,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1969,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[1970,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[1978,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[1979,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[1980,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[1981,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[1982,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1983,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2072,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2073,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2074,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2075,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2078,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2079,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2080,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2081,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2210,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2211,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2212,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2213,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2216,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2217,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2218,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2219,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2254,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2255,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2256,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2257,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2258,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2259,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2260,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2261,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2262,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2263,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2274,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2275,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2278,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2279,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2280,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2281,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2284,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2285,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2286,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2287,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2367,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2368,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2369,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2370,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[2666,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2667,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2668,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2669,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2670,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2671,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2686,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2687,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2688,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2689,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2690,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2691,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2706,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2707,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2708,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2709,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2710,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2711,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2722,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2723,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2724,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2725,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2726,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2727,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2876,"impl-Debug-for-ErrString"],[2877,"impl-Display-for-ErrString"],[2968,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[2969,"impl-Add%3C%26Series%3E-for-DataFrame"],[2970,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3007,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3008,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3009,"impl-Div%3C%26Series%3E-for-DataFrame"],[3039,"impl-Debug-for-DataFrame"],[3040,"impl-Display-for-DataFrame"],[3045,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3047,"impl-From%3C%26Schema%3E-for-DataFrame"],[3074,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3075,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3076,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3077,"impl-Index%3C%26str%3E-for-DataFrame"],[3078,"impl-Index%3Cusize%3E-for-DataFrame"],[3079,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3080,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3081,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3106,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3107,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3108,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3123,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3124,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3125,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3157,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3158,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3159,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3178,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BField%5D)%3E-for-DataFrame"],[3180,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3350,"impl-Display-for-GroupByMethod"],[3351,"impl-Debug-for-GroupByMethod"],[3357,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3358,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3360,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3394,"impl-IntoIterator-for-%26GroupsIdx"],[3395,"impl-IntoIterator-for-GroupsIdx"],[3397,"impl-IntoParallelIterator-for-%26GroupsIdx"],[3398,"impl-IntoParallelIterator-for-GroupsIdx"],[3753,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[3754,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[3878,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[3879,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[3880,"impl-PartialEq-for-Arc%3CT,+A%3E"],[3913,"impl-Display-for-PolarsError"],[3914,"impl-Debug-for-PolarsError"],[3917,"impl-Debug-for-Arc%3CT,+A%3E"],[3918,"impl-Display-for-Arc%3CT,+A%3E"],[3919,"impl-Pointer-for-Arc%3CT,+A%3E"],[3929,"impl-From%3CError%3E-for-PolarsError"],[3930,"impl-From%3CError%3E-for-PolarsError"],[3931,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3932,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3937,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[3938,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[3939,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[3940,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[3941,"impl-From%3CT%3E-for-Arc%3CT%3E"],[3942,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[3943,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[3944,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[3945,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[3946,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[3947,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[3948,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[3949,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[3950,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[3951,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4289,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[4290,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[4292,"impl-From%3CArrowSchema%3E-for-Schema"],[4293,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[4294,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[4295,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[4363,"impl-Add-for-Series"],[4364,"impl-Add-for-%26Series"],[4365,"impl-Add%3CT%3E-for-Series"],[4366,"impl-Add%3CT%3E-for-%26Series"],[4427,"impl-Div-for-Series"],[4428,"impl-Div%3CT%3E-for-Series"],[4429,"impl-Div%3CT%3E-for-%26Series"],[4430,"impl-Div-for-%26Series"],[4441,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4442,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4443,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4444,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4445,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4446,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4464,"impl-Debug-for-Series"],[4465,"impl-Display-for-Series"],[4476,"impl-FromIterator%3C%26str%3E-for-Series"],[4477,"impl-FromIterator%3CString%3E-for-Series"],[4478,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[4479,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[4480,"impl-FromIterator%3C%26f64%3E-for-Series"],[4481,"impl-FromIterator%3Ci64%3E-for-Series"],[4482,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[4483,"impl-FromIterator%3C%26u64%3E-for-Series"],[4484,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[4485,"impl-FromIterator%3Cf64%3E-for-Series"],[4486,"impl-FromIterator%3C%26i64%3E-for-Series"],[4487,"impl-FromIterator%3C%26f32%3E-for-Series"],[4488,"impl-FromIterator%3Cbool%3E-for-Series"],[4489,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[4490,"impl-FromIterator%3Cu64%3E-for-Series"],[4491,"impl-FromIterator%3Cf32%3E-for-Series"],[4492,"impl-FromIterator%3C%26u32%3E-for-Series"],[4493,"impl-FromIterator%3C%26i32%3E-for-Series"],[4494,"impl-FromIterator%3Ci32%3E-for-Series"],[4495,"impl-FromIterator%3C%26bool%3E-for-Series"],[4496,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[4497,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[4498,"impl-FromIterator%3Cu32%3E-for-Series"],[4499,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[4500,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[4501,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[4502,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[4503,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[4504,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[4516,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4517,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4518,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4519,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4520,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4521,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4559,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4560,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4561,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4562,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4563,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4564,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4578,"impl-Mul-for-Series"],[4579,"impl-Mul%3CT%3E-for-Series"],[4580,"impl-Mul-for-%26Series"],[4581,"impl-Mul%3CT%3E-for-%26Series"],[4587,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[4588,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[4589,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[4590,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[4591,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[4592,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[4593,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[4594,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[4595,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[4596,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[4597,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[4598,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[4599,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[4600,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[4601,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[4602,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[4603,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[4604,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[4605,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[4606,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[4607,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[4608,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[4609,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[4610,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[4611,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[4612,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[4613,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[4614,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[4615,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[4616,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[4617,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[4618,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[4619,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[4620,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[4621,"impl-NamedFrom%3CT,+T%3E-for-Series"],[4626,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4627,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4628,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4629,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4630,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4631,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4640,"impl-Rem%3CT%3E-for-%26Series"],[4641,"impl-Rem-for-%26Series"],[4642,"impl-Rem%3CT%3E-for-Series"],[4670,"impl-Sub%3CT%3E-for-Series"],[4671,"impl-Sub%3CT%3E-for-%26Series"],[4672,"impl-Sub-for-%26Series"],[4673,"impl-Sub-for-Series"],[4694,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4696,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4697,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4698,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4868,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[4869,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4871,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[4872,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[4874,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[4875,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAAMsMEg1PDVINUw1UDVUNVg1bDV4NYw1kDYkN","e":"OzAAAAEAAH4O4AEAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAEAIQAHACoAEQBEAAAARwACAEsABABTAAMAWAAAAFoABABhAAAAZQABAGkABgBxAAAAcwACAHkABAB/AAAAhAAHAI0ACACYAAQAnwABAKIACgCxAAAAtAABALgABAC+AAIAxAADAMoAAwDPAAMA1gAAANgABQDgAAMA6wAFAPQAAwD7AAEAAAEBAAMBBgAPAQ4AIAEFACcBGQBEAQMASQEAAEsBBABRAQEAVwEAAFkBBABgAQAAZQECAGkBAQBtAQIAcgEHAHwBAwCHAQEAjQEBAJMBCACdAQoAqQEAAKsBAACtAQUAtQEAALcBIwDcASkACgICABACIwA6AgUARAIAAEYCJgBvAkwAwwIMANcCNwASAwkAHgMBACIDAQAlAxIAOgMTAE8DBwBYAwAAWwMAAF0DAgBiAw4AcgMAAHUDAAB3AwMAfAMBAH8DAgCDAwcAjAMAAI4DBQCWAwEAmQMAAJsDAQCeAwMAowMDAKgDAgCsAwMAsgMAALUDAAC9AwAAwgMAAMUDAQDKAwEAzQMAANADAADYAwAA4QMCAOYDBQDuAwIA9AMAAPYDAAD4AwEA/gMBAAEEAQAIBAEADgQAABEEAAAUBAAAFgQAABgEAAAaBAAAHwQEACYEAQApBAcAMgQCADgEAAA6BAMAPwQBAEIEBQBOBBUAZQQBAGkEBABvBAMAdgQGAIAEDwCSBAwAoAQAAKIEAwCyBAkAxwQNANcEAgDbBAUA4wQAAOUEDAD1BAAA9wQAAPwEAQD/BAAAAQUCAAUFAAAHBQAACgUAAA0FAAAPBQEAEgUAABQFAgAYBQwAJgUAACgFAQArBQAALQUBADAFAAAyBQEANQUAADcFAQA6BQAAPgUAAEIFAQBGBQAASQUAAEsFAABNBQMAUgUAAFUFBwBeBQEAYQUFAGgFAQBsBQAAbgUAAHMFAgB3BQEAegUAAHwFAQB/BQAAgQUBAIQFAACGBQEAiQUAAIsFAQCOBQAAkAUAAJMFOgDUBQQA2wUJAOcFBADtBQgA9wUAAPkFqwCmBgcArwZ2ACcHAAApB0YAeAcBAHwHAAB+BwMAgwcAAJkHAACbBwAAnQcXALkHJADgBwYA6QceAA4IPgBPCAAAcwgKAIAIAACCCAEAhQgBAIgIAACNCAUAlAgAAJcIAgCcCCEAvwgJAMoIDgDaCBwA+AgGAAAJGgAcCRUAMwkMAEEJAABGCQAASAkAAE0JHABsCQIAcAlQAMIJKwDvCUwAPQoEAEMKAQBGCgIASgoEAFAKIwB7CgIAfwoJAI0KAwCSChcArAoBAK8KBAC1Cg0AxAoFAMsKAADNChUA5AoBAOoKAgDvCgEA8woJAP4KBAAECwEACQsAAAsLAgAPCwEAEgsAABQLAQAaCxgANAsKAEELAwBHCwQATQskAHMLBQB6CwkAhwsAAIoLCgCWCwUAoQsQALQLEwDPCwEA0wsCANcLAADZCwAA3gsDAOYLAADoCwEA+AsAAPsLAQADDAwAFgwBACMMAgAqDAEANAwCADwMAAA/DAAARQwAAE4MAQBRDAAAVAwEAF8MBABnDAYAcAwJAHsMAAB/DAQAiwwNAJoMAgCfDAoAqwwBAK4MAwCzDAMAuAwJAMMMBwDMDAEAzwwYAOkMKAATDQYAHg0BACENAAAjDQAAJg0DACwNAAAxDQcAQQ0NAFANAQBXDQMAXA0BAGANAgBlDQAAZw0fAIoNDACZDQUAoA0HAKkNFgDCDQsAzw0PAOANAADjDQMA6g0GAPQNDgAFDgEACA4RABwOBAAkDgUALA4JADcOAgA8DgcARQ4PAFYOFgBuDiMAlA4QAKYOAACoDgEArA4cAMsOAgDPDhIA4w4GAO0OAQDyDiIAGA8CABwPDAAqDxsASA8VAGAPAAByDwAAeA8AAH0PAACADwAAhw8AAIoPAACPDwEAkg8GAJsPEQC8DwMAwQ8CAMUPAQDIDwEA4w8CAOkPBADwDwAA8w8HAP0PAAD/DwEABBAtADsQDABJEAAASxAMAF0QCQBpEAYAcRAAAHMQHACREAAAkxALAKAQAACiEAEAqxAEALIQBQC5EAoAxRAFANEQAQDUEAEA2BABAOoQAADsEAAA7hAAAPIQAwD4EAQA/hADAAMRBAAMEQMAFREAABsRAgAjEQUAKhEGADQRAwA8EQIAQBEBAEQRDwBYEQIAXBEAAF4RAQBiEQIAcBEDAHYRAAB6EQAAfBEeAJ4RAAClEQAApxECAKwRAACyEQEAtRECALsRAwDHEQMA0BEBANQRAQDbEQAA4xEDAOwRAwDxER0AERIBABQSAQAXEgEAGxIBACESAgAmEgAAKBIAACwSAQAyEgEANhIBAD0SAAA/EgMAUBIBAFMSDgBpEgEAbxICAHMSAAB1EhoAkxICAJgSDgCoEgEAqxIFALISCgC+EgAAwBIAAMISBADIEgQAzhIEANUSAADYEgAA2xIJAOYSAgDrEgwA+hIGAAQTCAAOEwUAFxMNACYTAAAoEwIALBMIADYTBAA="}],\
["polars_io",{"t":"KFFKKKNNECNNNNNNNNCMCNNNNNNNNNONNNNNNNNMMMNNNNNNNNNNCCCOCMMMOCCCCCONNNNNNNNNNCNNGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNOHNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNOHONNNNNNNNNNNNNNNNNHONOOONNNNNNOOOOOOOOOOOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFGFFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNNNNNNNHNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNOONNNNHONNNNNNNNNNNNNNOOOOOONONNNNNNNNONNPFPPGFFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNFPFPFPPGFFIPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNKFNNNNNNNNHNNMNNNHNNHFFKKHNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNKKEMMMMNNNJJJJHHHHHHHH","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriterFactory","__clone_box","__clone_box","async_glob","avro","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cloud","create_writer","csv","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","enabled","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","finish","finish","fmt","fmt","from","from","hash","hash","init","init","into","into","ipc","json","mmap","name","ndjson","new","new","next_record_batch","offset","parquet","partition","pl_async","predicates","prelude","schema","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","utils","vzip","vzip","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","Deflate","Snappy","Snappy","__clone_box","arrow_schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","hash","init","init","init","into","into","into","new","new","schema","set_rechunk","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","PolarsObjectStore","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket","build_object_store","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","execute","expansion","flush","fmt","fmt","from","from","from","from_url","get","get_range","get_ranges","glob","head","init","init","init","into","into","into","new","new","new","new_with_object_store","options","prefix","queue","scheme","sync_update","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","Bucket","Checksum","Client","Client","Client","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","DisableTagging","Encryption","Endpoint","Endpoint","FederatedTokenFile","File","Gcp","GoogleConfigKey","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","SkipSignature","Token","Token","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_aws","build_azure","build_gcp","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","from_str","from_str","from_untyped_config","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","max_retries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_aws","with_azure","with_gcp","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_with_predicate","batched","batched_borrowed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_size","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","columns","comment_prefix","count_rows","decimal_comma","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","dtype_overwrite","encoding","eol_char","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_parse_options","has_header","hash","hash","hash","hash","hash","ignore_errors","infer_file_schema","infer_schema_length","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_reader_with_file_handle","is_compressed","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","next_batches","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_overwrite","separator","serialize","serialize","serialize","serialize","serialize","skip_rows","skip_rows_after_header","to_owned","to_owned","to_owned","to_owned","to_owned","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_parse_dates","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","__clone_box","__clone_box","batch_size","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","date_format","datetime_format","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","float_precision","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","include_bom","include_bom","include_header","include_header","init","init","init","init","init","into","into","into","into","into","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","serialize","serialize","serialize_options","time_format","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","LZ4","ZSTD","__clone_box","__clone_box","__clone_box","__clone_box","arrow_schema","batched","batched_async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compression","count_rows","create_writer","create_writer","data","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","extension","finish","finish","finish","finish","finish","finish_with_scan_ops","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_uri","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","maintain_order","memory_map","memory_mapped","metadata","new","new","new","new","new","new","new_async","schema","schema","serialize","serialize","serialize","set_rechunk","set_rechunk","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_columns","with_columns","with_compression","with_compression","with_compression","with_compression","with_extension","with_extension","with_n_rows","with_n_rows","with_pl_flavor","with_pl_flavor","with_predicate","with_projection","with_projection","with_projection","with_row_index","with_row_index","with_row_index","with_row_limit","write_batch","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","from","from","hash","infer_schema_len","init","init","init","init","init","into","into","into","into","into","maintain_order","new","new","new","serialize","set_rechunk","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_ignore_errors","with_json_format","with_json_format","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","deref","deref_mut","drop","from","from","init","into","to_bytes","to_file","try_create_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","arced","as_any","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","boxed","clone","clone_into","data_type","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fields","finish","fmt","from","from","from","from","from_path","get_fields","infer_schema_len","init","init","into","into","into_data","into_iter","iter","len","low_memory","new","new","new_empty","new_null","set_validity","slice","slice","slice_typed","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","take_validity","to_boxed","to_owned","try_from","try_from","try_into","try_into","try_new","type_id","type_id","validity","validity","values","values_iter","vzip","vzip","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_rechunk","with_schema","with_schema_overwrite","with_validity","with_validity","metadata","read","write","FileMetaData","FileMetaDataRef","ParquetStatistics","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","column_order","column_orders","created_by","deref","deref","deref_mut","deref_mut","deserialize","distinct_count","drop","drop","eq","fmt","fmt","from","from","from","init","init","into","into","into_thrift","key_value_metadata","key_value_metadata","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","try_from","try_from_thrift","try_into","try_into","type_id","type_id","version","vzip","vzip","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","RowGroups","__clone_box","__clone_box","batched","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finishes_this_batch","fmt","fmt","from","from","from","from","from","from_uri","get_metadata","get_metadata","hash","hash","init","init","init","init","init","into","into","into","into","into","is_finished","iter","limit_reached","low_memory","materialize_empty_df","new","new","next_batches","num_rows","num_rows","parallel","read_parallel","read_parallel","schema","schema","schema","serialize","serialize","set_low_memory","set_rechunk","set_rechunk","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_statistics","use_statistics","use_statistics","vzip","vzip","vzip","vzip","vzip","with_columns","with_hive_partition_columns","with_hive_partition_columns","with_n_rows","with_n_rows","with_predicate","with_predicate","with_projection","with_projection","with_row_index","with_row_index","with_schema","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","Uncompressed","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","batched","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compression","data_pagesize_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","encode_and_compress","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_writer","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","maintain_order","new","row_group_size","serialize","serialize","serialize","serialize","serialize","set_parallel","statistics","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_row_groups","PartitionedWriter","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","with_parallel","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","apply_predicate","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","column_stats","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","dtype","evaluate_io","fmt","fmt","from","from","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","init","into","into","new","new","null_count","num_rows","schema","serialize","serialize","should_read","to_max","to_min","to_min_max","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SerReader","SerWriter","cloud","finish","finish","new","new","set_rechunk","set_rechunk","set_rechunk","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","get_reader_bytes","get_sequential_row_statistics","is_cloud_url","materialize_projection","resolve_homedir"],"q":[[0,"polars_io"],[80,"polars_io::avro"],[146,"polars_io::cloud"],[216,"polars_io::cloud::options"],[395,"polars_io::csv"],[397,"polars_io::csv::read"],[649,"polars_io::csv::write"],[789,"polars_io::ipc"],[1042,"polars_io::json"],[1138,"polars_io::mmap"],[1160,"polars_io::ndjson"],[1162,"polars_io::ndjson::core"],[1242,"polars_io::parquet"],[1245,"polars_io::parquet::metadata"],[1297,"polars_io::parquet::read"],[1433,"polars_io::parquet::write"],[1615,"polars_io::partition"],[1631,"polars_io::pl_async"],[1652,"polars_io::predicates"],[1706,"polars_io::prelude"],[1716,"polars_io::utils"],[1728,"dyn_clone::sealed"],[1729,"polars_io::options"],[1730,"polars_io::shared"],[1731,"alloc::boxed"],[1732,"std::io"],[1733,"core::result"],[1734,"serde::de"],[1735,"std::path"],[1736,"polars_core::frame"],[1737,"polars_error"],[1738,"core::fmt"],[1739,"core::hash"],[1740,"polars_arrow::record_batch"],[1741,"core::option"],[1742,"serde::ser"],[1743,"core::any"],[1744,"polars_io::avro::read"],[1745,"polars_arrow::datatypes::schema"],[1746,"polars_io::avro::write"],[1747,"polars_core::schema"],[1748,"alloc::string"],[1749,"alloc::vec"],[1750,"polars_io::cloud::glob"],[1751,"object_store"],[1752,"alloc::sync"],[1753,"polars_io::cloud::polars_object_store"],[1754,"polars_io::cloud::adaptors"],[1755,"std::io::error"],[1756,"crossterm::command"],[1757,"url"],[1758,"object_store::path"],[1759,"bytes::bytes"],[1760,"core::ops::range"],[1761,"core::ops::function"],[1762,"parquet_format_safe::thrift::varint::decode"],[1763,"object_store::aws::builder"],[1764,"object_store::azure::builder"],[1765,"object_store::gcp::builder"],[1766,"core::convert"],[1767,"core::iter::traits::collect"],[1768,"polars_io::csv::read::reader"],[1769,"polars_io::csv::read::read_impl::batched"],[1770,"polars_io::csv::read::options"],[1771,"std::fs"],[1772,"polars_core::datatypes::dtype"],[1773,"polars_io::csv::write::writer"],[1774,"polars_io::csv::write::options"],[1775,"core::num::nonzero"],[1776,"polars_io::ipc::ipc_stream"],[1777,"polars_io::ipc::write"],[1778,"futures_io::if_std"],[1779,"core::marker"],[1780,"polars_io::ipc::ipc_file"],[1781,"polars_io::ipc::ipc_reader_async"],[1782,"polars_arrow::io::ipc::read::file"],[1783,"polars_arrow::array::struct_"],[1784,"polars_arrow::array"],[1785,"polars_arrow::datatypes"],[1786,"polars_arrow::datatypes::field"],[1787,"polars_arrow::array::struct_::mutable"],[1788,"polars_arrow::array::growable::structure"],[1789,"polars_arrow::bitmap::immutable"],[1790,"polars_arrow::scalar"],[1791,"polars_arrow::array::struct_::iterator"],[1792,"polars_arrow::bitmap::utils::iterator"],[1793,"polars_arrow::bitmap::utils::zip_validity"],[1794,"polars_parquet::parquet::metadata::file_metadata"],[1795,"polars_parquet::parquet::metadata::column_order"],[1796,"polars_parquet::parquet::metadata::row_metadata"],[1797,"polars_parquet::arrow::read::statistics"],[1798,"parquet_format_safe::parquet_format"],[1799,"polars_parquet::parquet::metadata::schema_descriptor"],[1800,"polars_parquet::parquet::error"],[1801,"polars_io::parquet::read::reader"],[1802,"polars_io::parquet::read::read_impl"],[1803,"polars_io::parquet::read::options"],[1804,"polars_core::series"],[1805,"polars_io::parquet::write::writer"],[1806,"polars_io::parquet::write::batched_writer"],[1807,"polars_io::parquet::write::options"],[1808,"polars_parquet::parquet::write"],[1809,"core::iter::traits::iterator"],[1810,"polars_parquet::arrow::write::file"],[1811,"std::sync::mutex"],[1812,"core::future::future"],[1813,"tokio::runtime::task::join"],[1814,"polars_core::datatypes::field"],[1815,"avro_schema::file"],[1816,"polars_io::cloud::object_store_setup"],[1817,"polars_io::csv::read::parser"],[1818,"polars_io::csv::read::utils"],[1819,"polars_io::parquet::read::utils"]],"i":[0,0,0,0,0,0,5,6,0,0,5,6,5,6,5,6,5,6,0,7,0,6,5,6,5,6,5,6,5,6,6,5,6,5,5,5,6,6,6,7,16,8,5,6,5,6,5,6,5,6,5,6,0,0,0,5,0,16,8,23,5,0,0,0,0,0,6,5,6,5,6,5,6,5,6,5,6,0,5,6,0,0,0,0,31,31,31,31,31,28,28,32,31,28,32,31,31,31,28,32,31,28,32,31,28,32,31,31,31,31,31,28,32,31,28,32,31,31,28,32,31,28,32,31,28,32,28,28,31,28,32,31,28,32,31,28,32,31,28,32,31,28,32,28,32,28,0,0,0,43,44,39,43,44,39,43,39,0,43,43,39,44,39,43,44,39,43,44,44,39,43,39,44,39,44,39,43,44,39,43,39,43,43,43,0,43,44,39,43,44,39,43,44,39,43,44,0,39,44,39,44,43,44,39,43,44,39,43,44,39,43,44,39,43,44,44,59,58,59,0,60,59,61,61,0,58,60,58,58,59,60,59,59,0,0,58,58,59,58,58,58,59,58,58,59,59,61,61,0,61,58,58,59,59,59,58,58,59,58,60,60,58,59,58,59,58,59,59,59,58,38,58,59,60,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,38,58,59,60,38,58,59,60,38,38,61,58,59,60,38,61,58,59,60,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,58,58,58,59,59,59,60,60,60,38,58,59,60,38,61,58,59,60,61,58,59,60,38,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,58,59,60,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,0,0,76,76,0,0,0,0,0,0,74,75,76,0,0,75,74,72,73,74,75,76,66,66,66,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,72,73,74,75,76,72,73,74,75,76,72,73,0,73,72,73,74,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,73,74,75,76,71,70,66,72,73,74,75,76,72,73,73,72,73,74,75,76,72,72,72,73,73,73,74,74,74,75,75,75,76,76,76,66,72,73,74,75,76,71,70,66,72,73,74,75,75,76,72,72,72,73,74,75,76,72,0,72,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,0,72,72,73,72,72,66,75,75,75,71,70,73,72,72,72,73,72,72,72,72,72,72,73,72,73,74,75,76,72,72,72,73,74,75,76,73,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,73,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,72,73,73,72,73,73,72,72,72,72,73,72,72,73,72,72,72,73,72,72,72,72,72,72,73,72,72,73,73,85,0,0,0,85,85,85,0,0,83,84,85,83,81,81,82,83,84,85,81,82,83,84,85,83,84,85,83,84,85,84,84,83,84,85,81,82,83,84,85,81,82,83,84,85,83,84,85,81,82,83,84,85,83,84,85,83,83,83,84,84,84,85,85,85,81,82,84,83,84,85,81,82,83,84,85,83,84,85,81,83,81,83,81,82,83,84,85,81,82,83,84,85,84,83,81,81,84,84,84,84,83,84,85,83,84,83,84,85,81,82,83,84,85,81,82,83,84,85,81,82,83,84,85,81,82,83,84,85,81,81,81,81,81,81,81,81,81,81,82,0,0,0,0,0,0,0,0,0,0,0,0,96,96,93,94,95,96,87,88,88,102,97,87,103,100,88,89,101,93,94,95,96,102,97,87,103,100,88,89,101,93,94,95,96,93,94,95,96,93,94,95,96,95,97,100,101,97,100,101,94,95,96,102,97,87,103,100,88,89,101,93,94,95,96,102,97,87,103,100,88,89,101,93,94,95,96,93,95,96,102,97,87,103,100,88,89,101,93,94,95,96,93,95,96,95,95,95,96,96,96,100,101,102,87,103,88,89,102,93,95,96,102,97,87,103,100,88,89,101,93,94,95,96,97,93,95,96,102,97,87,103,100,88,89,101,93,94,95,96,102,97,87,103,100,88,89,101,93,94,95,96,95,93,102,97,102,87,103,100,88,101,88,102,87,93,95,96,102,87,93,94,95,96,102,97,87,103,100,88,89,101,93,94,95,96,102,97,87,103,100,88,89,101,93,94,95,96,102,97,87,103,100,88,89,101,93,94,95,96,102,97,87,103,100,88,89,101,93,94,95,96,102,87,103,100,88,101,100,101,102,87,103,88,94,102,87,94,102,87,94,94,89,0,109,0,109,0,0,0,105,109,106,108,107,105,109,106,108,107,105,105,105,105,109,106,108,107,105,109,106,108,107,105,105,109,106,108,107,105,105,105,105,105,106,107,105,109,106,108,107,105,105,107,109,106,108,107,105,109,106,108,107,105,105,106,108,107,105,107,105,109,106,108,107,105,109,106,108,107,105,109,106,108,107,105,109,106,108,107,105,107,107,106,107,107,107,107,108,77,77,0,77,0,77,77,77,77,77,77,77,77,77,77,68,68,0,77,77,77,77,0,0,0,0,112,112,112,112,117,112,117,112,112,112,112,112,117,112,117,112,117,112,112,112,112,117,112,117,112,112,112,117,112,117,117,112,117,112,112,112,112,112,117,117,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,117,112,117,112,112,117,112,112,112,112,112,117,112,117,117,117,117,117,117,117,117,112,112,0,0,0,0,0,0,126,129,126,129,126,126,126,126,126,126,129,126,129,126,0,129,129,126,129,129,126,129,129,126,129,126,129,126,126,126,126,129,129,129,126,126,126,126,126,129,126,126,129,126,129,126,126,129,126,139,0,139,139,0,0,0,0,139,138,139,135,137,136,135,137,138,139,136,135,137,138,139,138,139,138,139,139,136,135,137,138,139,136,135,137,138,139,138,139,136,135,137,138,139,138,139,138,138,138,139,139,139,135,137,136,138,139,136,135,137,138,139,137,135,137,138,139,136,135,137,138,139,136,135,137,138,139,136,136,136,138,0,136,135,136,135,137,138,135,137,136,135,137,138,139,135,135,137,138,139,136,135,137,138,139,136,135,137,138,139,136,135,137,138,139,135,137,138,136,135,137,138,139,135,135,137,135,137,135,137,135,137,135,137,135,0,145,0,145,0,145,145,0,0,0,0,145,145,145,0,144,145,146,147,148,142,143,142,144,145,146,147,148,143,142,144,145,146,147,148,144,145,146,147,148,144,145,146,147,148,144,144,144,145,143,142,144,145,146,147,148,143,142,144,145,146,147,148,144,145,146,147,148,143,142,144,145,146,147,148,143,144,145,146,147,148,144,144,144,145,145,145,146,146,146,147,147,147,148,148,148,143,142,144,145,146,147,148,143,142,144,145,146,147,148,143,144,145,146,147,148,143,142,144,145,146,147,148,143,142,144,145,146,147,148,144,142,144,144,145,146,147,148,142,144,144,145,146,147,148,143,142,144,145,146,147,148,143,142,144,145,146,147,148,146,147,148,143,142,144,145,146,147,148,143,142,144,145,146,147,148,142,142,142,142,143,143,0,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,0,0,158,158,158,158,158,158,158,158,0,158,158,160,158,158,158,0,158,158,0,0,0,0,0,0,67,164,163,164,163,163,164,163,164,163,164,163,164,163,164,67,164,163,164,163,164,164,164,164,164,163,164,163,164,163,164,163,164,163,163,164,163,162,164,164,164,164,163,164,163,164,163,164,163,0,0,0,16,8,16,8,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{j}}}j}{{{b{l}}}l}{{{b{c}}{b{he}}}f{}{}}0`{{{b{n}}c}{{Ab{A`}}}Ad}`{{}l}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{j}}}Aj}{c{{Ah{l}}}Aj}{Aff}0`{{{b{j}}{b{j}}}Al}{{{b{l}}{b{l}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{n}}}An}{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{{{b{j}}{b{hBf}}}Bh}{{{b{l}}{b{hBf}}}Bh}{cc{}}0{{{b{j}}{b{hc}}}fBj}{{{b{l}}{b{hc}}}fBj}{{}Af}0{ce{}{}}0`````{cB`Bl}{cA`Ad}{{{b{hBn}}}{{Bd{{Cb{C`}}}}}}```````{{{b{j}}c}AhCd}{{{b{l}}c}AhCd}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0`88````````{{{b{c}}d}f{}}{{{b{h{Ch{c}}}}}{{Bd{Cj}}}{BlCl}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00{{{b{Cn}}}Cn}{{{b{c}}{b{he}}}f{}{}}{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{Aff}00{{{b{Cn}}{b{Cn}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{Ch{c}}}{{Bd{Bb}}}{BlCl}}{{{b{h{D`{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{Cn}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}00{{{b{Cn}}{b{hc}}}fBj}{{}Af}00{ce{}{}}00{c{{Ch{c}}}{BlCl}}{c{{D`{c}}}Ad}{{{b{h{Ch{c}}}}}{{Bd{Dd}}}{BlCl}}{{{Ch{c}}Al}{{Ch{c}}}{BlCl}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00777{{{Ch{c}}{Cb{{Dh{Df}}}}}{{Ch{c}}}{BlCl}}{{{D`{c}}{Cb{Cn}}}{{D`{c}}}Ad}{{{Ch{c}}{Cb{Af}}}{{Ch{c}}}{BlCl}}{{{D`{c}}Df}{{D`{c}}}Ad}{{{Ch{c}}{Cb{{Dh{Af}}}}}{{Ch{c}}}{BlCl}}```{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00`{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Ed{Dn{Eb{E`}}}}}}}}{{{b{Ef}}}Ef}{{{b{c}}{b{he}}}f{}{}}{{}Dn}{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{Aff}{{{b{hEh}}}f}11{{{b{Dn}}{b{Dn}}}Al}{{{b{hc}}e}{{Ah{{b{hg}}Ej}}}{}El{}}`{{{b{hEh}}}{{En{f}}}}{{{b{Dn}}{b{hBf}}}Bh}{{{b{Ef}}{b{hBf}}}Bh}{cc{}}00{{{b{F`}}}{{Bd{Dn}}}}{{{b{Ef}}{b{Fb}}}{{Bd{Fd}}}}{{{b{Ef}}{b{Fb}}{Ff{Af}}}{{Bd{Fd}}}}{{{b{Ef}}{b{Fb}}{b{{Fh{{Ff{Af}}}}}}}{{Bd{{Dh{Fd}}}}}}{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Dh{Df}}}}}}{{{b{Ef}}{b{Fb}}}{{Bd{Fj}}}}{{}Af}00{ce{}{}}00{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{Eh}}}}{{{b{Dj}}}{{Bd{Dn}}}}{{{Eb{E`}}}Ef}{{{Eb{E`}}Fb}{{Bd{Eh}}}}``{{{b{hc}}e}{{Ah{{b{hg}}Ej}}}{}El{}}`{{{b{hc}}i}{{Ah{gEj}}}{}{}{}{{Fn{{b{he}}}{{Fl{g}}}}}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00999{{{b{hEh}}{b{{Fh{G`}}}}}{{En{Af}}}}{{{b{hc}}e}{{Ah{AfEj}}}{}Gb}``````````````````````````````````````````````````````{{{b{c}}d}f{}}000{{{b{Gd}}}{{b{Dj}}}}{{{b{Gf}}}{{b{Dj}}}}{{{b{Gh}}}{{b{Dj}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Dl}}{b{Dj}}}{{Bd{{`{E`}}}}}}00{{{b{Dl}}}Dl}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{c}}{b{he}}}f{}{}}000{{}Dl}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Dl}}}Aj}{c{{Ah{Gd}}}Aj}{c{{Ah{Gf}}}Aj}{c{{Ah{Gh}}}Aj}{Aff}0000{{{b{Dl}}{b{Dl}}}Al}{{{b{Gj}}{b{Gj}}}Al}{{{b{Gd}}{b{Gd}}}Al}{{{b{Gf}}{b{Gf}}}Al}{{{b{Gh}}{b{Gh}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000{{{b{Dl}}{b{hBf}}}Bh}{{{b{Gd}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Gf}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Gh}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}0000{{{b{Dj}}}{{Ah{Gjc}}}{}}{{{b{Dj}}}{{Ah{Gd}}}}{{{b{Dj}}}{{Ah{Gf}}}}{{{b{Dj}}}{{Ah{Gh}}}}{{{b{Dj}}g}{{Bd{Dl}}}{{Gl{Dj}}}{{Gn{Df}}}{{Hb{}{{H`{{Ed{ce}}}}}}}}{{{b{Dl}}{b{hc}}}fBj}{{{b{Gd}}{b{hc}}}fBj}{{{b{Gf}}{b{hc}}}fBj}{{{b{Gh}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000`{{{b{Dl}}c}AhCd}{{{b{Gd}}c}AhCd}{{{b{Gf}}c}AhCd}{{{b{Gh}}c}AhCd}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000077777{{Dle}Dl{{Gn{Df}}}{{Hb{}{{H`{{Ed{Gdc}}}}}}}}{{Dle}Dl{{Gn{Df}}}{{Hb{}{{H`{{Ed{Gfc}}}}}}}}{{Dle}Dl{{Gn{Df}}}{{Hb{}{{H`{{Ed{Ghc}}}}}}}}`````````````````{{{b{c}}d}f{}}0000{{{Hd{c}}{Cb{{Eb{Hf}}}}}{{Hd{c}}}Hh}{{{Hd{{Ab{Hh}}}}{Cb{Hj}}}{{Bd{Hl}}}}{{{b{h{Hd{c}}}}}{{Bd{Hn}}}Hh}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000`{{{b{I`}}}I`}{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{c}}{b{he}}}f{}{}}0000``{{{b{An}}G`{Cb{G`}}{Cb{{b{If}}}}G`Al}{{Bd{Af}}}}`{{}I`}{{}Ib}{{}Id}{Af{{b{c}}}{}}0000000{Af{{b{hc}}}{}}0000000{c{{Ah{I`}}}Aj}{c{{Ah{Ib}}}Aj}{c{{Ah{Id}}}Aj}{c{{Ah{If}}}Aj}{c{{Ah{Ih}}}Aj}{Aff}0000000```{{{b{I`}}{b{I`}}}Al}{{{b{Ib}}{b{Ib}}}Al}{{{b{Id}}{b{Id}}}Al}{{{b{If}}{b{If}}}Al}{{{b{Ih}}{b{Ih}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000{{{Hd{c}}}{{Bd{Bb}}}Hh}{{{b{I`}}{b{hBf}}}Bh}{{{b{Ib}}{b{hBf}}}Bh}{{{b{Id}}{b{hBf}}}Bh}{{{b{If}}{b{hBf}}}Bh}{{{b{Ih}}{b{hBf}}}Bh}{cc{}}000000{{{b{Dj}}}If}1{{{b{I`}}}{{Eb{Ib}}}}`{{{b{I`}}{b{hc}}}fBj}{{{b{Ib}}{b{hc}}}fBj}{{{b{Id}}{b{hc}}}fBj}{{{b{If}}{b{hc}}}fBj}{{{b{Ih}}{b{hc}}}fBj}`{{{b{Ij}}G`{Cb{Af}}Al{Cb{{b{Dd}}}}{b{hAf}}Af{Cb{{b{If}}}}{Cb{G`}}G`{Cb{{b{Ih}}}}AlAl{b{h{Cb{Af}}}}Al}{{Bd{{Ed{DdAfAf}}}}}}`{{}Af}0000000{ce{}{}}0000000{{I`c}{{Hd{c}}}Hh}{{{b{{Fh{G`}}}}}Al}`{{I`c}I`{{Il{Ib}{{Fl{Ib}}}}}}```{c{{Hd{c}}}Hh}={DfIf}{G`If}{{{b{hHn}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{hHl}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}````````````{{{b{I`}}c}AhCd}{{{b{Ib}}c}AhCd}{{{b{Id}}c}AhCd}{{{b{If}}c}AhCd}{{{b{Ih}}c}AhCd}``{{{b{c}}}e{}{}}0000`{c{{Ah{e}}}{}{}}000000000000000{{I`{Cb{An}}}{{Bd{{Hd{In}}}}}}`{{{b{c}}}Cf{}}0000000{ce{}{}}0000000{{I`Af}I`}{{I`{Cb{{Eb{{Dh{Df}}}}}}}I`}{{Ib{Cb{c}}}Ib{{Gn{If}}}}{{IbAl}Ib}{{I`{Cb{{Eb{{Dh{J`}}}}}}}I`}{{IbId}Ib}{{IbG`}Ib}{{I`Al}I`}0{{I`{Cb{Af}}}I`}1500{{Ib{Cb{Ih}}}Ib}{{I`Ib}I`}{{I`{Cb{c}}}I`{{Gn{An}}}}{{I`{Cb{{Eb{{Dh{Af}}}}}}}I`}{{Ib{Cb{G`}}}Ib}66{{I`{Cb{j}}}I`}>{{I`{Cb{Hj}}}I`}09??<<`````````{{{b{c}}d}f{}}00`{{{Jb{c}}{b{Dd}}}{{Bd{{Jd{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Jf}}}Jf}{{{b{Jh}}}Jh}{{{b{Jj}}}Jj}{{{b{c}}{b{he}}}f{}{}}00``{{}Jf}{{}Jh}{{}Jj}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Jf}}}Aj}{c{{Ah{Jh}}}Aj}{c{{Ah{Jj}}}Aj}{Aff}0000{{{b{Jf}}{b{Jf}}}Al}{{{b{Jh}}{b{Jh}}}Al}{{{b{Jj}}{b{Jj}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000{{{b{h{Jb{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Jd{c}}}}}{{Bd{f}}}Ad}`{{{b{Jf}}{b{hBf}}}Bh}{{{b{Jh}}{b{hBf}}}Bh}{{{b{Jj}}{b{hBf}}}Bh}{cc{}}0000{{{b{Jf}}{b{hc}}}fBj}{{{b{Jh}}{b{hc}}}fBj}{{{b{Jj}}{b{hc}}}fBj}{{{Jb{c}}Al}{{Jb{c}}}Ad}`0`{{}Af}0000{ce{}{}}0000``{{{Jb{c}}Af}{{Jb{c}}}Ad}{c{{Jb{c}}}Ad}````{{{b{Jf}}c}AhCd}{{{b{Jh}}c}AhCd}{{{b{Jj}}c}AhCd}``{{{b{c}}}e{}{}}00{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Jb{c}}Jl}{{Jb{c}}}Ad}{{{Jb{c}}{Cb{Df}}}{{Jb{c}}}Ad}0{{{Jb{c}}{Cb{Af}}}{{Jb{c}}}Ad}{{{Jb{c}}Df}{{Jb{c}}}Ad}0{{{Jb{c}}G`}{{Jb{c}}}Ad}{{{Jb{c}}Jj}{{Jb{c}}}Ad}14{{{b{h{Jd{c}}}}{b{Bb}}}{{Bd{f}}}Ad}``````````````{{{b{c}}d}f{}}000{{{b{h{Jn{c}}}}}{{Bd{Cj}}}Bl}{{{K`{c}}{b{Dd}}}{{Bd{{Kb{c}}}}}Ad}{{{K`{c}}{b{Dd}}}{{Bd{{`{c}}}}}{KdKfKh}}{{{b{c}}}{{b{e}}}{}{}}00000000000{{{b{hc}}}{{b{he}}}{}{}}00000000000{{{b{Kj}}}Kj}{{{b{Kl}}}Kl}{{{b{Kn}}}Kn}{{{b{L`}}}L`}{{{b{c}}{b{he}}}f{}{}}000`{{{b{Lb}}{Cb{{b{Ld}}}}}{{Bd{Lf}}}}{{{b{Lh}}c}{{Ab{A`}}}Ad}{{{b{Lj}}c}{{Ab{A`}}}Ad}{{{b{Lb}}{Cb{{b{Ld}}}}KlAl}{{Bd{Bb}}}}{{}Lh}{{}Lj}{{}Kl}{{}Kn}{{}L`}{Af{{b{c}}}{}}00000000000{Af{{b{hc}}}{}}00000000000{c{{Ah{Kj}}}Aj}{c{{Ah{Kn}}}Aj}{c{{Ah{L`}}}Aj}{Aff}00000000000{{{b{Kj}}{b{Kj}}}Al}{{{b{Kn}}{b{Kn}}}Al}{{{b{L`}}{b{L`}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{Lh}}}An}{{{b{Lj}}}An}{{{Ll{c}}}{{Bd{Bb}}}Hh}{{{Jn{c}}}{{Bd{Bb}}}Bl}{{{b{h{Ln{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{K`{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Kb{c}}}}}{{Bd{f}}}Ad}{{{Ll{c}}{Cb{{Eb{Hf}}}}Al}{{Bd{Bb}}}Hh}{{{b{Kj}}{b{hBf}}}Bh}{{{b{Kn}}{b{hBf}}}Bh}{{{b{L`}}{b{hBf}}}Bh}{cc{}}00000000000{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{Lb}}}}{{{b{Kj}}{b{hc}}}fBj}{{{b{Kn}}{b{hc}}}fBj}{{{b{L`}}{b{hc}}}fBj}{{}Af}00000000000{ce{}{}}00000000000``{{{Ll{c}}{Cb{An}}}{{Ll{c}}}Hh}{{{b{Lb}}}{{Bd{Ld}}}}{c{{Ll{c}}}Hh}{c{{Jn{c}}}Bl}{c{{Ln{c}}}Ad}{{}Lh}{c{{K`{c}}}Ad}{{}Lj}{c{{K`{c}}}{KdKfKh}}{{{b{h{Ll{c}}}}}{{Bd{M`}}}Hh}{{{b{h{Jn{c}}}}}{{Bd{Dd}}}Bl}{{{b{Kj}}c}AhCd}{{{b{Kn}}c}AhCd}{{{b{L`}}c}AhCd}{{{Ll{c}}Al}{{Ll{c}}}Hh}{{{Jn{c}}Al}{{Jn{c}}}Bl}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}00000000000000000000000{{{b{c}}}Cf{}}00000000000{ce{}{}}00000000000{{{Ll{c}}{Cb{{Dh{Df}}}}}{{Ll{c}}}Hh}{{{Jn{c}}{Cb{{Dh{Df}}}}}{{Jn{c}}}Bl}{{{Ln{c}}{Cb{L`}}}{{Ln{c}}}{}}{{Lh{Cb{L`}}}Lh}{{{K`{c}}{Cb{L`}}}{{K`{c}}}Ad}{{Lj{Cb{L`}}}Lj}{{LhAn}Lh}{{LjAn}Lj}{{{Ll{c}}{Cb{Af}}}{{Ll{c}}}Hh}{{{Jn{c}}{Cb{Af}}}{{Jn{c}}}Bl}{{{Ln{c}}Al}{{Ln{c}}}{}}{{{K`{c}}Al}{{K`{c}}}Ad}{{Klc}Kl{{Gn{{Cb{{Eb{Hf}}}}}}}}{{{Ll{c}}{Cb{{Dh{Af}}}}}{{Ll{c}}}Hh}{{{Jn{c}}{Cb{{Dh{Af}}}}}{{Jn{c}}}Bl}{{Klc}Kl{{Gn{{Cb{{Dh{Df}}}}}}}}{{{Ll{c}}{Cb{j}}}{{Ll{c}}}Hh}{{{Jn{c}}{Cb{j}}}{{Jn{c}}}Bl}{{Klc}Kl{{Gn{{Cb{j}}}}}}{{Klc}Kl{{Gn{{Cb{Af}}}}}}{{{b{h{Kb{c}}}}{b{Bb}}}{{Bd{f}}}Ad}```````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Mb}}}Mb}{{{b{c}}{b{he}}}f{}{}}{{}Mb}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Mb}}}Aj}{Aff}0000{{{b{Mb}}{b{Mb}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{b{h{Md{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{Mf{c}}}{{Bd{Bb}}}Hh}{{{b{Mb}}{b{hBf}}}Bh}{cc{}}0000{{{b{Mb}}{b{hc}}}fBj}{{{Mf{c}}{Cb{Af}}}{{Mf{c}}}Hh}{{}Af}0000{ce{}{}}0000`{c{{Md{c}}}Ad}{c{{Mh{c}}}Ad}{c{{Mf{c}}}Hh}{{{b{Mb}}c}AhCd}{{{Mf{c}}Al}{{Mf{c}}}Hh}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Mf{c}}Jl}{{Mf{c}}}Hh}4{{{Md{c}}Mj}{{Md{c}}}Ad}{{{Mf{c}}Mj}{{Mf{c}}}Hh}{{{Mf{c}}{Cb{{Dh{Df}}}}}{{Mf{c}}}Hh}{{{Mf{c}}Hj}{{Mf{c}}}Hh}{{{Mf{c}}{b{Dd}}}{{Mf{c}}}Hh}{{{b{h{Mh{c}}}}{b{Bb}}}{{Bd{f}}}Ad}`````{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{Ij}}}{{b{{Fh{G`}}}}}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{b{c}}}IjHh}{cc{}}{{}Af}{ce{}{}}{{{b{Hh}}}{{Cb{{b{{Fh{G`}}}}}}}}{{{b{Hh}}}{{Cb{{b{In}}}}}}{{{b{Ml}}}{{Bd{In}}}}{c{{Ah{e}}}{}{}}0{{{b{c}}}Cf{}}5`{{{b{hc}}{Cb{Af}}}{{Bd{Dd}}}Mn}``{{{b{c}}d}f{}}{N`{{Eb{Nb}}}}{{{b{N`}}}{{b{Nd}}}}{{{b{hN`}}}{{b{hNd}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{N`{{Ab{Nb}}}}{{{b{N`}}}N`}{{{b{c}}{b{he}}}f{}{}}{{{b{N`}}}{{b{Nf}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{Aff}0{{{b{N`}}{b{N`}}}Al}{{{b{N`}}{b{{b{Nb}}}}}Al}{{{b{N`}}}{{b{{Fh{Nh}}}}}}{{{Nj{c}}}{{Bd{Bb}}}Hh}{{{b{N`}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}{NlN`}1{NnN`}{c{{Bd{{Nj{In}}}}}{{Gn{An}}}}{{{b{Nf}}}{{b{{Fh{Nh}}}}}}{{{Nj{c}}{Cb{Af}}}{{Nj{c}}}Hh}{{}Af}0{ce{}{}}0{N`{{Ed{{Dh{Nh}}{Dh{{Ab{Nb}}}}{Cb{O`}}}}}}{{{b{N`}}}}{{{b{N`}}}{{Oh{{Dh{{Ab{Ob}}}}OdOf}}}}{{{b{N`}}}Af}{{{Nj{c}}Al}{{Nj{c}}}Hh}{c{{Nj{c}}}Hh}{{Nf{Dh{{Ab{Nb}}}}{Cb{O`}}}N`}{NfN`}{{NfAf}N`}{{{b{hN`}}{Cb{O`}}}f}{{{b{hN`}}AfAf}f}0{{{b{c}}AfAf}e{}{}}011{{N`AfAf}N`}0{{{b{hN`}}}{{Cb{O`}}}}{{{b{N`}}}{{Ab{Nb}}}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}000{{Nf{Dh{{Ab{Nb}}}}{Cb{O`}}}{{Ah{N`Oj}}}}{{{b{c}}}Cf{}}0{{{b{N`}}}{{Cb{{b{O`}}}}}}0{{{b{N`}}}{{b{{Fh{{Ab{Nb}}}}}}}}{{{b{N`}}}Od}{ce{}{}}0{{{Nj{c}}{Cb{Jl}}}{{Nj{c}}}Hh}{{{Nj{c}}Al}{{Nj{c}}}Hh}{{{Nj{c}}{Cb{Af}}}{{Nj{c}}}Hh}0{{{Nj{c}}{Cb{e}}}{{Nj{c}}}Hh{{Gn{An}}}}2{{{Nj{c}}Hj}{{Nj{c}}}Hh}{{{Nj{c}}{b{Dd}}}{{Nj{c}}}Hh}{{{b{N`}}{Cb{O`}}}{{Ab{Nb}}}}{{N`{Cb{O`}}}N`}``````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{Ol}}}Ol}{{{b{c}}{b{he}}}f{}{}}{{{b{Ol}}Af}On}``{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{{{b{Nh}}{b{A@`}}}{{Ah{A@bOj}}}}`{Aff}0{{{b{A@b}}{b{A@b}}}Al}{{{b{A@b}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Ol}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}{A@dA@b}1{{}Af}0{ce{}{}}0{OlA@f}{{{b{Ol}}}{{b{{Cb{{Dh{A@h}}}}}}}}``````{{{b{Ol}}}{{b{A@j}}}}`{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}0{A@f{{Ah{OlA@l}}}}11{{{b{c}}}Cf{}}0`77`````````{{{b{c}}d}f{}}0{{{A@n{c}}Af}{{Bd{AA`}}}Hh}{{AAbAf}{{Bd{AA`}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{AAd}}}AAd}{{{b{AAf}}}AAf}{{{b{c}}{b{he}}}f{}{}}0{{}AAf}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{AAd}}}Aj}{c{{Ah{AAf}}}Aj}{Aff}0000{{{b{AAd}}{b{AAd}}}Al}{{{b{AAf}}{b{AAf}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{A@n{c}}}{{Bd{Bb}}}Hh}{AAb{{Bd{Bb}}}}{{{b{AA`}}Af}Al}{{{b{AAd}}{b{hBf}}}Bh}{{{b{AAf}}{b{hBf}}}Bh}{cc{}}0000{{{b{Dj}}{Cb{{b{Dl}}}}{Cb{M`}}{Cb{AAh}}}{{Bd{AAb}}}}{{{b{h{A@n{c}}}}}{{Bd{{b{AAh}}}}}Hh}{{{b{hAAb}}}{{Bd{{b{AAh}}}}}}{{{b{AAd}}{b{hc}}}fBj}{{{b{AAf}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000{{{b{AA`}}}Al}`0`{{{Cb{{b{{Fh{Af}}}}}}{b{Cj}}{Cb{{b{{Fh{AAj}}}}}}{Cb{{b{j}}}}}Bb}`{c{{A@n{c}}}Hh}{{{b{hAA`}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{h{A@n{c}}}}}{{Bd{Af}}}Hh}{{{b{hAAb}}}{{Bd{Af}}}}`{{{A@n{c}}AAf}{{A@n{c}}}Hh}{{AAbAAf}AAb}{{{b{AA`}}}{{b{M`}}}}{{{b{h{A@n{c}}}}}{{Bd{M`}}}Hh}{{{b{hAAb}}}{{Bd{M`}}}}{{{b{AAd}}c}AhCd}{{{b{AAf}}c}AhCd}{{{A@n{c}}Al}{{A@n{c}}}Hh}0{{AAbAl}AAb}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000043`{ce{}{}}0000{{{A@n{c}}{Cb{{Dh{Df}}}}}{{A@n{c}}}Hh}{{{A@n{c}}{Cb{{Dh{AAj}}}}}{{A@n{c}}}Hh}{{AAb{Cb{{Dh{AAj}}}}}AAb}{{{A@n{c}}{Cb{Af}}}{{A@n{c}}}Hh}{{AAb{Cb{Af}}}AAb}{{{A@n{c}}{Cb{{Eb{Hf}}}}}{{A@n{c}}}Hh}{{AAb{Cb{{Eb{Hf}}}}}AAb}{{{A@n{c}}{Cb{{Dh{Af}}}}}{{A@n{c}}}Hh}{{AAb{Cb{{Dh{Af}}}}}AAb}{{{A@n{c}}{Cb{j}}}{{A@n{c}}}Hh}{{AAb{Cb{j}}}AAb}{{{A@n{c}}{Cb{M`}}}{{A@n{c}}}Hh}```````````````{{{b{c}}d}f{}}0000{{{AAl{c}}{b{Dd}}}{{Bd{{AAn{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}000000{{{b{hc}}}{{b{he}}}{}{}}000000{{{b{AB`}}}AB`}{{{b{ABb}}}ABb}{{{b{ABd}}}ABd}{{{b{ABf}}}ABf}{{{b{ABh}}}ABh}{{{b{c}}{b{he}}}f{}{}}0000``{{}AB`}{{}ABb}{Af{{b{c}}}{}}000000{Af{{b{hc}}}{}}000000{c{{Ah{AB`}}}Aj}{c{{Ah{ABb}}}Aj}{c{{Ah{ABd}}}Aj}{c{{Ah{ABf}}}Aj}{c{{Ah{ABh}}}Aj}{Aff}000000{{{b{{AAn{c}}}}{b{Bb}}}{{`{{ABl{}{{H`{{Bd{{ABj{Oj}}}}}}}}}}}Ad}{{{b{AB`}}{b{AB`}}}Al}{{{b{ABb}}{b{ABb}}}Al}{{{b{ABd}}{b{ABd}}}Al}{{{b{ABf}}{b{ABf}}}Al}{{{b{ABh}}{b{ABh}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000{{{b{{AAn{c}}}}}{{Bd{ABn}}}Ad}{{{AAl{c}}{b{hBb}}}{{Bd{ABn}}}Ad}{{{b{AB`}}{b{hBf}}}Bh}{{{b{ABb}}{b{hBf}}}Bh}{{{b{ABd}}{b{hBf}}}Bh}{{{b{ABf}}{b{hBf}}}Bh}{{{b{ABh}}{b{hBf}}}Bh}{cc{}}000000{{{b{{AAn{c}}}}}{{b{{ACb{{AC`{c}}}}}}}Ad}{{{b{AB`}}{b{hc}}}fBj}{{{b{ABb}}{b{hc}}}fBj}{{{b{ABd}}{b{hc}}}fBj}{{{b{ABf}}{b{hc}}}fBj}{{{b{ABh}}{b{hc}}}fBj}{{}Af}000000{ce{}{}}000000`{c{{AAl{c}}}{AdAd}}`{{{b{AB`}}c}AhCd}{{{b{ABb}}c}AhCd}{{{b{ABd}}c}AhCd}{{{b{ABf}}c}AhCd}{{{b{ABh}}c}AhCd}{{{AAl{c}}Al}{{AAl{c}}}Ad}`{{{b{c}}}e{}{}}0000{c{{Ah{e}}}{}{}}0000000000000{G`{{Bd{ABd}}}}{ACd{{Bd{ABf}}}}{ACf{{Bd{ABh}}}}{{{b{c}}}Cf{}}000000======={{{AAl{c}}ABb}{{AAl{c}}}Ad}{{{AAl{c}}{Cb{Af}}}{{AAl{c}}}Ad}08{{{b{h{AAn{c}}}}{b{Bb}}}{{Bd{f}}}Ad}{{{b{{AAn{c}}}}{Dh{{ABj{Oj}}}}}{{Bd{f}}}Ad}`{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{ACh{c}}{b{Bb}}}{{Bd{f}}}{nKhACj}}{cc{}}{{}Af}{ce{}{}}{{cei}{{ACh{c}}}{nKhACj}{{Gn{An}}}{{Gl{Dj}}}{{Hb{}{{H`{g}}}}}}{c{{Ah{e}}}{}{}}0?2{{{ACh{c}}Al}{{ACh{c}}}{nKhACj}}``{{{b{ACl}}c}{}ACn}{{{b{ACl}}c}{}{ACnKh}}=<;:97{{}{{b{ACl}}}}76{{{b{AD`}}}ABn}{{{b{ACl}}c}ADb{ACnKh}}66{{ACde}{}ACn{{Fn{}{{Fl{c}}}}}}{{{b{c}}}Cf{}}:1````{{{b{hBb}}{Cb{{b{Hf}}}}Al}{{Bd{f}}}}{{{b{Hf}}}{{Cb{{b{ADd}}}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{ADf}}}{{b{{Fh{ADh}}}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{ADh}}}Aj}{c{{Ah{ADf}}}Aj}{Aff}0{{{b{ADh}}}{{b{J`}}}}{{{b{Hf}}{b{Bb}}}{{Bd{AAj}}}}{{{b{ADh}}{b{hBf}}}Bh}{{{b{ADf}}{b{hBf}}}Bh}{cc{}}0{AAjADh}{ADjADh}{{{b{ADh}}}{{Cb{{b{AAj}}}}}}00{{{b{ADf}}{b{Dj}}}{{Bd{{b{ADh}}}}}}{{}Af}0{ce{}{}}0{{ADj{Cb{AAj}}{Cb{AAj}}{Cb{AAj}}}ADh}{{Hj{Dh{ADh}}{Cb{Af}}}ADf}{{{b{ADh}}}{{Cb{Af}}}}{{{b{ADf}}}{{Cb{Af}}}}{{{b{ADf}}}{{b{Hj}}}}{{{b{ADh}}c}AhCd}{{{b{ADf}}c}AhCd}{{{b{ADd}}{b{ADf}}}{{Bd{Al}}}};;{{{b{ADh}}}{{Cb{AAj}}}}{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0;;```{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{cB`Bl}{cA`Ad}{{B`Al}B`}00````{{{b{Cj}}{b{Cj}}{Cb{{b{{Fh{Df}}}}}}{b{Dj}}}{{Bd{f}}}}{{{b{Dd}}{b{Dd}}{Cb{{b{{Fh{Df}}}}}}{b{Dj}}}{{Bd{f}}}}0{{{b{hc}}}{{Bd{Ij}}}{BlHhADl}}{{cAf}{{Dh{{Ed{AfAf}}}}}{{ABl{}{{H`{Af}}}}}}{cAl{{Gl{Ml}}}}{{{Cb{{b{{Fh{Df}}}}}}{b{Dd}}{Cb{{b{{Fh{AAj}}}}}}Al}{{Cb{{Dh{Af}}}}}}{{{b{Ml}}}An}","D":"CJh","p":[[1,"reference"],[5,"Private",1728],[1,"unit"],[0,"mut"],[5,"RowIndex",0,1729],[5,"HiveOptions",0,1729],[10,"WriterFactory",0,1730],[10,"SerWriter",1706,1730],[5,"Box",1731],[10,"Write",1732],[1,"usize"],[6,"Result",1733],[10,"Deserializer",1734],[1,"bool"],[5,"PathBuf",1735],[10,"SerReader",1706,1730],[5,"DataFrame",1736],[8,"PolarsResult",1737],[5,"Formatter",1738],[8,"Result",1738],[10,"Hasher",1739],[10,"Read",1732],[10,"ArrowReader",0,1730],[8,"RecordBatch",1740],[6,"Option",1741],[10,"Serializer",1742],[5,"TypeId",1743],[5,"AvroReader",80,1744],[5,"ArrowSchema",1745],[10,"Seek",1732],[6,"AvroCompression",80],[5,"AvroWriter",80,1746],[5,"Error",1738],[5,"Schema",1747],[5,"String",1748],[5,"Vec",1749],[1,"str"],[5,"CloudOptions",216],[5,"CloudLocation",146,1750],[10,"ObjectStore",1751],[5,"Arc",1752],[1,"tuple"],[5,"PolarsObjectStore",146,1753],[5,"CloudWriter",146,1754],[5,"Error",1755],[10,"Command",1756],[8,"Result",1755],[5,"Url",1757],[5,"Path",1758],[5,"Bytes",1759],[5,"Range",1760],[1,"slice"],[5,"ObjectMeta",1751],[17,"Output"],[10,"FnOnce",1761],[1,"u8"],[10,"VarInt",1762],[6,"AmazonS3ConfigKey",216,1763],[6,"AzureConfigKey",216,1764],[6,"GoogleConfigKey",216,1765],[6,"CloudType",216],[10,"AsRef",1766],[10,"Into",1766],[17,"Item"],[10,"IntoIterator",1767],[5,"CsvReader",397,1768],[10,"PhysicalIoExpr",1652],[10,"MmapBytesReader",1138],[8,"SchemaRef",1747],[5,"OwnedBatchedCsvReader",397,1769],[5,"BatchedCsvReader",397,1769],[5,"CsvReadOptions",397,1770],[5,"CsvParseOptions",397,1770],[6,"CsvEncoding",397,1770],[6,"CommentPrefix",397,1770],[6,"NullValues",397,1770],[6,"ReaderBytes",1138],[10,"Fn",1761],[5,"File",1771],[6,"DataType",1772],[5,"CsvWriter",649,1773],[5,"BatchedWriter",649,1773],[5,"CsvWriterOptions",649,1774],[5,"SerializeOptions",649,1774],[6,"QuoteStyle",649,1774],[8,"NonZeroUsize",1775],[5,"IpcStreamReader",789,1776],[5,"IpcWriter",789,1777],[5,"BatchedWriter",789,1777],[10,"AsyncWrite",1778],[10,"Unpin",1779],[10,"Send",1779],[5,"IpcScanOptions",789,1780],[5,"IpcReadOptions",789,1781],[5,"IpcWriterOptions",789,1777],[6,"IpcCompression",789,1777],[5,"IpcReaderAsync",789,1781],[5,"FileMetadata",1782],[1,"i64"],[5,"IpcStreamWriterOption",789,1776],[5,"IpcWriterOption",789,1777],[5,"IpcReader",789,1780],[5,"IpcStreamWriter",789,1776],[8,"ArrowSchemaRef",1745],[5,"JsonWriterOptions",1042],[5,"JsonWriter",1042],[5,"JsonReader",1042],[5,"BatchedWriter",1042],[6,"JsonFormat",1042],[5,"Path",1735],[10,"BufRead",1732],[5,"StructArray",1162,1783],[10,"Array",1784],[10,"Any",1743],[6,"ArrowDataType",1785],[5,"Field",1786],[5,"JsonLineReader",1162],[5,"MutableStructArray",1787],[5,"GrowableStruct",1788],[5,"Bitmap",1789],[10,"Scalar",1790],[5,"StructValueIter",1791],[5,"BitmapIter",1792],[6,"ZipValidity",1793],[6,"PolarsError",1737],[5,"FileMetaData",1245,1794],[6,"ColumnOrder",1795],[5,"RowGroupMetaData",1796],[5,"ParquetStatistics",1245],[5,"MutableStatistics",1797],[5,"FileMetaData",1798],[5,"KeyValue",1798],[5,"SchemaDescriptor",1799],[6,"Error",1800],[5,"ParquetReader",1297,1801],[5,"BatchedParquetReader",1297,1802],[5,"ParquetAsyncReader",1297,1801],[5,"ParquetOptions",1297,1803],[6,"ParallelStrategy",1297,1803],[8,"FileMetaDataRef",1245],[5,"Series",1804],[5,"ParquetWriter",1433,1805],[5,"BatchedWriter",1433,1806],[5,"ParquetWriteOptions",1433,1807],[6,"ParquetCompression",1433,1807],[5,"GzipLevel",1433,1807],[5,"BrotliLevel",1433,1807],[5,"ZstdLevel",1433,1807],[8,"RowGroupIterColumns",1433,1808],[10,"Iterator",1809],[1,"u64"],[5,"FileWriter",1810],[5,"Mutex",1811],[1,"u32"],[1,"i32"],[5,"PartitionedWriter",1615],[10,"Sync",1779],[5,"RuntimeManager",1631],[10,"Future",1812],[10,"GetSize",1631],[5,"JoinHandle",1813],[10,"StatsEvaluator",1652],[5,"BatchStats",1652],[5,"ColumnStats",1652],[5,"Field",1814],[10,"Sized",1779]],"r":[[0,1730],[1,1729],[2,1729],[3,1730],[4,1730],[5,1730],[81,1744],[82,1746],[83,1815],[146,1750],[147,1754],[148,1753],[157,1816],[184,1750],[219,1763],[224,1764],[248,1765],[399,1769],[400,1770],[401,1770],[402,1770],[403,1770],[404,1768],[408,1770],[409,1769],[449,1817],[529,1818],[548,1818],[650,1773],[651,1773],[652,1774],[656,1774],[657,1774],[789,1777],[790,1777],[791,1781],[792,1780],[793,1781],[794,1780],[795,1776],[796,1776],[797,1776],[798,1777],[799,1777],[800,1777],[1163,1783],[1245,1794],[1262,1797],[1298,1802],[1301,1803],[1302,1801],[1303,1803],[1304,1801],[1379,1819],[1433,1806],[1435,1807],[1437,1807],[1440,1807],[1441,1807],[1442,1805],[1443,1808],[1447,1807],[1706,1730],[1707,1730],[1708,0]],"b":[[1182,"impl-PartialEq-for-StructArray"],[1183,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1188,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1190,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1208,"impl-StructArray"],[1209,"impl-Array-for-StructArray"],[1212,"impl-Array-for-StructArray"],[1213,"impl-StructArray"],[1226,"impl-StructArray"],[1227,"impl-Array-for-StructArray"],[1240,"impl-Array-for-StructArray"],[1241,"impl-StructArray"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOwEnQAAAAEAAwAPABQAAAAWABIAKgACAC8AAwA1AAAANwACADsAAgBAABAAWQAAAFsAFwB2AAMAfQABAIAADQCRAAAAlgAGAJ8ADQCvAAIAtQADALsAAgDDAAAAxQAAAMoADgDfAAEA6wAAAPcAAQD6AAAADwEQACMBMABZAQMAXgEIAGwBHACQAQQAmQEBAJ0BJADDATcA/AEEAAgCAAAKAgcAEwIIACYCAAAoAgIALwIqAFsCEAB8AgAAiwIAAJMCFACqAiEAzgICANYCAgDaAgAA3AIFAOgCAgDvAgMA9AIWABYDAAAYAwAAGwMAAB4DAAAgAwEAJAMDACkDIQBMAz4AjAMDAJwDDwC5AwAAuwMHAMUDOAAIBAIADQQAABAEAQATBAAAGQQjAD4EAABEBAAARgQEAFIEGABtBAEAcwQBAHYECACABAAAggQBAIUEBgCNBAAAjwQFAJYECgCiBAEApQQAAKcEAACqBAIAsAQAALIEAAC6BAMAwgQFAMkEAQDMBAAAzwQBANMEBgDfBAAA4QQGAOsEAwDxBAQA9wQAAPkEAQAHBQIACwUDABAFAQATBQAAFgUAABgFAAAbBTAAUQUJAGAFAABiBQMAZwUAAGkFAQBsBQEAbwUCAHMFEgCIBQUAjwUBAJIFAgCWBQAAmAUAAJoFAQCdBQAAnwUBAKIFAACkBQMAqQUdAMkFMAD8BQQACAYMAB8GBAAmBiMATwYAAFEGBQBYBgAAWgYEAGAGAgBkBgQAagYBAG0GAABvBgUAdwYCAHsGAwCABgcAigYBAJQGAQCdBgIAowYKAK8GAACxBgAAtQYDALsGAQC/BgEA"}],\
["polars_lazy",{"t":"CQCCCCPPGPPPPPPPPPPPPFPPPPPPPKPGPPPGFPPFFPPPPPPPPPPPPPPPPPPFPPPPPPFPPPPPPPPPGPPPPGKFPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPKPPPPPPPPPPPPPFPPPPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPGPPPPPPPPPGPPPPPPPPPKPPPPPPPFPPPPPPKKPPPPPPPPPPFPPPPPPPGPPPPPPFPFPPPPPPFPPPPPPPPKPPPPFPPFPPGGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNOONHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNHNHNONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNHNNNHNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPGPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOIFKFFKFFFFIFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNOONNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNOONNNOONNNNNNNMNNNNNNNNNNNNNNNNNNNNNONNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNNONNMNNOOOONNNNNNNNNOMNNMNNCOONOONMNNOONNNNOOMNNOOONNNNNNNNONNNNNOONNNNNNONOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNMNNMNNNNNNMNNNMNNNNNNNNNNNNNNNNNNHHCCCFKNNNNNMNNNNNNNNFKKFNNNNNNNNNNNNNNMNMMOMNNNNONNNNNMNNNNNNNNHKFFPPPPPPPFPPPPPGFPFPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPPFKPPGFFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNOOOONONNNONNNNNOOOONONOOOOMOMNONNNNNNNNNNNNNNNNOOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","utils","Abs","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BinaryExpr","BinaryExpr","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Correlation","Count","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DateOffset","DatetimeArgs","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","Exp","Explode","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Implode","IndexColumn","Interpolate","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","Join","JoinOptions","JsonDecode","JsonPathMatch","KeepName","Kurtosis","Last","Len","LenBytes","LenChars","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Min","MinHorizontal","Minus","Mode","Modulus","Multiply","NUnique","Name","Negate","Not","NotEq","NotEqValidity","Nth","NullCount","Operator","Or","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","QCut","Quantile","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Replace","Reshape","Reverse","Reverse","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Round","RoundSF","SearchSorted","Selector","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Slice","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructNameSpace","SubPlan","Sum","SumHorizontal","Tail","TemporalExpr","Ternary","Then","Titlecase","ToDecimal","ToInteger","ToPhysical","TopK","TopKBy","Trigonometry","TrueDivide","UdfSchema","Unique","UniqueCounts","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","When","Wildcard","Window","WindowMapping","WindowType","Xor","ZFill","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_into_selector","_selector_add","_selector_and","_selector_sub","abs","add","agg_groups","alias","all","all","all","all","all_horizontal","allow_parallel","ambiguous","and","any","any","any","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_sort","arg_sort_by","arg_unique","arg_where","args","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","binary","binary_expr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","bottom_k_by","business_day_count","cache","call","call","call_udf","call_udf","call_unchecked","cast","cast","cat","cat","cbrt","ceil","clip","clip_max","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","contains","cos","cosh","cot","count","count_matches","count_matches","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","cumulative_eval","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","default","default","default","default","default","default","default","default","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","div","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","dt","dt","dtype_col","dtype_cols","duration","entropy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","fill_nan","fill_null","fill_null_with_strategy","filter","first","first","first","flatten","float_type","floor","floor_div","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_exprs","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_type","fun","function_expr","function_with_options","functions","gather","gather","gather_every","gather_every","get","get","get","get_categories","get_field","get_field","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","head","hist","hour","hours","implode","index_cols","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_fields","int_range","int_ranges","interpolate","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_list_name_space","into_list_name_space","into_tree_formatter","is_between","is_column","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","is_not_null","is_null","is_null","is_regex_projection","is_simple_projection","is_unique","join","join","json_encode","keep","kurtosis","last","last","last","len","len","len","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","max","max","max","max_horizontal","mean","mean","mean","mean_horizontal","median","median","median","median","meta","microsecond","microseconds","milliseconds","min","min","min","min","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","n_unique","n_unique","name","name","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","new","new","new","new","nodes","nodes_owned","not","not","nth","null_count","options","or","otherwise","otherwise","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","quantile","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","reshape","return_type","reverse","reverse","reverse","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","sample_n","search_sorted","second","seconds","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","shift","shift","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","slice","sort","sort","sort","sort_by","spearman_rank_corr","sqrt","std","std","std","str","strict","strict_cast","string","struct_","sub","suffix","suffix_fields","sum","sum","sum","sum","sum_horizontal","super_type","tail","tail","tan","tanh","ternary_expr","then","then","time_ranges","time_unit","time_unit","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_struct","to_struct","to_uppercase","top_k","top_k_by","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udf","undo_aliases","union","unique","unique","unique","unique_counts","unique_stable","unique_stable","unique_stable","upper_bound","value_counts","var","var","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","when","when","when","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fractional_seconds","with_hms","with_hms","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","output_type","partition_by","predicate","returns_scalar","right","sort_options","strict","truthy","allow_duplicates","base","base","bin_count","breaks","check_sorted","ddof","decimals","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","sort_options","sort_options","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BinaryExpr","Boolean","BooleanFunction","Business","Categorical","CategoricalFunction","Cbrt","Ceil","Clip","Coalesce","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Correlation","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DateOffset","Diff","DropNans","DropNulls","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","Explode","ExtendConstant","Extract","ExtractAll","ExtractGroups","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Interpolate","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","JsonDecode","JsonPathMatch","Kurtosis","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","MinHorizontal","Mode","Negate","Not","NullCount","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","QCut","RLE","RLEID","Random","Range","Rank","Reinterpret","RepeatBy","Replace","Replace","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","RoundSF","SearchSorted","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","SumHorizontal","Tail","TemporalExpr","Titlecase","ToDecimal","ToInteger","ToPhysical","TopK","TopKBy","Trigonometry","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","ignore_nulls","allow_duplicates","base","base","bin_count","breaks","check_sorted","ddof","decimals","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","sort_options","sort_options","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","time_unit","time_zone","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonUdfExpression","__clone_box","borrow","borrow","borrow_mut","borrow_mut","call_udf","call_udf","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","get_output","init","init","into","into","new","serialize","to_owned","try_from","try_from","try_into","try_into","try_serialize","type_id","type_id","vzip","vzip","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","concat","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","explode","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","OptState","PathIterator","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_collect_post_opt","_with_eager","agg","allow_parallel","allows_projection_pushdown","anonymous_scan","anti_join","apply","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","cache","cache","cache","cancel","cast","cast_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloud_options","cloud_options","cloud_options","cloud_options","coalesce","collect","collect_concurrently","comm_subexpr_elim","comm_subexpr_elim","comm_subplan_elim","comm_subplan_elim","concat_impl","concat_impl","concat_impl","count","cross_join","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nulls","eager","eager","explain","explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","file_caching","file_caching","fill_nan","fill_null","filter","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","first","fmt","force_parallel","from","from","from","from","from","from","from","from","from","from","from","from","get_current_optimizations","glob","glob","glob","glob","group_by","group_by_dynamic","group_by_stable","head","hive_options","how","infer_schema_length","init","init","init","init","init","init","init","init","init","init","inner_join","into","into","into","into","into","into","into","into","into","into","iter_paths","iter_paths","join","join_builder","join_nulls","last","lazy","lazy","left_join","left_on","limit","logical_plan","logical_plan","low_memory","low_memory","map","map_python","max","mean","median","melt","memory_map","merge_sorted","min","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","name","new","new","new","new_paths","new_paths","null_count","on","optimize","outer_join","parallel","path","path","path","paths","paths","paths","pivot","predicate_pushdown","predicate_pushdown","profile","projection_pushdown","projection_pushdown","quantile","rechunk","rechunk","rechunk","rechunk","rechunk","rename","reverse","right_on","rolling","row_estimate","row_estimate","row_index","row_index","row_index","row_index","row_index","row_index","scan","scan_from_python_function","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","schema","schema","schema","select","select_seq","semi_join","shift","shift_and_fill","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","slice_pushdown","slice_pushdown","sort","sort_by_exprs","std","streaming","streaming","suffix","sum","tail","tail","to_alp","to_alp_optimized","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top_k","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique","unique_stable","unnest","use_statistics","validate","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_batch_size","with_cache","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_null_values","with_optimizations","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_schema","with_schema","with_schema_modify","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","executors","expressions","planner","Dummy","Executor","borrow","borrow_mut","deref","deref_mut","drop","execute","execute","from","init","into","try_from","try_into","type_id","vzip","AggregationContext","PartitionedAggregation","PhysicalExpr","PhysicalIoHelper","as_expression","as_partitioned_aggregator","as_stats_evaluator","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","evaluate","evaluate_io","evaluate_on_groups","evaluate_partitioned","expr","finalize","fmt","fmt","from","from","has_window_function","init","init","into","into","is_literal","to_field","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","create_physical_plan","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Dense","Distinct","DslPlan","Duration","Duration","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","GroupBy","HConcat","HStack","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","Null","OneToMany","OneToOne","Ordinal","Outer","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_sorted","check_sorted","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","cmp","coalesce","compare","compression","compression","compute_schema","data_pagesize_limit","days","days_only","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","describe","describe_tree_format","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diagonal","display","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","every","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_str","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_partitioned_ds","get_datatype","group_by_dynamic","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","how","include_bom","include_boundaries","include_header","index_column","index_column","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_asof","is_constant_duration","is_full_days","is_zero","join_nulls","label","lit","lit","lit","maintain_order","maintain_order","maintain_order","maintain_order","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","negative","new","new","offset","offset","output_schema","parallel","parse","parsed_int","partial_cmp","period","period","predicate","rechunk","rolling","row_group_size","scan","schema","schema","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_options","skip_rows","slice","start_by","statistics","suffix","suffix","to_alp","to_any_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_supertypes","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","weeks_only","with_coalesce","with_columns","aggs","apply","args","by_column","cache_hits","contexts","df","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","offset","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","selection","slice","sort_options","data_type","high","low"],"q":[[0,"polars_lazy"],[6,"polars_lazy::dsl"],[1365,"polars_lazy::dsl::AggExpr"],[1372,"polars_lazy::dsl::BooleanFunction"],[1375,"polars_lazy::dsl::Expr"],[1409,"polars_lazy::dsl::FunctionExpr"],[1453,"polars_lazy::dsl::StringFunction"],[1473,"polars_lazy::dsl::binary"],[1493,"polars_lazy::dsl::cat"],[1494,"polars_lazy::dsl::dt"],[1550,"polars_lazy::dsl::function_expr"],[1714,"polars_lazy::dsl::function_expr::BooleanFunction"],[1717,"polars_lazy::dsl::function_expr::FunctionExpr"],[1761,"polars_lazy::dsl::function_expr::StringFunction"],[1781,"polars_lazy::dsl::function_expr::cat"],[1783,"polars_lazy::dsl::function_expr::pow"],[1787,"polars_lazy::dsl::function_expr::rolling"],[1819,"polars_lazy::dsl::function_expr::rolling_by"],[1850,"polars_lazy::dsl::function_expr::trigonometry"],[1892,"polars_lazy::dsl::functions"],[1967,"polars_lazy::dsl::python_udf"],[2012,"polars_lazy::dsl::string"],[2074,"polars_lazy::dsl::udf"],[2080,"polars_lazy::frame"],[2513,"polars_lazy::frame::pivot"],[2515,"polars_lazy::physical_plan"],[2518,"polars_lazy::physical_plan::executors"],[2534,"polars_lazy::physical_plan::expressions"],[2577,"polars_lazy::physical_plan::planner"],[2578,"polars_lazy::prelude"],[3166,"polars_lazy::prelude::DslPlan"],[3218,"polars_lazy::prelude::LiteralValue"],[3221,"dyn_clone::sealed"],[3222,"polars_plan::dsl::meta"],[3223,"polars_plan::dsl::expr"],[3224,"polars_error"],[3225,"core::result"],[3226,"polars_plan::dsl::array"],[3227,"polars_plan::dsl::list"],[3228,"core::convert"],[3229,"polars_plan::dsl::expr_dyn_fn"],[3230,"alloc::sync"],[3231,"polars_core::series"],[3232,"core::option"],[3233,"core::ops::function"],[3234,"core::marker"],[3235,"polars_plan::logical_plan::visitor"],[3236,"polars_plan::dsl::function_expr"],[3237,"polars_core::datatypes::dtype"],[3238,"polars_core::chunked_array::ops::sort::options"],[3239,"core::any"],[3240,"alloc::vec"],[3241,"polars_plan::dsl::binary"],[3242,"core::clone"],[3243,"alloc::string"],[3244,"polars_plan::dsl::udf"],[3245,"polars_plan::dsl::cat"],[3246,"polars_plan::dsl::arity"],[3247,"polars_plan::dsl::function_expr::boolean"],[3248,"polars_plan::dsl::function_expr::cat"],[3249,"polars_plan::dsl::function_expr::pow"],[3250,"polars_plan::dsl::function_expr::strings"],[3251,"polars_plan::dsl::functions::temporal"],[3252,"polars_plan::dsl::options"],[3253,"polars_core::utils"],[3254,"polars_lazy::dsl::eval"],[3255,"polars_time::windows::duration"],[3256,"polars_time::windows::group_by"],[3257,"polars_core::datatypes::time_unit"],[3258,"serde::de"],[3259,"polars_plan::logical_plan"],[3260,"polars_core::series::ops"],[3261,"polars_plan::dsl::dt"],[3262,"polars_lazy::dsl::list"],[3263,"polars_arrow::legacy::kernels::ewm"],[3264,"polars_plan::dsl::struct_"],[3265,"polars_core::chunked_array::ops"],[3266,"core::fmt"],[3267,"polars_plan::logical_plan::apply"],[3268,"polars_plan::dsl::function_expr::business"],[3269,"polars_plan::dsl::function_expr::list"],[3270,"polars_plan::dsl::function_expr::array"],[3271,"polars_plan::dsl::function_expr::binary"],[3272,"polars_plan::dsl::function_expr::struct_"],[3273,"polars_plan::dsl::function_expr::range"],[3274,"polars_plan::dsl::function_expr::datetime"],[3275,"polars_plan::logical_plan::options"],[3276,"polars_core::schema"],[3277,"polars_core::datatypes::field"],[3278,"polars_plan::dsl::function_expr::schema"],[3279,"core::hash"],[3280,"polars_ops::chunked_array::interpolate"],[3281,"polars_ops::series::ops::is_between"],[3282,"polars_plan::dsl::name"],[3283,"polars_plan::logical_plan::lit"],[3284,"polars_plan::dsl::python_udf"],[3285,"polars_utils::idx_vec"],[3286,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3287,"polars_ops::series::ops::rank"],[3288,"polars_time::group_by::dynamic"],[3289,"polars_core::chunked_array::ops::rolling_window"],[3290,"polars_core::datatypes"],[3291,"polars_core::chunked_array"],[3292,"polars_time::chunkedarray::rolling_window"],[3293,"polars_core::chunked_array::ops::search_sorted"],[3294,"serde::ser"],[3295,"polars_core::series::series_trait"],[3296,"polars_plan::dsl::string"],[3297,"polars_ops::chunked_array::list::to_struct"],[3298,"polars_ops::series::ops::business"],[3299,"polars_arrow::legacy::kernels::time"],[3300,"polars_plan::dsl::function_expr::rolling"],[3301,"polars_plan::dsl::function_expr::rolling_by"],[3302,"polars_plan::dsl::function_expr::trigonometry"],[3303,"polars_core::frame"],[3304,"rayon::iter"],[3305,"pyo3::types::any"],[3306,"pyo3::instance"],[3307,"polars_utils::arena"],[3308,"polars_plan::logical_plan::alp"],[3309,"polars_plan::logical_plan::aexpr"],[3310,"polars_lazy::scan::ndjson"],[3311,"polars_plan::logical_plan::anonymous_scan"],[3312,"polars_lazy::scan::anonymous_scan"],[3313,"polars_utils::index"],[3314,"polars_lazy::frame::exitable"],[3315,"polars_utils::aliases"],[3316,"polars_lazy::scan::csv"],[3317,"polars_lazy::scan::ipc"],[3318,"polars_lazy::scan::parquet"],[3319,"polars_plan::frame::opt_state"],[3320,"polars_lazy::scan::file_list_reader"],[3321,"polars_io::cloud::options"],[3322,"polars_ops::frame::join::args"],[3323,"core::iter::traits::collect"],[3324,"polars_core::frame::explode"],[3325,"std::path"],[3326,"polars_io::options"],[3327,"polars_io::csv::write::options"],[3328,"polars_io::ipc::write"],[3329,"polars_io::json"],[3330,"polars_io::parquet::write::options"],[3331,"smartstring::alias"],[3332,"core::num::nonzero"],[3333,"polars_io::csv::read::options"],[3334,"polars_lazy::physical_plan::executors::executor"],[3335,"polars_io::predicates"],[3336,"polars_core::frame::group_by::proxy"],[3337,"alloc::boxed"],[3338,"chrono_tz::timezones"],[3339,"core::cmp"],[3340,"polars_core::datatypes::any_value"],[3341,"chrono::naive::datetime"],[3342,"polars_plan::dsl::functions::selectors"],[3343,"polars_plan::dsl::functions::horizontal"],[3344,"polars_plan::dsl::functions::arity"],[3345,"polars_plan::dsl"],[3346,"polars_plan::dsl::functions::range"],[3347,"polars_plan::dsl::functions::index"],[3348,"polars_plan::dsl::functions::coerce"],[3349,"polars_plan::dsl::functions::syntactic_sugar"],[3350,"polars_plan::dsl::functions::business"],[3351,"polars_plan::dsl::functions::concat"],[3352,"polars_plan::dsl::functions::correlation"],[3353,"polars_plan::dsl::functions::repeat"],[3354,"polars_lazy::physical_plan::planner::lp"]],"i":[0,0,0,0,0,0,27,5,0,34,5,52,52,38,5,52,52,27,27,27,27,0,27,27,27,55,55,5,27,0,27,0,27,5,27,0,0,54,27,0,0,27,27,5,5,27,55,55,55,27,34,55,27,27,27,27,27,27,27,0,27,38,27,27,51,5,0,55,27,38,38,27,27,27,27,5,0,27,5,55,62,0,0,0,27,55,55,55,0,0,27,27,5,55,34,27,38,27,5,0,0,27,5,27,54,53,0,62,38,38,27,55,55,55,27,34,5,27,0,52,52,52,52,52,52,52,52,52,52,52,52,62,0,55,55,5,27,34,5,55,55,27,0,0,5,27,27,38,38,27,55,38,38,34,27,34,27,34,0,34,27,38,27,38,38,34,51,27,52,38,38,5,27,0,38,61,55,55,27,27,27,38,27,0,27,34,27,27,27,27,27,27,5,0,27,55,27,27,55,27,61,0,27,27,27,27,27,5,0,0,27,27,27,27,27,27,5,55,5,5,0,55,55,55,54,55,34,27,0,55,55,55,55,55,55,0,27,0,5,34,27,55,27,5,0,55,55,55,27,27,27,27,38,0,27,27,27,55,0,27,34,0,5,5,0,0,38,55,47,48,49,50,34,5,51,38,17,52,53,54,55,27,56,57,58,59,60,61,62,44,4,4,4,4,5,5,5,5,0,9,10,5,0,60,56,5,9,10,5,0,5,5,0,5,5,5,0,5,0,5,5,5,5,5,5,5,9,10,5,9,10,5,5,0,5,0,60,5,32,34,0,0,5,0,5,0,46,9,100,10,4,106,79,47,48,49,50,34,5,51,38,17,52,53,54,55,27,56,57,58,59,60,61,62,44,46,9,100,10,4,106,79,47,48,49,50,34,5,51,38,17,52,53,54,55,27,56,57,58,59,60,61,62,44,5,5,0,59,42,44,32,45,44,0,5,0,5,5,5,5,5,5,47,48,49,50,34,5,51,38,17,52,53,54,55,27,56,57,58,59,60,61,62,44,47,48,49,50,34,5,51,38,17,52,53,54,55,27,56,57,58,59,60,61,62,44,0,0,0,0,0,0,9,10,5,5,5,5,9,10,0,5,0,5,5,5,0,5,65,65,5,0,0,0,0,56,57,58,5,17,17,17,56,57,59,60,61,62,5,46,9,100,10,4,106,79,47,48,49,50,34,5,51,38,17,17,52,53,54,55,27,56,57,58,59,60,61,62,44,46,9,100,10,4,106,79,47,48,49,50,34,5,51,38,17,52,53,54,55,27,56,57,58,59,60,61,62,44,34,5,51,38,17,17,17,52,53,54,55,27,58,59,60,61,62,10,5,5,5,46,9,100,10,4,106,79,47,48,49,50,34,5,51,38,17,52,53,54,55,27,56,57,58,59,60,61,62,44,5,10,5,0,5,0,0,0,5,34,5,5,51,38,17,17,52,53,54,55,27,58,59,60,61,62,5,5,5,5,51,51,51,38,38,38,52,52,52,53,53,53,54,54,54,55,55,55,58,58,58,59,59,59,60,60,60,61,61,61,62,62,62,77,77,5,5,5,5,59,5,5,5,5,5,79,79,5,5,5,5,0,10,5,5,17,5,5,32,45,42,83,5,5,51,38,38,17,52,52,53,53,54,54,55,55,27,27,56,57,58,59,60,61,62,44,0,60,59,0,5,46,9,100,10,4,106,79,47,48,49,50,34,5,5,5,5,5,5,5,5,5,5,5,5,5,5,51,38,17,17,17,17,17,17,17,17,17,17,17,17,52,53,54,55,27,27,27,27,27,56,57,58,59,60,61,61,62,44,17,44,0,5,0,10,5,10,5,9,10,5,46,71,15,100,32,83,5,5,4,34,5,5,51,38,52,53,54,55,27,58,59,60,61,62,10,5,5,56,57,5,0,46,9,100,10,4,106,79,47,48,49,50,34,5,51,38,17,52,53,54,55,27,56,57,58,59,60,61,62,44,44,0,0,5,46,9,100,10,4,106,79,47,48,49,50,34,5,51,38,17,52,53,54,55,27,56,57,58,59,60,61,62,44,5,103,10,4,5,4,5,5,5,5,5,5,5,5,0,5,0,5,4,4,5,9,10,79,106,5,0,10,5,0,10,5,5,0,5,5,5,5,5,5,5,106,5,0,5,100,100,17,17,5,17,106,17,5,0,5,5,0,100,5,100,100,100,100,0,9,10,5,0,0,10,5,0,0,9,10,5,5,56,57,57,0,9,10,5,0,58,56,57,5,56,5,9,10,5,5,44,5,5,57,5,5,5,100,100,17,56,57,44,5,5,0,5,0,5,44,5,48,50,4,5,5,5,5,5,0,5,4,5,106,106,5,0,5,5,0,5,5,5,0,5,5,79,0,5,5,100,5,44,9,10,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,60,60,17,5,10,10,5,5,56,57,34,5,51,38,17,17,17,52,53,54,55,27,58,59,60,61,62,10,10,5,10,9,10,5,5,5,5,5,5,5,5,10,5,9,10,5,5,0,5,9,10,5,5,59,5,0,5,5,106,106,0,9,10,5,0,17,10,5,5,5,0,47,49,0,56,57,56,10,5,9,106,47,48,49,50,34,5,51,38,17,52,53,54,55,27,56,57,58,59,60,61,62,44,5,100,5,38,52,53,54,55,27,9,10,106,5,5,46,9,100,10,4,106,79,47,48,49,50,34,5,51,38,17,52,53,54,55,27,56,57,58,59,60,61,62,44,46,9,100,10,4,106,79,47,48,49,50,34,5,51,38,17,52,53,54,55,27,56,57,58,59,60,61,62,44,100,100,5,100,32,46,9,100,10,4,106,79,47,48,49,50,34,5,51,38,17,52,53,54,55,27,56,57,58,59,60,61,62,44,0,4,10,9,10,5,5,9,10,5,5,5,9,10,5,46,9,100,10,4,106,79,47,48,49,50,34,5,51,38,17,52,53,54,55,27,56,57,58,59,60,61,62,44,57,0,48,50,58,56,56,57,100,57,56,57,56,57,56,57,57,56,57,56,57,100,100,56,57,56,56,57,56,5,56,204,205,206,204,205,206,204,207,208,209,210,211,212,212,213,214,210,215,216,217,218,219,215,214,217,211,220,219,221,220,220,221,213,217,218,219,219,218,216,214,221,210,212,216,222,223,224,225,226,227,228,229,230,227,231,231,225,226,222,225,226,222,226,222,232,233,228,234,235,223,235,236,237,238,239,240,222,241,242,243,244,245,246,236,234,240,247,248,249,250,251,252,253,254,249,250,255,252,253,254,256,257,258,258,255,251,256,257,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,27,52,52,52,52,27,27,27,27,27,27,27,55,55,27,27,0,27,27,0,54,27,27,27,27,55,55,55,27,55,27,27,27,27,27,27,27,27,27,27,55,27,27,27,27,27,27,55,27,55,55,55,27,27,55,27,27,0,27,27,54,53,27,55,55,55,27,27,52,52,52,52,52,52,52,52,52,52,52,52,55,55,27,55,55,27,27,27,27,55,27,27,27,27,27,52,27,55,55,27,27,27,27,0,27,27,27,27,27,27,27,27,55,27,27,55,27,27,27,27,27,27,27,27,27,27,27,27,55,55,55,55,54,55,27,0,55,55,55,55,55,55,27,27,55,27,55,55,55,27,27,27,27,27,27,27,55,27,55,0,0,0,0,0,207,208,209,222,223,224,225,226,227,228,229,230,227,231,231,225,226,222,225,226,222,226,222,232,233,228,234,235,223,235,236,237,238,239,240,222,241,242,243,244,245,246,236,234,240,247,248,249,250,251,252,253,254,249,250,255,252,253,254,256,257,258,258,255,251,256,257,0,53,54,54,0,54,127,127,127,127,0,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,128,128,128,128,0,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,0,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,0,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,57,0,0,0,0,0,56,57,0,0,0,0,0,0,0,0,0,56,57,57,0,56,57,56,57,0,0,0,0,0,0,0,56,57,0,0,0,0,56,57,56,57,56,0,0,0,0,136,109,136,109,136,109,136,136,136,109,136,109,136,136,109,136,136,136,136,136,136,109,136,136,109,109,136,109,136,109,136,136,109,136,109,136,109,109,136,109,136,0,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,0,44,44,44,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,151,133,144,148,153,154,146,155,156,133,133,144,145,146,133,133,144,146,145,151,133,144,148,153,154,146,155,156,145,151,133,144,148,153,154,146,155,156,133,133,154,155,151,133,133,151,133,144,148,153,154,146,155,156,151,133,144,148,153,154,146,155,156,157,157,154,155,145,133,133,166,156,166,156,157,157,153,133,133,133,148,154,155,156,145,151,133,144,148,153,154,146,155,156,145,151,133,144,148,153,154,146,155,156,133,133,133,133,145,151,151,133,133,144,148,153,154,146,155,156,133,166,156,133,133,166,156,151,133,151,166,156,133,133,133,145,157,157,153,157,153,146,133,156,145,145,151,133,133,133,144,148,153,154,146,155,156,133,157,157,153,155,133,133,133,144,155,145,148,145,151,133,144,148,153,154,146,155,156,133,145,151,133,144,148,153,154,146,155,156,157,157,133,133,145,133,165,133,133,145,133,133,144,146,155,133,133,133,133,133,133,154,133,133,157,153,146,148,154,155,148,145,153,146,153,146,133,145,133,133,155,157,153,146,157,153,146,0,166,156,133,166,156,133,157,153,146,154,155,133,133,145,133,166,156,157,153,146,148,154,155,146,133,133,133,133,133,133,146,148,133,133,133,133,133,166,156,133,133,133,133,133,133,148,133,166,156,133,133,133,166,156,145,133,133,144,133,133,133,151,133,144,148,153,154,146,155,156,133,145,151,133,144,148,153,154,146,155,156,145,151,133,144,148,153,154,146,155,156,166,156,145,151,133,144,148,153,154,146,155,156,133,133,133,155,145,133,145,151,133,144,148,153,154,146,155,156,145,146,153,133,133,133,133,133,153,133,153,153,153,153,153,153,153,146,153,146,153,153,157,153,153,146,146,153,133,157,153,146,157,153,146,133,133,153,153,157,153,146,133,157,133,153,153,146,146,153,146,153,153,133,153,153,133,133,153,153,133,133,0,0,0,0,0,0,0,186,186,186,186,186,185,186,186,186,186,186,186,186,186,0,0,0,0,187,187,187,190,190,192,190,192,190,192,190,192,190,192,187,190,187,188,190,188,187,192,190,192,190,190,192,190,192,187,187,190,192,190,192,190,192,190,192,0,0,0,0,162,162,196,197,197,73,162,0,73,197,197,196,73,0,0,197,0,73,73,197,197,197,73,73,73,162,197,197,197,197,197,0,73,0,0,0,0,162,0,0,181,181,73,196,196,0,0,197,181,181,196,162,0,0,73,197,0,0,0,73,73,162,197,73,73,73,197,197,197,197,197,197,197,73,0,161,113,68,174,175,176,164,162,181,177,196,112,197,198,135,73,68,68,68,147,147,147,147,174,161,113,68,172,174,175,176,164,162,181,201,177,196,112,197,198,135,73,161,113,68,172,174,175,176,164,162,181,201,177,196,112,197,198,135,73,161,113,161,113,68,174,175,176,164,162,181,177,196,112,197,198,135,73,161,113,68,174,175,176,164,162,181,177,196,112,197,198,135,73,161,113,68,164,68,175,177,73,177,68,68,161,113,174,175,176,164,181,177,112,198,135,73,161,113,68,172,174,175,176,164,162,181,201,177,196,112,197,198,135,73,161,113,68,172,174,175,176,164,162,181,201,177,196,112,197,198,135,73,112,73,73,161,113,68,174,175,176,164,162,181,177,196,112,197,198,135,73,135,73,161,113,68,172,174,175,176,164,162,181,201,177,196,112,197,198,135,73,161,113,68,174,175,176,164,162,181,177,196,112,197,198,135,161,161,161,113,113,113,68,68,68,174,174,174,175,175,175,176,176,176,164,164,164,162,162,162,181,181,181,177,177,177,198,198,198,135,135,135,161,161,113,68,68,174,147,175,176,164,162,162,181,181,177,196,112,197,198,135,198,161,113,68,172,174,175,176,164,164,162,181,201,177,196,112,197,198,135,73,135,197,200,161,113,68,174,175,176,164,162,181,177,196,112,197,198,135,164,174,161,174,161,113,161,113,68,172,174,175,176,164,162,181,201,177,196,112,197,198,135,73,161,113,68,172,174,175,176,164,162,181,201,177,196,112,197,198,135,73,162,68,68,68,164,161,107,201,197,174,175,176,177,197,112,68,68,68,172,68,181,68,68,164,161,113,172,135,68,68,68,161,113,172,135,200,177,147,147,172,161,113,68,174,175,176,164,162,181,177,196,112,197,198,135,73,174,198,164,161,177,164,164,73,197,161,113,68,174,175,176,164,162,181,177,196,112,197,198,135,73,68,162,181,135,68,68,68,68,161,113,68,172,174,175,176,164,162,181,201,177,196,112,197,197,198,135,73,161,113,68,172,174,175,176,164,162,181,201,177,196,112,197,198,135,73,161,113,68,172,174,175,176,164,162,181,201,177,196,112,197,198,135,73,164,161,113,68,172,174,175,176,164,162,181,201,177,196,112,197,198,135,73,68,68,164,172,259,259,260,261,262,263,264,265,266,267,267,268,262,269,262,265,259,266,270,261,271,268,263,272,273,273,260,274,259,273,271,259,271,275,265,259,273,266,270,274,264,267,272,269,267,264,273,267,264,264,261,261,276,276,276],"f":"````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000000000{hj}{{hj}{{n{jl}}}}00{jj}{{jj}}1{{j{b{A`}}}j}{{}j}{Abj}{Adj}{{jAf}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}``{{jc}j{{Al{j}}}}4321{{jcAf}j{{Al{j}}}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{j}}{b{C`c}}b}{{n{Cbl}}}{{Cd{{b{j}}b}{{Bf{{n{Cbl}}}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}{{ce{Bb{{B`{An}}}}Af}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}?{{jjChCj}j}{jj}0000{{jj}j}1>=1>=1{{jCl}j}{{cCn}j{{Aj{{Ah{j}}}}}}3{cj{{Al{j}}}}`{jAb}{{{b{D`}}}{{b{Db}}}}{{{b{Dd}}}{{b{j}}}}{{{Df{j}}}j}{{{b{A`}}}j}{{j{Bh{Dh}}}j}`{jDj}{{jDlj}j}{{{b{c}}}{{b{e}}}{}{}}0000000000000000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}0000000000000000000000000000{{jjCl}j}{{jcgCn}j{{Al{j}}}{{Al{j}}Dn}{{Aj{{Ah{e}}}}}}{{jj{E`{Af}}{Df{Eb}}}j}`{{{b{Ed}}{b{A`}}}{{n{Efl}}}}{{Eh{Df{j}}}{{n{jl}}}}{{{b{D`}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{Ej}}BdBd}{{n{Bdl}}}}{{Eh{Df{j}}}j}{{jCj}j}0`{jEl}{jj}0{{jjj}j}{{jj}j}0{{{b{En}}}En}{{{b{F`}}}F`}{{{b{Fb}}}Fb}{{{b{Fd}}}Fd}{{{b{Dd}}}Dd}{{{b{j}}}j}{{{b{Ff}}}Ff}{{{b{Dl}}}Dl}{{{b{{Bb{c}}}}}{{Bb{c}}}Dn}{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{Cf}}}Cf}{{{b{G`}}}G`}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Eh}}}Eh}{{{b{c}}{b{C`e}}}f{}{}}000000000000000000000{{{b{{Ah{j}}}}}j}{{{b{A`}}}j}{cj{{Gn{Ef}}}}{{eAf}{{n{jl}}}{{Al{j}}Dn}{{Aj{{Ah{c}}}}}}{e{{n{jl}}}{{Al{j}}Dn}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{Abc}j{{Al{j}}}}{{Adc}j{{Al{j}}}}{jj}00021{{jjH`}j}{{jAf}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnDn}{{Aj{{Ah{j}}}}}}111{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnDn}{{Aj{{Ah{j}}}}}}2{{HbjHdAf}j}0{{j{Df{Hf}}{Bh{{Df{Ef}}}}AfAf}j}{{jjHhHj{Bh{Hl}}{Bh{Ef}}}j}{G`j}11```{{}j}{{}{{Bb{{B`{Hn}}}}}}{{}{{Bb{{B`{Ej}}}}}}{{}{{Bb{{B`{An}}}}}}{{}G`}{{}Gb}{{}Gf}{{}Gh}{{}Gj}{{}Gl}{jj}{Hd{{b{c}}}{}}00000000000000{{{b{{Bb{c}}}}}b{}}11111111111111{Hd{{b{C`c}}}{}}0000000000000000000000000000{c{{n{Dd}}}I`}{c{{n{j}}}I`}{c{{n{Ff}}}I`}{c{{n{Dl}}}I`}{c{{n{{Bb{{B`{D`}}}}}}}I`}{c{{n{{Bb{{B`{Ib}}}}}}}I`}{c{{n{{Bb{Bd}}}}}I`}{c{{n{Fh}}}I`}{c{{n{Fj}}}I`}{c{{n{Fl}}}I`}{c{{n{Fn}}}I`}{c{{n{Cf}}}I`}{c{{n{Gd}}}I`}{c{{n{Gf}}}I`}{c{{n{Gh}}}I`}{c{{n{Gj}}}I`}{c{{n{Gl}}}I`}{{AdChId}j}{{jChId}j}{{jj}}{{jc}j{{Al{j}}}}{Hdf}0000000000000000000000000000{jj}{Adj}1`{jIf}{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Gbj}{{jHfAf}j}{{{b{Dd}}{b{Dd}}}Af}9{{{b{j}}{b{j}}}Af}{{{b{Ff}}{b{Ff}}}Af}{{{b{Dl}}{b{Dl}}}Af}{{{b{{Bb{Bd}}}}{b{{Bb{Bd}}}}}Af}{{{b{{Bb{{B`{c}}}}}}{b{{Bb{{B`{c}}}}}}}AfIh}{{{b{Fh}}{b{Fh}}}Af}{{{b{Fj}}{b{Fj}}}Af}{{{b{Fl}}{b{Fl}}}Af}{{{b{Fn}}{b{Fn}}}Af}{{{b{Cf}}{b{Cf}}}Af}{{{b{Gd}}{b{Gd}}}Af}{{{b{Gf}}{b{Gf}}}Af}{{{b{Gh}}{b{Gh}}}Af}{{{b{Gj}}{b{Gj}}}Af}{{{b{Gl}}{b{Gl}}}Af}{{jc}j{{Al{j}}}}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000{{IjjAf}j}0{{jIl}j}{{jjHhAf}j}11`{{jc}j{{Gn{Ef}}}}{{jc}j{{Aj{{Ah{Cj}}}}}}{jj}0{{jjj}j}{{InCh}j}{{In{b{A`}}}j}::{{jJ`}j};{{}j}{Adj}66{{}{{Bb{{B`{An}}}}}}7{{jj}j}{{{b{D`}}{b{C`Jb}}}{{n{fJd}}}}{{{b{Ej}}{b{C`Jb}}}{{n{fJd}}}}{{{b{Ed}}{b{C`Jb}}}{{n{fJd}}}}{{{b{Jf}}{b{C`Jb}}}{{n{fJd}}}}{{{b{j}}{b{C`Jb}}}{{n{fJd}}}}0{{{b{Ff}}{b{C`Jb}}}{{n{fJd}}}}{{{b{Dl}}{b{C`Jb}}}{{n{fJd}}}}0{{{b{{Bb{c}}}}{b{C`Jb}}}{{n{fJd}}}{}}{{{b{Fh}}{b{C`Jb}}}{{n{fJd}}}}0{{{b{Fj}}{b{C`Jb}}}{{n{fJd}}}}0{{{b{Fl}}{b{C`Jb}}}{{n{fJd}}}}0{{{b{Fn}}{b{C`Jb}}}{{n{fJd}}}}0{{{b{Cf}}{b{C`Jb}}}{{n{fJd}}}}0{{{b{G`}}{b{C`Jb}}}{{n{fJd}}}}{{{b{Gb}}{b{C`Jb}}}{{n{fJd}}}}{{{b{Gd}}{b{C`Jb}}}{{n{fJd}}}}{{{b{Gf}}{b{C`Jb}}}{{n{fJd}}}}{{{b{Gh}}{b{C`Jb}}}{{n{fJd}}}}{{{b{Gj}}{b{C`Jb}}}{{n{fJd}}}}{{{b{Gl}}{b{C`Jb}}}{{n{fJd}}}}{{{b{Eh}}{b{C`Jb}}}{{n{fJd}}}}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnDn}{{Aj{{Ah{j}}}}}}``{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}{{j{Bh{Dh}}}j}{cc{}}00000000000{Hfj}{Ebj}{H`j}{Jhj}{Chj}{Dhj}{Jjj}{Jlj}8{Ddj}{Afj}{{{b{A`}}}j}{Jnj}{K`j}=={Kb{{Bb{{B`{D`}}}}}}{Kd{{Bb{{B`{D`}}}}}}{Kf{{Bb{{B`{D`}}}}}}{Kh{{Bb{{B`{D`}}}}}}{Fh{{Bb{{B`{D`}}}}}}{cc{}}{Cf{{Bb{{B`{D`}}}}}}{Kj{{Bb{{B`{D`}}}}}}{Kl{{Bb{{B`{D`}}}}}}{Kn{{Bb{{B`{D`}}}}}}{Fj{{Bb{{B`{D`}}}}}}{Fn{{Bb{{B`{D`}}}}}}6666{FhCf}{FnCf}8{KhCf}{FjCf}::::::{GlGj};;{Cj{{Bb{{B`{An}}}}}}``{{jc{Bb{{B`{An}}}}L`}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}`{{AdjAf}j}{{jc}j{{Al{j}}}}{{Adjj}j}{{jHdHd}j}{{AbjAf}j}43{Elj}{{{b{Hn}}{b{Lb}}Ld{b{Lf}}{b{Lf}}}{{Bh{Lf}}}}{{{b{An}}{b{Lb}}Ld{b{{Ah{Lf}}}}}Lf}{{{b{Lh}}}Hd}{{{b{D`}}}{{Bh{{Bb{{B`{An}}}}}}}}{{{b{Jf}}{b{Lb}}}{{n{{B`{Lb}}l}}}}99{{{b{h}}}Af}{{{b{Dd}}{b{C`c}}}fLj}{{{b{j}}{b{C`c}}}fLj}{{jDhDhDhDh}j}{{{b{Ff}}{b{C`c}}}fLj}{{{b{Dl}}{b{C`c}}}fLj}{{{b{Fh}}{b{C`c}}}fLj}{{{b{Fj}}{b{C`c}}}fLj}{{{b{Fl}}{b{C`c}}}fLj}{{{b{Fn}}{b{C`c}}}fLj}{{{b{Cf}}{b{C`c}}}fLj}{{{b{Gd}}{b{C`c}}}fLj}{{{b{Gf}}{b{C`c}}}fLj}{{{b{Gh}}{b{C`c}}}fLj}{{{b{Gj}}{b{C`c}}}fLj}{{{b{Gl}}{b{C`c}}}fLj}{{Adj}j}{{j{Bh{Hd}}}j}{{j{Bh{j}}{Bh{Hd}}AfAf}j}``{jj}{cj{{Aj{{Ah{Ch}}}}}}{{}Hd}0000000000000000000000000000`{{jjChCj}j}{{jjj}j}{{jLl}j}{ce{}{}}0000000000000000000000000000{{{b{j}}}}{LnAd}{AdAd}{h{{n{{`{M`}}l}}}}{{jccMb}j{{Al{j}}}}{{{b{h}}}Af}<<<{{jc}j{{Al{j}}}}========11={{AbjAf}j}{{AdjAf}j}{Inj}{Mdj}{{jAfAf}j}{{}j}{Adj}{jj}210{jAd}{cjMf}{{jHf}j}3;;3;;{{Mdc}j{{Bj{{b{A`}}}{{Bf{{n{Efl}}}}}}BlBn}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{j{b{C`c}}{b{C`}}}{{n{jl}}}{{Cd{j{b{C`}}}{{Bf{{n{jl}}}}}}}}{{{b{Lh}}{Bh{{b{Ef}}}}}{{n{Lfl}}}}{{{b{Lh}}c}{{n{Lfl}}}{{Mh{{b{Cj}}}{{Bf{Cj}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Cj}}}{{Bf{Cj}}}}BlBn}}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{{b{Cj}}}}}}}{{Bf{Cj}}}}BlBn}}{{jc}j{{Cd{j}{{Bf{j}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Lf}}}{{Bf{Lf}}}}BlBn}}{{Md{B`{Bj}}}j}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{Lf}}}}}{{Bf{Lf}}}}BlBn}}:{{ce{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}2{{{b{Lh}}}{{n{Lfl}}}}{{jMjAf}j}1111{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jMd}`44`{j}{{jc}j{{Al{j}}}}0;{{{b{{Ah{Lf}}}}}Lh}{c{{Bb{c}}}{}}{{jjj}G`}{{}Gb}{{{b{A`}}{Df{Lf}}{Bb{{B`{An}}}}c}EhD`}{{{b{j}}{b{C`{Ml{{b{j}}}}}}}f}{{j{b{C`{Ml{j}}}}}f}=={Chj}>`8{{F`c}j{{Al{j}}}}{{Fdc}j{{Al{j}}}}{{{b{h}}}{{n{{B`{A`}}l}}}}{{je}j{{Al{j}}Dn}{{Aj{{Ah{c}}}}}}{{jeGl}j{{Al{j}}Dn}{{Aj{{Ah{c}}}}}}{{jj}j}{jj}0{{jjH`}j}{{}j}{h{{Df{j}}}}{{jc}j{{Al{j}}}}{{Md{b{A`}}}j}05`{{j{Df{Hf}}{Bh{{Df{Ef}}}}AfAfAf}j}{{jHd{Bh{{Df{Ef}}}}AfAfAf}j}{{{b{A`}}jMn}j}{{jjMn}j}9{{jN`{Bh{Dh}}}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnDn}{{Aj{{Ah{j}}}}}}{{jAf}j}{{jj}}{{In{Df{Ef}}}j}{{cj}j{{Al{j}}}};{{jcc{Bh{c}}{Bh{Cj}}}j{{Al{j}}}}{{{b{Lh}}{Bh{Cj}}}{{n{Lfl}}}}{{j{b{{Ah{Ch}}}}}j}`{Abj}{Adj}{jj}00{{jNb}j}{{jjGd}j}0{{j{B`{Bj}}{Bb{{B`{An}}}}Nd}j}{{jHdc}j{{Cd{{b{C`{Nh{Nf}}}}}{{Bf{{Bh{Hf}}}}}}BlBnNj}}{{jNd}j}{{jjNl}j}101010{{jMnHfNd}j}{{jjMnHfNl}j}{{jHdAf}j}434343{{{b{h}}}{{Df{{B`{A`}}}}}}{{jJl}j}{{jEb}j}``{{}{{Bb{{B`{An}}}}}}{{jjAfAf{Bh{Dh}}}j}{{AdjAfAf{Bh{Dh}}}j}01{{jcNn}j{{Al{j}}}}``{{{b{Dd}}c}nO`}{{{b{j}}c}nO`}{{{b{Ff}}c}nO`}{{{b{Dl}}c}nO`}{{{b{{Bb{{B`{D`}}}}}}c}nO`}{{{b{{Bb{{B`{Ib}}}}}}c}nO`}{{{b{{Bb{Bd}}}}c}nO`}{{{b{Fh}}c}nO`}{{{b{Fj}}c}nO`}{{{b{Fl}}c}nO`}{{{b{Fn}}c}nO`}{{{b{Cf}}c}nO`}{{{b{Gd}}c}nO`}{{{b{Gf}}c}nO`}{{{b{Gh}}c}nO`}{{{b{Gj}}c}nO`}{{{b{Gl}}c}nO`}{{Adc}j{{Al{j}}}}0{{jOb}j}1{{Abj}j}{{Adj}j}{{jj}j}{{jce}j{{Al{j}}}{{Al{j}}}}{jj}{{j{Bh{Dh}}}j}111{{jAf}j}{{Adjj}j}4{{AbCl}j}{{AdCl}j}{{jCl}j}{{jeCn}j{{Al{j}}Dn}{{Aj{{Ah{c}}}}}}{{jjH`Af}j}8{{AbH`}j}{{AdH`}j}{{jH`}j}{jOd}`{{jCj}j}`{jIn}{{jj}}{{Md{b{A`}}}j}0{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}{{}{{Bb{{B`{An}}}}}}{{Adj}j}{{j{Bh{Hd}}}j}44{{jjj}j}{{Enc}F`{{Al{j}}}}{{Fbc}Fd{{Al{j}}}}{{jjHhHj}j}```{{AdHd}j}{{{b{j}}{b{Lb}}Ld}{{n{Lfl}}}}<{Mdj}{{{b{c}}}e{}{}}000000000000000000000<{{{b{Lh}}}{{n{Lfl}}}}{{{b{c}}}Ef{}}000000{{Ab{Bh{{B`{Bj}}}}}j}{{AdOf{Bh{{B`{Bj}}}}Hd}j}5{{jjCl}j}{{jcgCn}j{{Al{j}}}{{Al{j}}Dn}{{Aj{{Ah{e}}}}}}{c{{n{e}}}{}{}}000000000000000000000000000000000000000000000000000000000{{{b{Lh}}c}{{n{Lfl}}}{{Mh{{b{Cj}}}{{Bf{{n{Cjl}}}}}}}}{{{b{Lh}}c}{{n{Lfl}}}{{Mh{{b{{Ah{{b{Cj}}}}}}}{{Bf{{n{Cjl}}}}}}}}{{jc}{{n{jl}}}{{Cd{j}{{Bf{{n{jl}}}}}}}}{{{b{Lh}}c}{{n{Lfl}}}{{Mh{{b{Lf}}}{{Bf{{n{Lfl}}}}}}}}{{{b{D`}}{b{C`{Df{H`}}}}}{{n{fl}}}}{{{b{c}}}Oh{}}0000000000000000000000000000`{hj}{{Adc}j{{Al{j}}}}{Abj}{Adj}{jj}02100{{jAfAf}j}{{AbH`}j}{{AdH`}j}{{jH`}j}{ce{}{}}0000000000000000000000000000`{cEn{{Al{j}}}}{{F`c}Fb{{Al{j}}}}{{Fdc}Fb{{Al{j}}}}`{{G`j}G`}0{{Gbj}Gb}{{{b{Lh}}Cj}{{n{Lfl}}}}{{Gbjjj}Gb}{{G`jjj}G`}1434334343{{{b{Lh}}{Bh{Cj}}}{{n{Lfl}}}}{{{b{Lh}}}{{n{Lfl}}}}65{{G`Hl}G`}{{G`{Bh{Ef}}}G`}78{{jc}j{{Al{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````{{DjAf}j}{Djj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{Djj}j}{Hd{{b{c}}}{}}{Hd{{b{C`c}}}{}}{Hdf}3{cc{}}87{{}Hd}{ce{}{}}6{c{{n{e}}}{}{}}0{{{b{c}}}Oh{}}2``{{Ifj{E`{Af}}{Df{Eb}}Oj}j}{Ifj}<;{{IfHl}j}1{{IfjHl}j}{{IfEf}j}333<;:393873333333333{{Ifj}j}44{{If{Bh{Ef}}jOl}j}{{Ifjc}j{{Aj{A`}}}}6{{If{b{A`}}}j}7607777777{{IfjEf}j};;:<8878``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{On}}}On}{{{b{c}}{b{C`e}}}f{}{}}{Hd{{b{c}}}{}}{Hd{{b{C`c}}}{}}{c{{n{On}}}I`}{Hdf}{{{b{On}}{b{On}}}Af}{{{b{On}}{b{C`Jb}}}{{n{fJd}}}}0{cc{}}{{{b{On}}{b{C`c}}}fLj}{{}Hd}{ce{}{}}{{{b{On}}c}nO`}{{{b{c}}}e{}{}}{{{b{c}}}Ef{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oh{}}5````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@`}}}A@`}{{{b{c}}{b{C`e}}}f{}{}}{Hd{{b{c}}}{}}{Hd{{b{C`c}}}{}}{c{{n{A@`}}}I`}{Hdf}{{{b{A@`}}{b{A@`}}}Af}{{{b{A@`}}{b{C`Jb}}}{{n{fJd}}}}0{cc{}}{{{b{A@`}}{b{C`c}}}fLj}{{}Hd}{ce{}{}}{{{b{A@`}}c}nO`}{{{b{c}}}e{}{}}{{{b{c}}}Ef{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oh{}}5````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@b}}}A@b}{{{b{c}}{b{C`e}}}f{}{}}{Hd{{b{c}}}{}}{Hd{{b{C`c}}}{}}{c{{n{A@b}}}I`}{Hdf}{{{b{A@b}}{b{A@b}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{A@b}}{b{C`Jb}}}{{n{fJd}}}}0{cc{}}{{{b{A@b}}{b{C`c}}}fLj}{{}Hd}{ce{}{}}{{{b{A@b}}c}nO`}{{{b{c}}}e{}{}}{{{b{c}}}Ef{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oh{}}5``{{}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}`0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjChCj}j}{{cCn}j{{Aj{{Ah{j}}}}}}{cj{{Al{j}}}}{{{Df{j}}}j}{{{b{A`}}}j}{{jCj}j}{{{b{{Ah{j}}}}}j}2{c{{A@f{{Df{A@d}}}}}{{A@l{}{{A@h{A@j}}}}}}{cj{{Gn{Ef}}}}{{cA@n}{{A@f{A@j}}}{{Aj{{Ah{A@j}}}}}}{{eAf}{{n{jl}}}{{Al{j}}Dn}{{Aj{{Ah{c}}}}}}11{e{{n{jl}}}{{Al{j}}Dn}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{jjH`}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnDn}{{Aj{{Ah{j}}}}}}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnDn}{{Aj{{Ah{j}}}}}}{{jjHhHj{Bh{Hl}}{Bh{Ef}}}j}0{G`j}11``{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Gbj}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnDn}{{Aj{{Ah{j}}}}}}{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}``{cj{{Aj{{Ah{Ch}}}}}}{{jjChCj}j}{{jjj}j}{jj}0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{A`}}}j}00```0````2?{{{b{A`}}jMn}j}>{{cj}j{{Al{j}}}}{{jjGd}j}0``{{jjH`Af}j}4{{jjHhHj}j}0`````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{C`c}}}{{b{C`e}}}{}{}}0{{{b{Mj}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{AA`}}A@d}{{n{A@dl}}}}{{{b{AA`}}}AA`}{{{b{c}}{b{C`e}}}f{}{}}{Hd{{b{c}}}{}}0{Hd{{b{C`c}}}{}}0{c{{n{AA`}}}I`}{Hdf}0{{{b{AA`}}{b{AA`}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{AA`}}{b{C`Jb}}}{{n{fJd}}}}{cc{}}{{{AAd{AAb}}}AA`}1{{{b{Mj}}}{{Bh{{Bb{{B`{An}}}}}}}}{{}Hd}0{ce{}{}}0{{{AAd{AAb}}{Bh{Cj}}Af}Mj}{{{b{AA`}}c}nO`}{{{b{c}}}e{}{}}{c{{n{e}}}{}{}}000{{{b{Mj}}{b{C`{Df{H`}}}}}{{n{fl}}}}{{{b{c}}}Oh{}}066`{{OdAf}j}{Odj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{Od{b{A`}}Af}j}{{OdjAf}j}{{Odj}j}1{Hd{{b{c}}}{}}{Hd{{b{C`c}}}{}}{Hdf}38{{OdjHd}j}4{{Od{b{A`}}}{{n{jl}}}}65{cc{}}6<;{{}Hd}{ce{}{}}{{Od{Bh{Cj}}{Bh{Hd}}}j}9>>{{OdHdAAf}j}0{{OdjjAf}j}0{{OdjjAfCh}j}{Odj}{{Odjj}j}>::>:>>>>>>{{OdCjGfj}j}?{{OdGf}j}{{Od{Bh{Hl}}{Bh{Ef}}Gfj}j}{{OdHd}j}{{OdjAf}j}6366{c{{n{e}}}{}{}}0{{{b{c}}}Oh{}}={{Odj}j}````````````````````{{{b{c}}d}f{}}00000000{{A@jc}{{A@f{A@d}}}{{Bj{AAh{b{C`{AAl{AAj}}}}{b{C`{AAl{AAn}}}}}{{Bf{{A@f{f}}}}}}}}{{A@jAf}A@j}{{AB`c}A@j{{Aj{{Ah{j}}}}}}{{ABbAf}ABb}{{{b{ABd}}}Af}{{{B`{ABf}}ABh}{{A@f{A@j}}}}{{A@jA@jcc}A@j{{Al{j}}}}{{AB`cABj}A@j{{Bj{A@d}{{Bf{{A@f{A@d}}}}}}BlBn}}{{{b{ABd}}}{{b{Db}}}}{{{b{c}}}{{b{e}}}{}{}}000000000{{{b{C`c}}}{{b{C`e}}}{}{}}000000000{{A@jABlcCn}A@j{{Aj{{Ah{j}}}}}}{A@jA@j}``{{{b{ABn}}}f}{{A@j{AC`{{b{A`}}Cj}}Af}A@j}{{A@jCjAf}A@j}{{{b{ABn}}}ABn}{{{b{A@j}}}A@j}{{{b{AB`}}}AB`}{{{b{ABh}}}ABh}{{{b{ACb}}}ACb}{{{b{ACd}}}ACd}{{{b{ABd}}}ABd}{{{b{ACf}}}ACf}{{{b{ACh}}}ACh}{{{b{c}}{b{C`e}}}f{}{}}00000000{{{b{ACj}}}{{Bh{{b{ACl}}}}}}0``{{ABbACn}ABb}{A@j{{A@f{A@d}}}}{A@j{{A@f{ABn}}}}````{{{b{ACj}}{Df{A@j}}}{{A@f{A@j}}}}0{{{b{ACb}}{Df{A@j}}}{{A@f{A@j}}}}{A@jA@j}{{A@jA@j}A@j}{{}A@j}{{}ABh}{{}ACd}{{}ACf}{{}ACh}{Hd{{b{c}}}{}}000000000{Hd{{b{C`c}}}{}}000000000{{{b{A@j}}}{{A@f{Ef}}}}000{Hdf}{{{b{C`ABn}}}f}11{{A@je}A@j{{Aj{A`}}}{{AD`{}{{A@h{c}}}}}}2222222{{A@j{Bh{{Df{j}}}}}A@j}``{{{b{A@j}}Af}{{A@f{Ef}}}}{{A@je}A@j{{Al{j}}Dn}{{Aj{{Ah{c}}}}}}``{{{b{ABn}}}{{Bh{{A@f{A@d}}}}}}{{A@jHd}{{A@f{A@d}}}}{{{b{ABn}}}{{A@f{A@d}}}}``{{A@jc}A@j{{Al{j}}}}0{{A@jj}A@j}{ABbA@j}{ACj{{A@f{A@j}}}}0{ACb{{A@f{A@j}}}}10{ABd{{A@f{A@j}}}}{A@jA@j}{{{b{ACh}}{b{C`Jb}}}{{n{fJd}}}}{{ABbAf}ABb}{cc{}}0{IbA@j}1{AB`A@j}2222222{{{b{A@j}}}ACh}{{{b{ACj}}}Af}0{{{b{ACb}}}Af}`{{A@je}AB`{{Al{j}}Dn}{{Aj{{Ah{c}}}}}}{{A@jjcADb}AB`{{Aj{{Ah{j}}}}}}1{{AB`{Bh{Hd}}}A@j}`{{ABbADd}ABb}`{{}Hd}000000000{{A@jA@jcc}A@j{{Al{j}}}}{ce{}{}}000000000{{{b{ACj}}}{{A@f{{Bh{ADf}}}}}}0{{A@jA@jccADh}A@j{{Aj{{Ah{j}}}}}}{A@jABb}{{ABbAf}ABb}{A@jA@j}{ADjA@j}17{{ABbc}ABb{{Aj{{Ah{j}}}}}}{{A@jABl}A@j}``{{ABdAf}ABd}`{{A@jcADl{Bh{{B`{Jf}}}}{Bh{{b{A`}}}}}A@j{{Bj{A@d}{{Bf{{A@f{A@d}}}}}}BlBn}}{{A@jAA`ADl{Bh{ABj}}Af}A@j}666{{A@jADn}A@j}`{{A@jA@j{b{A`}}}{{A@f{A@j}}}}8{{{b{ACj}}}{{Bh{Hd}}}}{{{b{ACb}}}{{Bh{Hd}}}}{{{b{ABd}}}{{Bh{Hd}}}}````={cACb{{Aj{AE`}}}}{cABd{{Aj{AE`}}}}{{{B`{{Ah{AEb}}}}}ACb}{{{B`{{Ah{AEb}}}}}ABd}?={{A@j{b{C`{AAl{AAj}}}}{b{C`{AAl{AAn}}}}}{{A@f{AAh}}}}{{A@jA@jcc}A@j{{Al{j}}}}`{{{b{ACj}}}{{b{AE`}}}}{{{b{ACb}}}{{b{AE`}}}}{{{b{ABd}}}{{b{AE`}}}}{{{b{ACj}}}{{b{{Ah{AEb}}}}}}{{{b{ACb}}}{{b{{Ah{AEb}}}}}}{{{b{ABd}}}{{b{{Ah{AEb}}}}}}```{A@j{{A@f{{AEd{A@dA@d}}}}}}``{{A@jjMn}A@j}{{{b{ACj}}}Af}{{{b{ACb}}}Af}{{{b{ABd}}}Af}``{{A@jei}A@j{{Aj{A`}}}{{AD`{}{{A@h{c}}}}}{{Aj{A`}}}{{AD`{}{{A@h{g}}}}}}{A@jA@j}{{ABbc}ABb{{Aj{{Ah{j}}}}}}{{A@jjcNb}AB`{{Aj{{Ah{j}}}}}}``{{{b{ACj}}}{{Bh{{b{AEf}}}}}}{{{b{ACb}}}{{Bh{{b{AEf}}}}}}{{{b{ABd}}}{{Bh{{b{AEf}}}}}}```{{{b{ABd}}AEh}{{A@f{A@d}}}}{{LbAEjAf}A@j}{{cACd}{{A@f{A@j}}}{{Aj{AE`}}}}{{{B`{{Ah{AEb}}}}ACd}{{A@f{A@j}}}}{{cACf}{{A@f{A@j}}}{{Aj{AE`}}}}{{{B`{{Ah{AEb}}}}ACf}{{A@f{A@j}}}}{{{b{A@j}}}{{A@f{ABj}}}}{{{b{ABd}}{Bh{Hd}}}{{A@f{ABj}}}}`{{A@jc}A@j{{Aj{{Ah{j}}}}}}0{{A@jA@jcc}A@j{{Al{j}}}}{{A@jc}A@j{{Al{j}}}}{{A@jce}A@j{{Al{j}}}{{Al{j}}}}``{{A@jAEbAEl}{{A@f{f}}}}{{A@jAEbAEn}{{A@f{f}}}}{{A@jEf{Bh{ACl}}AEn}{{A@f{f}}}}{{A@jAEbAF`}{{A@f{f}}}}{{A@jAEbAFb}{{A@f{f}}}}{{A@jEf{Bh{ACl}}AFb}{{A@f{f}}}}`{{A@jChABl}A@j}``{{A@jcCn}A@j{{Gn{AFd}}}}{{A@jcCn}A@j{{Aj{{Ah{j}}}}}}{{A@jH`}A@j}``{{ABbc}ABb{{Aj{A`}}}}{A@jA@j}{{A@jABl}A@j}{{AB`{Bh{Hd}}}A@j}{A@j{{A@f{AFf}}}}0{{{b{A@j}}Af}{{A@f{Ef}}}}{{{b{c}}}e{}{}}00000000{{A@jABlcCn}A@j{{Aj{{Ah{j}}}}}}{c{{n{e}}}{}{}}0000000000000000000``{{{b{c}}}Oh{}}000000000{{A@j{Bh{{Df{Ef}}}}AFh}A@j}0{{A@je}A@j{{Aj{A`}}}{{AD`{}{{A@h{c}}}}}}`{{ABbAFj}ABb}={ce{}{}}000000000{{ABbA@j}ABb}{{ABd{Bh{AFl}}}ABd}{{ACbAf}ACb}{{A@jj}A@j}{{A@jc}A@j{{Aj{{Ah{j}}}}}}0{{A@jAf}A@j}0{{ACb{Bh{{b{A`}}}}}ACb}{{A@jc}A@j{{Aj{{Ah{A@j}}}}}}5{{ACb{Bh{ABj}}}ACb}{{ACbAFn}ACb}{{ACbH`}ACb}888{{ABdAf}ABd}{{ACb{Bh{Hd}}}ACb}{{ABd{Bh{Hd}}}ABd};;{{ACjc}ACj{{Al{{Bh{Hd}}}}}}{{ACbc}ACb{{Al{{Bh{Hd}}}}}}3{{ABdc}ABd{{Al{{Bh{Hd}}}}}}3{{ACb{Bh{AG`}}}ACb}{{A@jACh}A@j}{{ACjAEb}ACj}{{ACbAEb}ACb}{{ABdAEb}ABd}{{ACj{B`{{Ah{AEb}}}}}ACj}{{ACb{B`{{Ah{AEb}}}}}ACb}{{ABd{B`{{Ah{AEb}}}}}ABd}{{A@jAf}A@j}0{{ACb{Bh{H`}}}ACb}{{ACbAf}ACb}{{ACjAf}ACj}1{{ABdAf}ABd}4{{ACjc}ACj{{Al{{Bh{AEf}}}}}}{{A@j{b{A`}}{Bh{ABl}}}A@j}{{ACbc}ACb{{Al{{Bh{AEf}}}}}}{{ACb{Bh{AEf}}}ACb}{{ABdc}ABd{{Al{{Bh{AEf}}}}}}{{ABd{Bh{AEf}}}ABd}{{ACb{Bh{ABj}}}ACb}{{ABd{Bh{ABj}}}ABd}{{ACbc}{{A@f{ACb}}}{{Bj{Lb}{{Bf{{A@f{Lb}}}}}}}}{{ACbH`}ACb}>{{ACbHd}ACb}0??==?{A@jA@j}{{{b{A@d}}ei{Bh{m}}Af{Bh{j}}{Bh{{b{A`}}}}}{{A@f{A@d}}}{{Aj{A`}}}{{AD`{}{{A@h{c}}}}}{{Aj{A`}}}{{AD`{}{{A@h{g}}}}}{{Aj{A`}}}{{AD`{}{{A@h{k}}}}}}0`````{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{Hd{{b{c}}}{}}{Hd{{b{C`c}}}{}}{Hdf}{{{b{C`AGb}}{b{C``}}}{{A@f{A@d}}}}{{{b{C`AGd}}{b{C``}}}{{A@f{A@d}}}}{cc{}}{{}Hd}{ce{}{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oh{}}2````{{{b{AGf}}}{{Bh{{b{j}}}}}}{{{b{AGf}}}{{Bh{{b{AGh}}}}}}{{{b{AGf}}}{{Bh{{b{AGj}}}}}}{{{b{AGl}}}{{Bh{{b{AGj}}}}}}??>>==<<;;{{{b{AGf}}{b{A@d}}{b{`}}}{{A@f{Bd}}}}{{{b{AGl}}{b{A@d}}}{{A@f{Bd}}}}{{{b{AGf}}{b{A@d}}{b{AGn}}{b{`}}}{{A@f{AH`}}}}{{{b{AGh}}{b{A@d}}{b{AGn}}{b{`}}}{{A@f{Bd}}}}`{{{b{AGh}}Bd{b{AGn}}{b{`}}}{{A@f{Bd}}}}{{{b{{b{AGf}}}}{b{C`Jb}}}AHb}{{{b{AH`}}{b{C`Jb}}}AHb}??`>>=={{{b{AGf}}}Af}{{{b{AGf}}{b{Lb}}}{{A@f{Lf}}}}>>>>==??{{AAh{b{C`{AAl{AAj}}}}{b{C`{AAl{AAn}}}}}{{A@f{{AHd{AGb}}}}}}``````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000{{{b{Hh}}Ch{Bh{{b{AHf}}}}}{{n{Chl}}}}00{{{b{ABf}}}Af}00{{{b{ABf}}}{{b{Db}}}}`{{{b{c}}}{{b{e}}}{}{}}00000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}00000000000000000``{{{b{ADb}}}ADb}{{{b{Nb}}}Nb}{{{b{Hh}}}Hh}{{{b{AEl}}}AEl}{{{b{AEn}}}AEn}{{{b{AF`}}}AF`}{{{b{ADh}}}ADh}{{{b{ADd}}}ADd}{{{b{AFj}}}AFj}{{{b{AFb}}}AFb}{{{b{AHh}}}AHh}{{{b{N`}}}N`}{{{b{AHj}}}AHj}{{{b{AHl}}}AHl}{{{b{A@n}}}A@n}{{{b{Ib}}}Ib}{{{b{c}}{b{C`e}}}f{}{}}000000000000000``{{{b{Hh}}{b{Hh}}}AHn}`{{{b{c}}{b{e}}}AHn{}{}}``{{{b{Ib}}}{{n{{B`{Lb}}l}}}}`{{{b{Hh}}}Ch}{{{b{Hh}}}Af}{{}ADb}{{}Nb}{{}AEl}{{}AEn}{{}AF`}{{}ADh}{{}AFj}{{}AFb}{{}N`}{{}AHl}{{}A@n}{{}Ib}{Hd{{b{c}}}{}}00000000000000000{Hd{{b{C`c}}}{}}00000000000000000`{{{b{Ib}}}{{n{Efl}}}}0{c{{n{ADb}}}I`}{c{{n{Nb}}}I`}{c{{n{Hh}}}I`}{c{{n{AEl}}}I`}{c{{n{AEn}}}I`}{c{{n{AF`}}}I`}{c{{n{ADh}}}I`}{c{{n{ADd}}}I`}{c{{n{AFj}}}I`}{c{{n{AFb}}}I`}{c{{n{AHh}}}I`}{c{{n{N`}}}I`}{c{{n{AHj}}}I`}{c{{n{AHl}}}I`}{c{{n{A@n}}}I`}{c{{n{Ib}}}I`}`{{{b{Ib}}}{{n{{`{M`}}l}}}}{Hdf}00000000000000000{{{b{ADb}}{b{ADb}}}Af}{{{b{Nb}}{b{Nb}}}Af}{{{b{Hh}}{b{Hh}}}Af}{{{b{AEl}}{b{AEl}}}Af}{{{b{AEn}}{b{AEn}}}Af}{{{b{AF`}}{b{AF`}}}Af}{{{b{ADh}}{b{ADh}}}Af}{{{b{ADd}}{b{ADd}}}Af}{{{b{AFj}}{b{AFj}}}Af}{{{b{AFb}}{b{AFb}}}Af}{{{b{AHh}}{b{AHh}}}Af}{{{b{N`}}{b{N`}}}Af}{{{b{AHj}}{b{AHj}}}Af}{{{b{AHl}}{b{AHl}}}Af}{{{b{A@n}}{b{A@n}}}Af}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000`{{{b{ADb}}{b{C`Jb}}}{{n{fJd}}}}{{{b{Nb}}{b{C`Jb}}}{{n{fJd}}}}{{{b{Hh}}{b{C`Jb}}}{{n{fJd}}}}0{{{b{AEl}}{b{C`Jb}}}{{n{fJd}}}}{{{b{ABf}}{b{C`Jb}}}{{n{fJd}}}}{{{b{AEn}}{b{C`Jb}}}{{n{fJd}}}}{{{b{AF`}}{b{C`Jb}}}{{n{fJd}}}}{{{b{ADh}}{b{C`Jb}}}{{n{fJd}}}}{{{b{ADd}}{b{C`Jb}}}{{n{fJd}}}}0{{{b{AFj}}{b{C`Jb}}}{{n{fJd}}}}0{{{b{AFb}}{b{C`Jb}}}{{n{fJd}}}}{{{b{AHh}}{b{C`Jb}}}{{n{fJd}}}}{{{b{N`}}{b{C`Jb}}}{{n{fJd}}}}{{{b{AHj}}{b{C`Jb}}}{{n{fJd}}}}{{{b{AHl}}{b{C`Jb}}}{{n{fJd}}}}{{{b{A@n}}{b{C`Jb}}}{{n{fJd}}}}`{cc{}}0000000{ADdADh}1111111111`{{{b{AHj}}}Cj}{{{b{AI`}}{Df{Bd}}{b{ADb}}}{{n{{AEd{Bd{Df{Bd}}AGn}}l}}}}{{{b{ADb}}{b{C`c}}}fLj}{{{b{Nb}}{b{C`c}}}fLj}{{{b{Hh}}{b{C`c}}}fLj}{{{b{AEl}}{b{C`c}}}fLj}{{{b{AEn}}{b{C`c}}}fLj}{{{b{AF`}}{b{C`c}}}fLj}{{{b{ADh}}{b{C`c}}}fLj}{{{b{ADd}}{b{C`c}}}fLj}{{{b{AFj}}{b{C`c}}}fLj}{{{b{AFb}}{b{C`c}}}fLj}{{{b{AHh}}{b{C`c}}}fLj}{{{b{N`}}{b{C`c}}}fLj}{{{b{AHj}}{b{C`c}}}fLj}{{{b{AHl}}{b{C`c}}}fLj}{{{b{A@n}}{b{C`c}}}fLj}``````{{}Hd}00000000000000000{ce{}{}}00000000000000000{{{b{ADd}}}Af}{{{b{Hh}}{Bh{{b{A`}}}}}Af}{{{b{Hh}}}Af}0``{Mfj}{AIbj}{AHjj}````{AHjAHj}`{{{b{Hh}}}Ch}5{{HhCh}Hh}`1{{{b{AFj}}}Af}7{ChHh}{ADdADh}````{{{b{A`}}}Hh}`{{{b{Hh}}{b{Hh}}}{{Bh{AHn}}}}````{{{b{AI`}}{Df{Bd}}{b{Nb}}}{{n{{AEd{Bd{Df{Bd}}AGn}}l}}}}`{{{b{ABf}}AEh}{{n{A@dl}}}}{{{b{ABf}}{Bh{Hd}}}{{n{{B`{Lb}}l}}}}`{{{b{ADb}}c}nO`}{{{b{Nb}}c}nO`}{{{b{Hh}}c}nO`}{{{b{AEl}}c}nO`}{{{b{AEn}}c}nO`}{{{b{AF`}}c}nO`}{{{b{ADh}}c}nO`}{{{b{ADd}}c}nO`}{{{b{AFj}}c}nO`}{{{b{AFb}}c}nO`}{{{b{AHh}}c}nO`}{{{b{N`}}c}nO`}{{{b{AHj}}c}nO`}{{{b{AHl}}c}nO`}{{{b{A@n}}c}nO`}{{{b{Ib}}c}nO`}`````{{{b{ADh}}}{{b{A`}}}}`{Ib{{n{AFfl}}}}{{{b{AHj}}}{{Bh{AId}}}}{{{b{c}}}e{}{}}000000000000000{{{b{c}}}Ef{}}00`{{{b{Hh}}Ch{Bh{{b{AHf}}}}ceg}{{n{Chl}}}{{Bj{Ch}{{Bf{Ch}}}}}{{Bj{Ch}{{Bf{AIf}}}}}{{Bj{AIf}{{Bf{Ch}}}}}}{{{b{Hh}}Ch{Bh{{b{AHf}}}}}{{n{Chl}}}}00{c{{n{e}}}{}{}}00000000000000{AId{{n{AHjl}}}}111111111111111111111{{{b{c}}}Oh{}}00000000000000000`{ce{}{}}00000000000000000{{{b{Hh}}}Ch}{{{b{Hh}}}Af}{{ADhACn}ADh}````````````````````````````````````````````````````````","D":"GFb","p":[[1,"reference"],[5,"Private",3221],[1,"unit"],[5,"MetaNameSpace",6,3222],[6,"Expr",6,3223],[6,"PolarsError",3224],[6,"Result",3225],[1,"str"],[5,"ArrayNameSpace",6,3226],[5,"ListNameSpace",6,3227],[1,"bool"],[1,"slice"],[10,"AsRef",3228],[10,"Into",3228],[10,"FunctionOutputField",6,3229],[5,"Arc",3230],[5,"SpecialEq",6,3229],[5,"Series",3231],[17,"Output"],[6,"Option",3232],[10,"Fn",3233],[10,"Send",3234],[10,"Sync",3234],[0,"mut"],[6,"VisitRecursion",3235],[10,"FnMut",3233],[6,"FunctionExpr",6,3236],[1,"i64"],[6,"DataType",3237],[5,"SortOptions",3238],[5,"SortMultipleOptions",3238],[10,"SeriesUdf",6,3229],[10,"Any",3239],[6,"AggExpr",6,3223],[5,"Vec",3240],[1,"u64"],[5,"BinaryNameSpace",1473,3241],[6,"Operator",6,3223],[10,"Clone",3242],[1,"array"],[1,"i32"],[10,"RenameAliasFn",6,3229],[5,"String",3243],[5,"UserDefinedFunction",6,3244],[10,"SeriesBinaryUdf",6,3229],[5,"CategoricalNameSpace",6,3245],[5,"When",6,3246],[5,"Then",6,3246],[5,"ChainedWhen",6,3246],[5,"ChainedThen",6,3246],[6,"Excluded",6,3223],[6,"BooleanFunction",6,3247],[6,"CategoricalFunction",6,3248],[6,"PowFunction",6,3249],[6,"StringFunction",6,3250],[5,"DatetimeArgs",6,3251],[5,"DurationArgs",6,3251],[5,"RollingCovOptions",6,3252],[5,"StrptimeOptions",6,3252],[5,"JoinOptions",6,3252],[6,"WindowType",6,3252],[6,"WindowMapping",6,3252],[10,"IntoVec",3253],[1,"u8"],[10,"ExprEvalExtension",6,3254],[1,"usize"],[1,"f64"],[5,"Duration",2578,3255],[6,"ClosedWindow",3256],[6,"TimeUnit",3257],[10,"BinaryUdfOutputField",6,3229],[10,"Deserializer",3258],[6,"DslPlan",2578,3259],[6,"NullBehavior",3260],[5,"DateLikeNameSpace",1494,3261],[10,"Sized",3234],[10,"ListNameSpaceExtension",6,3262],[5,"EWMOptions",3263],[5,"StructNameSpace",6,3264],[6,"FillNullStrategy",3265],[5,"Formatter",3266],[5,"Error",3266],[10,"UdfSchema",6,3267],[1,"i8"],[1,"f32"],[1,"u32"],[1,"i16"],[1,"u16"],[6,"BusinessFunction",3268],[6,"ListFunction",3269],[6,"ArrayFunction",3270],[6,"BinaryFunction",3271],[6,"StructFunction",3272],[6,"RangeFunction",3273],[6,"TemporalFunction",3274],[5,"FunctionOptions",3275],[5,"Schema",3276],[6,"Context",3259],[5,"Field",3277],[5,"FieldsMapper",6,3278],[10,"Hasher",3279],[6,"InterpolationMethod",3280],[10,"IntoListNameSpace",6,3262],[10,"Display",3266],[6,"ClosedInterval",3281],[5,"ExprNameNameSpace",6,3282],[10,"Literal",2578,3283],[10,"FnOnce",3233],[5,"PythonUdfExpression",1967,3284],[5,"UnitVec",3285],[6,"QuantileInterpolOptions",3286],[5,"RankOptions",2578,3287],[5,"RollingGroupOptions",2578,3288],[5,"RollingOptionsFixedWindow",3289],[5,"Float64Type",3290],[5,"ChunkedArray",3291],[10,"Copy",3234],[5,"RollingOptionsDynamicWindow",3292],[6,"SearchSortedSide",3293],[10,"Serializer",3294],[6,"IsSorted",3295],[5,"StringNameSpace",2012,3296],[6,"ListToStructWidthStrategy",3297],[5,"TypeId",3239],[6,"Roll",3298],[6,"NonExistent",3299],[6,"RollingFunction",1787,3300],[6,"RollingFunctionBy",1819,3301],[6,"TrigonometricFunction",1850,3302],[5,"DataFrame",3303],[8,"PolarsResult",3224],[17,"Item"],[5,"LazyFrame",2080],[10,"IntoParallelIterator",3304],[5,"UnionArgs",2578,3275],[5,"PythonFunction",1967,3284],[5,"PyAny",3305],[5,"Py",3306],[1,"char"],[5,"Node",3307],[6,"IR",3308],[5,"Arena",3307],[6,"AExpr",3309],[5,"LazyGroupBy",2080],[5,"JoinBuilder",2080],[5,"LazyJsonLineReader",2080,3310],[10,"AnonymousScan",2578,3311],[5,"ScanArgsAnonymous",2080,3312],[8,"SchemaRef",3276],[8,"IdxSize",3313],[5,"InProcessQuery",2080,3314],[8,"PlHashMap",3315],[5,"LazyCsvReader",2080,3316],[5,"ScanArgsIpc",2080,3317],[5,"ScanArgsParquet",2080,3318],[5,"OptState",2080,3319],[10,"LazyFileListReader",2080,3320],[5,"CloudOptions",3321],[6,"JoinCoalesce",3322],[10,"IntoIterator",3323],[5,"DynamicGroupOptions",2578,3288],[6,"JoinType",2578,3322],[8,"PathIterator",2080,3320],[5,"JoinArgs",2578,3322],[10,"IntoLazy",2080],[8,"AllowedOptimizations",2080,3319],[5,"MeltArgs",3324],[5,"Path",3325],[5,"PathBuf",3325],[1,"tuple"],[5,"RowIndex",3326],[5,"AnonymousScanArgs",2578,3311],[8,"PyObject",3306],[5,"CsvWriterOptions",2578,3327],[5,"IpcWriterOptions",2578,3328],[5,"JsonWriterOptions",2578,3329],[5,"ParquetWriteOptions",2578,3330],[8,"String",3331],[5,"IRPlan",3308],[6,"UniqueKeepStrategy",3303],[6,"JoinValidation",2578,3322],[8,"NonZeroUsize",3332],[6,"CsvEncoding",3333],[6,"NullValues",3333],[10,"Executor",2518,3334],[5,"Dummy",2518,3334],[10,"PhysicalExpr",2534],[10,"PartitionedAggregation",2534],[10,"StatsEvaluator",3335],[5,"PhysicalIoHelper",2534],[6,"GroupsProxy",3336],[5,"AggregationContext",2534],[8,"Result",3266],[5,"Box",3337],[6,"Tz",3338],[6,"RankMethod",2578,3287],[6,"LiteralValue",2578,3283],[5,"AnonymousScanOptions",2578,3275],[6,"Ordering",3339],[10,"PolarsTemporalGroupby",2578,3288],[5,"Null",2578,3283],[6,"AnyValue",3340],[5,"NaiveDateTime",3341],[15,"Quantile",1365],[15,"Min",1365],[15,"Max",1365],[15,"IsBetween",1714],[15,"Any",1714],[15,"All",1714],[15,"SortBy",1375],[15,"Filter",1375],[15,"Cast",1375],[15,"Sort",1375],[15,"Gather",1375],[15,"RenameAlias",1375],[15,"Ternary",1375],[15,"Function",1375],[15,"Window",1375],[15,"AnonymousFunction",1375],[15,"Slice",1375],[15,"BinaryExpr",1375],[15,"QCut",1717],[15,"Entropy",1717],[15,"Log",1717],[15,"Hist",1717],[15,"Cut",1717],[15,"EwmMeanBy",1717],[15,"Correlation",1717],[15,"Round",1717],[15,"RoundSF",1717],[15,"Clip",1717],[15,"BackwardFill",1717],[15,"ForwardFill",1717],[15,"Random",1717],[15,"GatherEvery",1717],[15,"Rank",1717],[15,"EwmMean",1717],[15,"EwmStd",1717],[15,"EwmVar",1717],[15,"ValueCounts",1717],[15,"Replace",1717],[15,"CumCount",1717],[15,"CumSum",1717],[15,"CumProd",1717],[15,"CumMin",1717],[15,"CumMax",1717],[15,"TopK",1717],[15,"TopKBy",1717],[15,"ConcatHorizontal",1761],[15,"ConcatVertical",1761],[15,"ExtractGroups",1761],[15,"JsonDecode",1761],[15,"PadStart",1761],[15,"PadEnd",1761],[15,"SplitExact",1761],[15,"Contains",1761],[15,"Find",1761],[15,"Replace",1761],[15,"GroupBy",3166],[15,"Union",3166],[15,"Sort",3166],[15,"Cache",3166],[15,"ExtContext",3166],[15,"DataFrameScan",3166],[15,"Select",3166],[15,"HStack",3166],[15,"Scan",3166],[15,"MapFunction",3166],[15,"Filter",3166],[15,"Distinct",3166],[15,"Slice",3166],[15,"Sink",3166],[15,"Join",3166],[15,"HConcat",3166],[15,"PythonScan",3166],[15,"Range",3218]],"r":[[8,3223],[21,3226],[29,3229],[31,3247],[35,3248],[36,3245],[39,3246],[40,3246],[59,3251],[66,3251],[76,3223],[81,3223],[82,3254],[83,3282],[88,3278],[89,3282],[99,3236],[100,3229],[106,3229],[118,3262],[132,3252],[142,3227],[143,3262],[158,3222],[173,3223],[183,3249],[193,3229],[201,3252],[208,3229],[209,3229],[220,3229],[228,3250],[235,3252],[237,3264],[244,3246],[253,3267],[258,3244],[261,3246],[264,3252],[265,3252],[298,3342],[302,3343],[309,3343],[312,3344],[316,3345],[318,3346],[333,3347],[335,3347],[340,3348],[341,3349],[343,3345],[345,3246],[406,3350],[413,3349],[415,3345],[466,3343],[467,3342],[468,3342],[469,3351],[470,3351],[471,3351],[480,3352],[482,3343],[486,3343],[491,3346],[492,3251],[493,3346],[494,3346],[621,3345],[623,3342],[624,3342],[625,3251],[699,3345],[734,3343],[737,3351],[799,3345],[839,3342],[870,3346],[871,3346],[916,3349],[918,3349],[928,3345],[931,3345],[935,3283],[945,3344],[956,3345],[959,3345],[966,3349],[970,3343],[971,3349],[974,3343],[975,3349],[983,3349],[987,3343],[1013,3349],[1015,3345],[1027,3352],[1034,3345],[1037,3349],[1041,3343],[1045,3353],[1057,3352],[1058,3352],[1128,3352],[1136,3345],[1141,3349],[1145,3343],[1151,3246],[1154,3346],[1290,3345],[1335,3246],[1473,3241],[1493,3245],[1494,3261],[1566,3247],[1569,3248],[1607,3236],[1653,3249],[1685,3250],[1709,3236],[1710,3236],[1711,3236],[1712,3236],[1713,3236],[1781,3248],[1785,3249],[1791,3300],[1823,3301],[1865,3302],[1892,3251],[1893,3251],[1894,3342],[1895,3343],[1897,3343],[1898,3344],[1899,3346],[1900,3347],[1901,3347],[1902,3348],[1903,3349],[1904,3349],[1905,3343],[1906,3342],[1908,3342],[1910,3351],[1913,3351],[1914,3351],[1915,3352],[1916,3343],[1917,3343],[1918,3346],[1919,3346],[1920,3251],[1921,3346],[1922,3346],[1925,3342],[1926,3342],[1927,3251],[1928,3343],[1929,3351],[1932,3342],[1933,3346],[1934,3346],[1935,3349],[1936,3349],[1937,3344],[1938,3349],[1939,3349],[1940,3349],[1944,3349],[1949,3349],[1950,3352],[1951,3349],[1952,3343],[1953,3353],[1954,3352],[1955,3352],[1958,3352],[1959,3349],[1960,3346],[1961,3346],[1967,3284],[1968,3284],[1969,3284],[1970,3284],[2012,3296],[2074,3244],[2080,3319],[2081,3314],[2084,3316],[2085,3320],[2088,3310],[2089,3319],[2090,3320],[2091,3312],[2092,3317],[2093,3318],[2518,3334],[2519,3334],[2577,3354],[2578,3311],[2579,3311],[2580,3275],[2588,3327],[2594,3259],[2595,3255],[2597,3288],[2612,3328],[2614,3322],[2615,3322],[2616,3322],[2617,3329],[2619,3283],[2620,3283],[2626,3283],[2627,3283],[2633,3330],[2634,3288],[2637,3287],[2638,3287],[2639,3288],[2655,3275]],"b":[[499,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[500,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[501,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[572,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[573,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[574,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[628,"impl-Expr"],[629,"impl-PartialEq-for-Expr"],[632,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[633,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[710,"impl-Debug-for-Expr"],[711,"impl-Display-for-Expr"],[713,"impl-Debug-for-Operator"],[714,"impl-Display-for-Operator"],[716,"impl-Debug-for-BooleanFunction"],[717,"impl-Display-for-BooleanFunction"],[718,"impl-Display-for-CategoricalFunction"],[719,"impl-Debug-for-CategoricalFunction"],[720,"impl-Display-for-PowFunction"],[721,"impl-Debug-for-PowFunction"],[722,"impl-Debug-for-StringFunction"],[723,"impl-Display-for-StringFunction"],[724,"impl-Debug-for-FunctionExpr"],[725,"impl-Display-for-FunctionExpr"],[751,"impl-From%3Cf64%3E-for-Expr"],[752,"impl-From%3Ci32%3E-for-Expr"],[753,"impl-From%3Cu8%3E-for-Expr"],[754,"impl-From%3Ci8%3E-for-Expr"],[755,"impl-From%3Ci64%3E-for-Expr"],[756,"impl-From%3Cu64%3E-for-Expr"],[757,"impl-From%3Cf32%3E-for-Expr"],[758,"impl-From%3Cu32%3E-for-Expr"],[760,"impl-From%3CAggExpr%3E-for-Expr"],[761,"impl-From%3Cbool%3E-for-Expr"],[762,"impl-From%3C%26str%3E-for-Expr"],[763,"impl-From%3Ci16%3E-for-Expr"],[764,"impl-From%3Cu16%3E-for-Expr"],[767,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[768,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[769,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[770,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[771,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[773,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[774,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[775,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[776,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[777,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[778,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[783,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[784,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[786,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[787,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[819,"impl-Hash-for-Expr"],[820,"impl-Expr"],[1095,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[1096,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1097,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1806,"impl-Debug-for-RollingFunction"],[1807,"impl-Display-for-RollingFunction"],[1837,"impl-Display-for-RollingFunctionBy"],[1838,"impl-Debug-for-RollingFunctionBy"],[1879,"impl-Display-for-TrigonometricFunction"],[1880,"impl-Debug-for-TrigonometricFunction"],[2241,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2243,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2474,"impl-LazyFileListReader-for-LazyCsvReader"],[2475,"impl-LazyCsvReader"],[2476,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2477,"impl-LazyJsonLineReader"],[2496,"impl-LazyFileListReader-for-LazyCsvReader"],[2497,"impl-LazyCsvReader"],[2498,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2499,"impl-LazyJsonLineReader"],[2902,"impl-Debug-for-Duration"],[2903,"impl-Display-for-Duration"],[2909,"impl-Display-for-JoinType"],[2910,"impl-Debug-for-JoinType"],[2911,"impl-Display-for-JoinValidation"],[2912,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOQI/AAEABEAFwANACYAAQAqABEAPQAFAEQABwBNAAMAUwAAAFUAFgBtABYAhQACAIkABQCQAA4AoAALAK0AAgCxAB4A0wAJAN4ADwDvAAQA9gAMAAQBAQAHAQAACQEdACgBAAAtAQAAMAEBADQBAAA6AQAAPAEAAEcBAABKAQAAUQEAAFMBAQBYAQAAWwE5AJcBAACZAQAAmwEBAKABAACnASsA1gEAAPABDAD+AUsATAIAAE4CHABsAgAAbgIAAHQCAAB2Ag4AhgIjALICAAC1AgEAugIAAMACAADDAhsA4AIAAPACBwD5AgQAAAMEAAYDBQAQAwEAEwMBABsDAAAeAwAAIAMAACUDAQAqAwUAMwMBADYDCwBFAwEASQMcAIcDAgCLAwAAngMAAKYDAACzAwAAtgMFAL8DAADCAwAA0gMAANUDAgDdAwIA4QMDAOoDAQDuAwIA9AMBAAAEAAACBAEACQQAAAsEAAATBAEAGQQBABwEAAAhBAIAOwQFAEIEEgBeBAAAZQQAAGwEAABxBAAAcwQAAHUEAAB7BAAAgAQAAIIEAACEBAIAiwQWAKMEBwCvBDkA6wQAAO0EHgAYBQAAGgUdADsFAQBMBQAAUAUBAFUFEwBsBQEAbwUBAHIFAQB1BQQAewVGAMMFAwDIBQIAzQUCANIFAwDaBQEA4wUCAOkFAADrBQAA+AUAAAcGAwAPBgEBEgcBABUHGgAxBwEANAclAFsHAQBeBwYAaQcAAHcHAACEBwEAiwcBAJYHAgCaBwMAowcDAKsHHQDKBwAAzAcCANEHCwDeBwMA5gcCAOoHAADtBwAA8gcCAPYHAQAWCAMAIggDACkIAAArCA0APAgBAEAIFQBXCAEAXAgRAHAIAQB0CAAAewgAAH4IGACbCAMAoAgGALsIAQC+CAAAwggAAMQIAADNCAIA1QgAANcICgDzCAEA+AgBAPsIAAD9CAAAAgkBAAgJAwANCQMAEwkAABUJAAAXCQQAJAkDADEJBAA3CQAAOwkBAD4JAABKCQAAVwkBAFoJHQB6CQkAhwkBAIoJCQCVCQAAnQkBAKsJAACtCQAAsgkBALUJAQDBCQAAwwkAANIJBQDZCQYA4QkAAOMJBQDrCQAA7gkKAPoJAAD9CQAA/wkBAAMKAgAICgAACgoOABwKAAAfCgIAIwoDACkKAAAvCgEANQoAADcKBgBBCgIARQoAAEgKCQBTCgIAWAoAAFoKAABgChMAdwolAJ8KJADICosAVQsTAHELAAB8CwAAfgsRAJELAACUCxEAuAsBALwLAAC/CwIAxQsFAMwLAADPCwAA0QsCANULAQDZCwIA3wsUAPULoAA="}],\
["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNONNNNHONONNNNNNNNNNNNNNNNNNONEEPKPPGKKNMMMNNHHHNNHHNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","contains","contains_chunked","contains_chunked","ends_with","ends_with","ends_with_chunked","ends_with_chunked","list","scatter","starts_with","starts_with","starts_with_chunked","starts_with_chunked","strings","AsList","ListNameSpaceImpl","as_list","join_literal","join_literal","join_many","join_many","lst_arg_max","lst_arg_max","lst_arg_min","lst_arg_min","lst_concat","lst_concat","lst_get","lst_get","lst_join","lst_join","lst_lengths","lst_lengths","lst_max","lst_max","lst_mean","lst_mean","lst_median","lst_median","lst_min","lst_min","lst_n_unique","lst_n_unique","lst_reverse","lst_reverse","lst_shift","lst_shift","lst_slice","lst_slice","lst_sort","lst_sort","lst_std","lst_std","lst_sum","lst_sum","lst_unique","lst_unique","lst_unique_stable","lst_unique_stable","lst_var","lst_var","same_type","same_type","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Outer","SeriesJoin","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_outer_join","_create_left_df_from_slice","_create_left_df_from_slice","_finish_join","_finish_left_join","_finish_left_join","_join_suffix_name","_left_join_from_series","_left_join_from_series","_outer_join_from_series","_outer_join_from_series","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","coalesce","coalesce","cross_join","cross_join","cross_join_dfs","cross_join_dfs","default","default","default","default_join_ids","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","hash_join_inner","hash_join_inner","hash_join_outer","hash_join_outer","how","init","init","init","init","inner_join","into","into","into","into","is_asof","join","join_nulls","left_join","needs_checks","new","outer_join","private_left_join_multiple_keys","slice","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validation","with_coalesce","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","is_sorted","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts","value_counts"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[23,"polars_ops::chunked_array::list"],[72,"polars_ops::chunked_array::strings"],[74,"polars_ops::frame"],[78,"polars_ops::frame::join"],[230,"polars_ops::prelude"],[232,"polars_ops::series"],[281,"polars_ops::chunked_array::binary"],[282,"polars_core::datatypes"],[283,"polars_ops::chunked_array::binary::namespace"],[284,"polars_ops::chunked_array::scatter"],[285,"polars_utils::index"],[286,"polars_core::series"],[287,"polars_error"],[288,"core::marker"],[289,"core::option"],[290,"core::iter::traits::collect"],[291,"polars_ops::chunked_array::list::namespace"],[292,"polars_core::datatypes::aliases"],[293,"polars_core::chunked_array::ops::sort::options"],[294,"polars_core::frame"],[295,"dyn_clone::sealed"],[296,"polars_ops::frame::join::hash_join"],[297,"polars_ops::frame::join::args"],[298,"alloc::string"],[299,"polars_ops::frame::join::cross_join"],[300,"core::fmt"],[301,"core::hash"],[302,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[303,"polars_arrow::array::primitive"],[304,"core::convert"],[305,"core::result"],[306,"core::any"],[307,"polars_ops::series::ops::arg_min_max"],[308,"polars_ops::series::ops"],[309,"polars_core::chunked_array::ops::search_sorted"],[310,"polars_ops::series::ops::various"],[311,"polars_ops::frame::join::general"],[312,"polars_ops::series::ops::clip"],[313,"polars_ops::series::ops::horizontal"],[314,"polars_ops::series::ops::index"],[315,"polars_ops::series::ops::negate"],[316,"polars_ops::series::ops::not"],[317,"polars_ops::series::ops::int_range"]],"i":[0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,0,8,4,4,4,4,0,0,0,16,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,26,0,0,0,27,0,0,36,37,0,0,37,0,0,0,0,36,0,0,36,37,0,38,38,38,38,37,0,33,36,37,38,0,31,31,0,31,31,0,31,31,31,31,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,36,33,39,39,39,39,33,36,38,0,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,33,36,36,36,37,37,37,38,38,38,33,36,37,37,38,38,33,33,36,37,38,33,36,37,38,45,45,45,45,33,33,36,37,38,48,33,36,37,38,37,48,33,48,38,33,48,0,33,33,33,33,36,37,38,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,0,0,54,0,54,54,0,0,0,54,52,52,53,54,54,0,0,0,54,54,0,0,54,54,54,54,54,54,54,54,54,54,54,54,54,0,56,56,0,0,0,0,0,0,0,54,54,54,54,56,56],"f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}2211```{{{d{B`}}}{{d{Bb}}}}{{{d{Bd}}{d{Bf}}Bh}{{Af{Bj}}}}0{{{d{Bd}}{d{Bj}}Bh}{{Af{Bj}}}}0{{{d{Bd}}}Bl}000{{{d{Bd}}{d{{l{Ad}}}}}{{Af{Bb}}}}0{{{d{Bd}}BnBh}{{Af{Ad}}}}03322{{{d{Bd}}}{{Af{Ad}}}}0{{{d{Bd}}}Ad}00011{{{d{Bd}}}{{Af{Bl}}}}0{{{d{Bd}}}Bb}0{{{d{Bd}}{d{Ad}}}{{Af{Bb}}}}0{{{d{Bd}}BnC`}Bb}0{{{d{Bd}}Cb}{{Af{Bb}}}}0{{{d{Bd}}j}Ad}077{{{d{Bd}}}{{Af{Bb}}}}00011{{{d{Bd}}Bb}Bb}0`{{{d{Cd}}}{{d{Bj}}}}```{{{d{Cf}}}{{d{Ch}}}}```````````````````````{{{d{c}}Cj}Cl{}}000{{Ch{d{{l{{d{Bf}}}}}}{d{{l{{d{Bf}}}}}}{Al{{d{Bf}}}}{d{Ch}}}Ch}{{{d{Cn}}{d{{l{Ab}}}}BhBh}Ch}0`{{{d{Cn}}D`{d{Ch}}Db}{{Af{Ch}}}}0{{{d{Bf}}{d{Bf}}}Dd}{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}DbBh{Al{{d{{l{{d{Bf}}}}}}}}}{{Af{Ch}}}}0{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}Db}{{Af{Ch}}}}0{{{d{c}}}{{d{e}}}{}{}}000{{{d{Dfc}}}{{d{Dfe}}}{}{}}000{{{d{Db}}}Db}{{{d{Dh}}}Dh}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{c}}{d{Dfe}}}Cl{}{}}000{{{d{Dh}}{d{Dj}}}Bh}`{{{d{Dn}}{d{Ch}}{Al{{d{Bf}}}}{Al{{E`{BnC`}}}}}{{Af{Ch}}}}0{{{d{Dn}}{d{Ch}}{Al{{E`{BnC`}}}}Bh}{{Af{{E`{ChCh}}}}}}0{{}Db}{{}Dh}{{}Dl}{{}Eb}{C`{{d{c}}}{}}000{C`{{d{Dfc}}}{}}000{C`Cl}000{{{d{Db}}{d{Db}}}Bh}{{{d{Dh}}{d{Dh}}}Bh}{{{d{Dj}}{d{Dj}}}Bh}{{{d{Dl}}{d{Dl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00000000000{{{d{Db}}{d{DfEd}}}Ef}{{{d{Dh}}{d{DfEd}}}Ef}{{{d{Dj}}{d{DfEd}}}Ef}0{{{d{Dl}}{d{DfEd}}}Ef}0{DjDb}{cc{}}000{{{d{Db}}{d{Dfc}}}ClEh}{{{d{Dh}}{d{Dfc}}}ClEh}{{{d{Dj}}{d{Dfc}}}ClEh}{{{d{Dl}}{d{Dfc}}}ClEh}{{{d{Ej}}{d{Ad}}DlBh}{{Af{{E`{ElBh}}}}}}0{{{d{Ej}}{d{Ad}}DlBh}{{Af{{E`{{En{Ab}}{En{Ab}}}}}}}}0`{{}C`}000{{{d{F`}}{d{Ch}}ee}{{Af{Ch}}}{{Fb{Bf}}}{{An{}{{Aj{c}}}}}}{ce{}{}}000{{{d{Dj}}}Bh}{{{d{F`}}{d{Ch}}eeDb}{{Af{Ch}}}{{Fb{Bf}}}{{An{}{{Aj{c}}}}}}`3{{{d{Dl}}}Bh}=4{{{d{Ch}}{d{Ch}}Bh}{{Af{D`}}}}`{{{d{Db}}}{{d{Bf}}}}`{{{d{c}}}e{}{}}000{{{d{c}}}Dd{}}0{c{{Fd{e}}}{}{}}0000000{{{d{c}}}Ff{}}000`{{DbDh}Db}`````````{{{d{c}}Cj}Cl{}}{{{d{Fh}}}{{Al{C`}}}}0{{{d{Fj}}}{{d{Ad}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Fl}}}Fl}{{{d{c}}{d{Dfe}}}Cl{}{}}{{{d{{l{Ad}}}}}{{Af{Ad}}}}{{{d{Ad}}C`}{{Af{Bl}}}}{{}Fl}{C`{{d{c}}}{}}{C`{{d{Dfc}}}{}}{C`Cl}{{{d{Fl}}{d{Fl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00{{{d{Fl}}{d{DfEd}}}{{Fd{ClFn}}}}{cc{}}{{{d{Fl}}{d{Dfc}}}ClEh}{{}C`}{ce{}{}}{{{d{Ad}}}Bh}{{{d{G`}}Cb}{{Af{Bh}}}}0{{{d{{l{Ad}}}}}{{Af{{Al{Ad}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{Bn{d{Bf}}}{{Af{Ad}}}}2{{{d{c}}}e{}{}}{c{{Fd{e}}}{}{}}0{{{d{c}}}Ff{}}{{{d{G`}}BhBh}{{Af{Ch}}}}0","D":"Eb","p":[[10,"AsBinary",4,281],[1,"reference"],[8,"BinaryChunked",282],[10,"BinaryNameSpaceImpl",4,283],[1,"u8"],[1,"slice"],[8,"BooleanChunked",282],[10,"ChunkedSet",4,284],[8,"IdxSize",285],[5,"Series",286],[8,"PolarsResult",287],[10,"Copy",288],[17,"Item"],[6,"Option",289],[10,"IntoIterator",290],[10,"AsList",23],[8,"ListChunked",282],[10,"ListNameSpaceImpl",23,291],[1,"str"],[1,"bool"],[8,"StringChunked",282],[8,"IdxCa",292],[1,"i64"],[1,"usize"],[5,"SortOptions",293],[10,"AsString",72],[10,"IntoDf",74],[5,"DataFrame",294],[5,"Private",295],[1,"unit"],[10,"JoinDispatch",78,296],[8,"LeftJoinIds",78,297],[5,"JoinArgs",78,297],[5,"String",298],[0,"mut"],[6,"JoinCoalesce",78,297],[6,"JoinType",78,297],[6,"JoinValidation",78,297],[10,"CrossJoin",78,299],[1,"tuple"],[8,"ChunkJoinOptIds",78,297],[5,"Formatter",300],[8,"Result",300],[10,"Hasher",301],[10,"SeriesJoin",78,302],[8,"InnerJoinIds",78,297],[5,"PrimitiveArray",303],[10,"DataFrameJoinOps",78],[10,"AsRef",304],[6,"Result",305],[5,"TypeId",306],[10,"ArgAgg",232,307],[10,"SeriesSealed",232,308],[6,"SearchSortedSide",232,309],[5,"Error",300],[10,"SeriesMethods",232,310]],"r":[[4,281],[5,283],[6,284],[24,291],[78,297],[79,297],[82,299],[85,297],[86,297],[87,297],[88,296],[90,297],[91,297],[94,297],[100,302],[105,311],[108,311],[111,311],[141,296],[230,78],[231,74],[233,307],[236,309],[237,310],[238,308],[245,312],[246,312],[247,312],[250,313],[251,314],[265,314],[268,313],[269,313],[270,313],[271,315],[272,316],[273,317],[274,313]],"b":[[172,"impl-Debug-for-JoinType"],[173,"impl-Display-for-JoinType"],[174,"impl-Display-for-JoinValidation"],[175,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPAAEgAAAAgACwABAA8AAwAVAA8AKQA2AGQABgBtABkAiQAoALYADADIAAAAygAAAMwAAQDPABoA6wAFAPMAAgD5AAwABwEBAAsBDAA="}],\
["polars_sql",{"t":"FNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNOONNNNNNOONONNNNOMNNNNNNNNNNNNNNNNNONNNMNNNNNONNNNOMNONNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","__clone_box","allow_group_aware","allow_rename","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_to_supertypes","changes_length","check_lengths","check_lengths","clone","clone","clone_into","clone_into","collect_groups","contains","contains","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt_str","from","from","from","get_udf","get_udf","hash","init","init","init","input_wildcard_expansion","into","into","into","is_groups_sensitive","pass_name_to_apply","register","register","returns_scalar","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","all_functions","all_keywords"],"q":[[0,"polars_sql"],[31,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_sql::context"],[111,"polars_lazy::frame"],[112,"polars_error"],[113,"alloc::string"],[114,"polars_utils::aliases"],[115,"alloc::vec"],[116,"alloc::sync"],[117,"polars_plan::dsl::expr"],[118,"core::convert"],[119,"core::result"],[120,"core::any"],[121,"polars_plan::logical_plan::options"],[122,"polars_plan::logical_plan"],[123,"core::fmt"],[124,"polars_plan::dsl::udf"],[125,"core::option"],[126,"core::hash"],[127,"polars_sql::sql_expr"]],"i":[0,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,0,5,5,5,5,5,5,5,21,0,21,0,0,0,19,21,19,19,22,19,21,22,19,21,19,19,19,19,19,21,19,21,19,13,22,19,22,19,21,22,19,21,22,19,21,19,19,19,19,19,21,19,22,19,21,13,22,19,22,19,21,19,22,19,21,19,19,13,22,19,19,21,22,19,21,22,19,21,22,19,21,22,19,21,0,0],"f":"`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{j}}}j}{{{b{c}}{b{he}}}f{}{}}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{ce{}{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{{{b{c}}}e{}{}}{c{{Bb{e}}}{}{}}0{{{b{c}}}Bd{}}{{{b{hj}}{b{n}}}f}9{{j{Al{Aj}}}j}``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00``{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{{b{c}}{b{he}}}f{}{}}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{{b{c}}{b{e}}}Bh{}{}}00{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00`{ce{}{}}00{{{b{Bf}}}Bh}`{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}`{{{b{c}}}e{}{}}0{c{{Bb{e}}}{}{}}00000{{{b{c}}}Bd{}}00666{{}{{Ah{{b{n}}}}}}0","D":"Dh","p":[[1,"reference"],[5,"Private",109],[1,"unit"],[0,"mut"],[5,"SQLContext",0,110],[1,"usize"],[1,"str"],[5,"LazyFrame",111],[8,"PolarsResult",112],[5,"String",113],[8,"PlHashMap",114],[5,"Vec",115],[10,"FunctionRegistry",31],[5,"Arc",116],[6,"Expr",117],[10,"AsRef",118],[6,"Result",119],[5,"TypeId",120],[5,"FunctionOptions",31,121],[1,"bool"],[6,"Context",31,122],[5,"DefaultFunctionRegistry",31],[5,"Formatter",123],[5,"Error",123],[5,"UserDefinedFunction",124],[6,"Option",125],[10,"Hasher",126]],"r":[[0,110],[23,127],[32,122],[35,121]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEkADAACAAgAEAAAABkAAwAeAAAAIQAAACQAAAAmABEAOgARAFAABABaAAAAXAAAAF4ADQA="}],\
["polars_time",{"t":"PGFPPKKKKKPFCHHMMOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsMonthEnd","PolarsMonthStart","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","month_end","month_start","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","DataPoint","Duration","Friday","Label","Left","Left","Monday","None","Right","Right","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","days","days_only","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","ensure_duration_matches_data_type","ensure_is_constant_duration","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","negative","new","new","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_impl","truncate_ms","truncate_ms","truncate_no_offset_ms","truncate_no_offset_ns","truncate_no_offset_us","truncate_ns","truncate_ns","truncate_us","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[26,"polars_time::chunkedarray"],[28,"polars_time::chunkedarray::string"],[60,"polars_time::chunkedarray::string::infer"],[85,"polars_time::prelude"],[285,"polars_time::series"],[306,"chrono::naive::datetime"],[307,"polars_time::windows::duration"],[308,"polars_time::windows::group_by"],[309,"polars_core::datatypes::time_unit"],[310,"polars_arrow::legacy::time_zone"],[311,"core::option"],[312,"polars_core::chunked_array::logical::datetime"],[313,"polars_error"],[314,"polars_time::month_end"],[315,"polars_time::month_start"],[316,"polars_time::round"],[317,"polars_core::datatypes"],[318,"chrono::naive::time"],[319,"polars_core::chunked_array::logical::time"],[320,"polars_time::truncate"],[321,"polars_time::upsample"],[322,"polars_core::frame"],[323,"alloc::string"],[324,"polars_core::utils"],[325,"dyn_clone::sealed"],[326,"polars_time::chunkedarray::string::patterns"],[327,"core::fmt"],[328,"core::hash"],[329,"core::result"],[330,"core::any"],[331,"core::clone"],[332,"polars_time::windows::bounds"],[333,"polars_time::windows::window"],[334,"core::cmp"],[335,"polars_core::datatypes::dtype"],[336,"polars_core::frame::group_by::proxy"],[337,"alloc::vec"],[338,"core::ops::function"],[339,"polars_core::series"],[340,"polars_time::date_range"]],"i":[5,0,0,5,5,0,0,0,0,0,5,0,0,0,0,12,13,46,4,0,14,0,0,18,19,19,0,0,0,27,27,27,27,27,0,0,27,25,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,27,27,27,27,27,27,27,0,41,0,0,34,34,34,34,34,34,34,34,34,0,34,34,34,34,37,34,34,34,41,34,34,5,0,0,0,44,45,0,45,0,5,44,45,5,5,44,45,0,45,0,45,45,45,0,45,43,4,5,44,45,46,4,4,4,49,43,4,5,44,45,46,49,43,4,5,44,45,46,43,4,5,44,45,46,43,4,5,44,45,46,4,4,4,4,45,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,0,0,4,5,44,45,4,4,4,5,5,5,44,44,44,45,45,45,43,4,4,5,44,45,49,43,4,5,44,45,46,46,46,46,46,0,0,4,5,44,45,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,4,4,4,4,4,4,4,4,4,46,49,46,4,4,4,46,46,46,43,4,5,44,45,46,4,4,4,46,46,46,46,4,46,4,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,45,4,4,0,0,57,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59],"f":"`````````````{{{d{b}}ffhjl{A`{{d{n}}}}}{{Ad{Ab}}}}{{{d{f}}}Af}{{{d{Ah}}{A`{{d{n}}}}}{{Ad{Ah}}}}{{{d{Aj}}{A`{{d{n}}}}}{{Ad{Aj}}}}```{{{d{Al}}{d{An}}h{A`{{d{n}}}}}{{Ad{Al}}}}`{{{d{b}}B`B`hj}{{Ad{Bb}}}}{{{d{Bd}}{A`{{d{n}}}}{d{An}}{d{b}}}{{Ad{Bd}}}}{{{d{Bf}}c{d{b}}hh}{{Ad{Bh}}}{{Bl{Bj}}}}0``````````{{{d{c}}Bn}C`{}}{{{d{Cb}}}{{d{An}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Cdc}}}{{d{Cde}}}{}{}}{{{d{Cf}}}Cf}{{{d{c}}{d{Cde}}}C`{}{}}{Ch{{d{c}}}{}}{Ch{{d{Cdc}}}{}}{ChC`}{{{d{Cf}}{d{Cf}}}Af}{{{d{c}}{d{e}}}Af{}{}}00{{{d{Cf}}{d{CdCj}}}Cl}{cc{}}{{{d{Cf}}{d{Cdc}}}C`Cn}`{{}Ch}{ce{}{}}{{{d{Cf}}{d{b}}}Af}{{{d{c}}}e{}{}}{c{{D`{e}}}{}{}}0{{{d{c}}}Db{}}````{{{d{c}}Bn}C`{}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Cdc}}}{{d{Cde}}}{}{}}{{{d{{Dd{c}}}}}{{Dd{c}}}{DfDh}}{{{d{c}}{d{Cde}}}C`{}{}}{Ch{{d{c}}}{}}{Ch{{d{Cdc}}}{}}{ChC`}?{{{d{b}}}{{A`{Cf}}}}>=`{{{d{Cd{Dd{c}}}}{d{b}}}A`Dh}{{{d{CdDj}}{d{{Dn{Dl}}}}{A`{l}}}{{A`{c}}}{}}`=<{{c{A`{l}}}{{Ad{{Eb{}{{E`{e}}}}}}}{}{}}=<````````````````````````;;;;;;{{{d{h}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}00;;;;;;;:::::::{{{d{Ef}}}Ef}{{{d{h}}}h}{{{d{j}}}j}{{{d{Eh}}}Eh}{{{d{Ej}}}Ej}{{{d{El}}}El}>>>>>>{{{d{h}}{d{h}}}En}{{{d{c}}{d{e}}}En{}{}}{{{d{h}}}Ed}{{{d{h}}}Af}{{}Ej}{Ch{{d{c}}}{}}000000{Ch{{d{Cdc}}}{}}000000{ChC`}000000{{h{d{F`}}{d{b}}}{{Ad{C`}}}}{{h{A`{{d{b}}}}{d{b}}}{{Ad{C`}}}}{{{d{h}}{d{h}}}Af}{{{d{j}}{d{j}}}Af}{{{d{Eh}}{d{Eh}}}Af}{{{d{Ej}}{d{Ej}}}Af}{{{d{c}}{d{e}}}Af{}{}}00000000000{{{d{Ef}}{d{CdCj}}}Cl}{{{d{h}}{d{CdCj}}}Cl}0{{{d{j}}{d{CdCj}}}Cl}{{{d{Eh}}{d{CdCj}}}Cl}{{{d{Ej}}{d{CdCj}}}Cl}{cc{}}000000{{{d{El}}Edj{A`{{d{n}}}}}{{Ad{Ef}}}}00{{{d{El}}Efjl{A`{{d{n}}}}Ej}{{Ad{Fb}}}}{{hh{d{{Dn{Ed}}}}jl{A`{n}}}{{Ad{Fd}}}}{{El{d{{Dn{Ed}}}}jl{d{{A`{Ff}}}}AfAfEj}{{Fj{Fd{Fh{Ed}}{Fh{Ed}}}}}}{{{d{h}}{d{Cdc}}}C`Cn}{{{d{j}}{d{Cdc}}}C`Cn}{{{d{Eh}}{d{Cdc}}}C`Cn}{{{d{Ej}}{d{Cdc}}}C`Cn}{{}Ch}000000{ce{}{}}0000000{{{d{h}}{A`{{d{b}}}}}Af}{{{d{h}}}Af}0{{{d{h}}}Ed}1{{hEd}h}12{Edh}{{hhh}El}{{{d{CdFb}}}{{A`{c}}}{}}`{{{d{b}}}h}`{{{d{h}}{d{h}}}{{A`{En}}}}{{{d{El}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}00{{{d{c}}}e{}{}}00000{{{d{c}}}Bj{}}{{{d{h}}Ed{A`{{d{n}}}}ceg}{{Ad{Ed}}}{{Fn{Ed}{{Fl{Ed}}}}}{{Fn{Ed}{{Fl{f}}}}}{{Fn{f}{{Fl{Ed}}}}}}{{{d{h}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}44440404{c{{D`{e}}}{}{}}0000000000000{{{d{c}}}Db{}}000000{{{d{Ej}}}{{A`{G`}}}}>?``{{{d{Gb}}}{{d{Gd}}}}{{{d{Gf}}}{{Ad{Gh}}}}{{{d{Gf}}}{{Ad{Gj}}}}0{{{d{Gf}}}{{Ad{Gl}}}}22112{{{d{Gf}}}{{Ad{Gn}}}}322{{{d{Gf}}{d{b}}}{{Ad{Gd}}}}0334","D":"Gb","p":[[1,"str"],[1,"reference"],[5,"NaiveDateTime",306],[5,"Duration",85,307],[6,"ClosedWindow",85,308],[6,"TimeUnit",309],[6,"Tz",310],[6,"Option",311],[8,"DatetimeChunked",312],[8,"PolarsResult",313],[1,"bool"],[10,"PolarsMonthEnd",0,314],[10,"PolarsMonthStart",0,315],[10,"PolarsRound",0,316],[8,"StringChunked",317],[5,"NaiveTime",318],[8,"TimeChunked",319],[10,"PolarsTruncate",0,320],[10,"PolarsUpsample",0,321],[5,"DataFrame",322],[5,"String",323],[10,"IntoVec",324],[5,"Private",325],[1,"unit"],[10,"AsString",28],[0,"mut"],[6,"Pattern",28,326],[1,"usize"],[5,"Formatter",327],[8,"Result",327],[10,"Hasher",328],[6,"Result",329],[5,"TypeId",330],[5,"DatetimeInfer",60],[10,"Clone",331],[10,"PolarsNumericType",317],[10,"StrpTimeParser",60],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",60],[1,"i64"],[5,"Bounds",85,332],[6,"Label",85,308],[6,"StartBy",85,308],[5,"Window",85,333],[6,"Ordering",334],[6,"DataType",335],[5,"BoundsIter",85,333],[8,"GroupsSlice",336],[8,"TimeZone",335],[5,"Vec",337],[1,"tuple"],[17,"Output"],[10,"Fn",338],[1,"u32"],[10,"AsSeries",285],[5,"Series",339],[10,"TemporalMethods",285],[8,"Int32Chunked",317],[8,"Int8Chunked",317],[8,"BooleanChunked",317],[8,"Int16Chunked",317]],"r":[[1,308],[2,307],[5,314],[6,315],[7,316],[8,320],[9,321],[11,333],[13,340],[14,340],[22,340],[26,28],[34,326],[86,332],[87,333],[88,308],[91,307],[93,308],[101,308],[103,285],[107,333],[170,307],[171,307],[205,308],[206,308]],"b":[[189,"impl-Display-for-Duration"],[190,"impl-Debug-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPkAFQAAAAsADwAHABgAAAAbABcANAACADgAEABKAAEATQATAGIACQBtAFUAygAAAMwAAQDQAAoA4gABAOYAAgDsAAIA8AABAPUADQAEAQAABgEaACUBAAA="}],\
["polars_utils",{"t":"EECCCCCCCCCCCCCQQCCCCCCCQCCCCCCCCCCQQCCRKMMRKIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHKNNNNNKMHHHHFKNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHKKKRKRNNNNMMMHKNNNNMMTRKMMHHFNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","float","floor_divmod","fmt","format_list","format_smartstring","functions","hashing","idx_vec","index","io","iter","macros","matches_any_order","mem","min_max","nulls","ord","partitioned","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","new","new","new","new","new","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","Arena","Node","add","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","compare","default","default","deref","deref","deref_mut","deref_mut","drop","drop","duplicate","eq","equivalent","equivalent","equivalent","fmt","from","from","get","get_mut","get_node","get_unchecked","hash","init","init","into","into","is_empty","len","new","partial_cmp","pop","replace","replace_with","swap","take","to_owned","to_owned","try_from","try_from","try_into","try_into","try_replace_with","type_id","type_id","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","find_first_ge_index","find_first_gt_index","FastCachedFunc","FastFixedCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","from","from","get","get_mut","get_or_insert_with","init","init","insert","into","into","new","new","to_owned","try_from","try_from","try_get_or_insert_with","try_into","try_into","type_id","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","from","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","deref","deref_mut","dirty_hash","dirty_hash","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","default","deref","deref","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from_fallible_iter","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","borrow","borrow_mut","borrow_mut","check_bounds","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extract","fmt","fmt","from","from","from","get","get_unchecked","idx","init","init","inner","inner_mut","into","into","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","null","null_count","store","to_idx","to_opt","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","create_file","open_file","EnumerateIdxTrait","FallibleIterator","FromFallibleIterator","IntoIterCopied","IntoIteratorCopied","OwnedItem","enumerate_idx","enumerate_idx","enumerate_u32","enumerate_u32","from_fallible_iter","get_result","into_iter","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deref_unchecked","drop","fmt","from","from","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","equivalent","equivalent","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[39,"polars_utils::abs_diff"],[43,"polars_utils::aliases"],[59,"polars_utils::arena"],[117,"polars_utils::atomic"],[137,"polars_utils::binary_search"],[139,"polars_utils::cache"],[175,"polars_utils::cell"],[195,"polars_utils::clmul"],[199,"polars_utils::contention_pool"],[214,"polars_utils::cpuid"],[216,"polars_utils::float"],[222,"polars_utils::floor_divmod"],[224,"polars_utils::functions"],[228,"polars_utils::hashing"],[260,"polars_utils::idx_vec"],[304,"polars_utils::index"],[366,"polars_utils::io"],[368,"polars_utils::iter"],[381,"polars_utils::mem"],[382,"polars_utils::min_max"],[389,"polars_utils::nulls"],[394,"polars_utils::ord"],[396,"polars_utils::partitioned"],[415,"polars_utils::slice"],[429,"polars_utils::sort"],[431,"polars_utils::sync"],[454,"polars_utils::sys"],[468,"polars_utils::total_ord"],[518,"polars_utils::unwrap"],[520,"polars_utils::vec"],[533,"num_traits"],[534,"core::cmp"],[535,"core::marker"],[536,"core::fmt"],[537,"core::clone"],[538,"core::option"],[539,"core::hash"],[540,"core::default"],[541,"core::ops::function"],[542,"core::result"],[543,"core::any"],[544,"core::borrow"],[545,"alloc::sync"],[546,"alloc::vec"],[547,"core::convert"],[548,"core::ops::range"],[549,"core::iter::traits::collect"],[550,"polars_utils::iter::fallible"],[551,"core::slice::iter"],[552,"polars_error"],[553,"std::fs"],[554,"std::path"],[555,"polars_utils::iter::enumerate_idx"],[556,"core::error"],[557,"core::iter::traits::iterator"],[558,"hashbrown::map"],[559,"core::mem::maybe_uninit"],[560,"core::slice::index"],[561,"num_traits::cast"],[562,"rayon_core::thread_pool"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,112,0,0,0,0,0,112,10,11,113,114,112,10,11,113,114,0,0,13,15,13,15,13,13,15,13,15,13,15,15,15,13,15,13,15,13,15,13,13,15,15,15,15,15,15,13,13,13,13,13,15,15,13,15,13,13,13,13,15,13,13,13,13,13,15,13,15,13,15,13,13,15,13,13,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,0,0,0,36,33,36,33,33,33,33,36,33,36,33,36,33,36,36,33,33,33,33,36,33,33,36,33,36,33,33,36,33,33,36,33,36,33,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,43,43,43,43,43,0,44,0,0,0,0,0,0,50,50,50,50,50,50,51,50,50,50,50,50,50,50,50,50,0,50,50,50,50,50,50,50,50,50,50,50,50,50,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,64,0,0,0,0,62,63,62,63,0,62,63,62,63,62,63,62,63,62,63,62,62,62,62,63,62,63,62,62,63,64,64,62,62,63,62,63,62,63,66,63,62,62,66,62,63,67,63,68,62,62,63,62,63,62,63,62,63,0,0,0,0,0,77,0,77,71,71,71,71,73,57,77,0,0,79,79,79,79,79,79,65,65,0,65,65,0,0,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,0,0,0,0,85,87,87,89,0,90,90,91,91,0,0,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,0,0,96,96,96,96,96,96,96,96,96,96,96,96,104,0,0,0,0,104,0,99,99,0,0,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,104,99,104,92,100,92,92,101,101,92,92,100,99,99,99,99,0,105,0,0,0,107,0,0,107,107,108,109,110,109,111],"f":"`````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}``````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{An}}{Al{An}}}Bd}{{{Al{c}}{Al{e}}}Bd{}{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{An}}{Al{AhBh}}}Bj}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Bl{An}}}{}}2{{{Al{An}}{Al{Ahc}}}B`Bn}{{}Ab}0{ce{}{}}0{{{Al{{Aj{c}}}}}Bf{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Bl{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Bl{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}B`{}}{{{Al{Ah{Aj{c}}}}Ane}B`C`{{Cd{c}{{Cb{c}}}}}}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cC`}{{{Al{c}}}e{}{}}0{c{{Cf{e}}}{}{}}000{{{Al{Ah{Aj{c}}}}Ane}{{Cf{B``}}}C`{{Ch{c}{{Cb{{Cf{c`}}}}}}}}{{{Al{c}}}Cj{}}0{Ab{{Aj{c}}}{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{Cl}}}Cl}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}Cl}{{{Al{Cl}}}{{Al{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{AhCl}}}{{Al{Ahc}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{ce{}{}}{{{Al{AhCl}}}B`}{AbCl}{{{Al{c}}}e{}{}}{c{{Cf{e}}}{}{}}0{{{Al{c}}}Cj{}}{{{Al{{Cn{c}}}}c}AbD`}0``{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Db{ce}}}}}{{Db{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}{{Db{ce}}}{DdDf}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Dh{ceg}}}}cBf}e{DdDfBb}j{{Ch{c}{{Cb{e}}}}}}{cc{}}0{{{Al{{Db{eg}}}}{Al{c}}}{{Bl{{Al{g}}}}}{DdDfDj}{{Dl{c}}DdDf}{}}{{{Al{Ah{Db{eg}}}}{Al{c}}}{{Bl{{Al{Ahg}}}}}{DdDfDj}{{Dl{c}}DdDf}{}}{{{Al{Ah{Db{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{Dl{c}}DdDf}{}{{Cd{{Al{e}}}{{Cb{g}}}}}}{{}Ab}0{{{Al{Ah{Db{ce}}}}ce}{{Al{Ahe}}}{DdDf}{}}{ce{}{}}0{{gAb}{{Dh{ceg}}}{DdDfBb}j{{Ch{c}{{Cb{e}}}}}}{Ab{{Db{ce}}}{DdDf}{}}{{{Al{c}}}e{}{}}{c{{Cf{e}}}{}{}}0{{{Al{Ah{Db{eg}}}}{Al{c}}k}{{Cf{{Al{Ahg}}i}}}{}{{Dl{c}}DdDf}{}{}{{Cd{{Al{e}}}{{Cb{{Cf{gi}}}}}}}}11{{{Al{c}}}Cj{}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{}{{Dn{c}}}C`}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{E`c{}}{cc{}}{c{{Dn{c}}}{}}{{{Al{{Dn{c}}}}}{}Dj}{{{Al{Ah{Dn{c}}}}}{{Al{Ahc}}}Dj}{{}Ab}{ce{}{}}{{{Dn{c}}}c{}}5{{}}{c{{Cf{e}}}{}{}}0{{{Al{c}}}Cj{}}{{EbEb}Eb}0{EbEb}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{{Al{{Ed{c}}}}}cC`}>={Ab{{Ed{c}}}C`}{{{Al{{Ed{c}}}}c}B`C`}<<;{{}Bf}0`00{{{Al{Ef}}}Bf}10`{{EhEh}{{Ej{EhEh}}}}{{{El{c}}e}{{El{c}}}Bb{{Ch{c}{{Cb{c}}}}}}{{{Al{{Cn{e}}}}{Bl{Ab}}}{{En{c}}}Bb{{F`{{Cn{c}}}}}}{{AbAb{Fb{Ab}}}{{Fb{Ab}}}}{{{El{c}}g}{{Cf{{El{c}}e}}}Bb{}{{Ch{c}{{Cb{{Cf{ce}}}}}}}}``?>{{{Al{Fd}}}Fd}{{{Al{c}}{Al{Ahe}}}B`{}{}}?>{{{Al{Ff}}}Eb}{{{Al{Fd}}}Eb}?{{{Al{Fd}}{Al{Fd}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Fd}}{Al{AhBh}}}Bj}{cc{}}{{{Al{Fd}}{Al{Ahc}}}B`Bn}{{EbAb}Ab}{{}Ab}{ce{}{}}{{{Al{Fd}}}Bf}{{{Bl{{Al{{Cn{Fh}}}}}}Eb}Fd}2{{{Al{c}}}e{}{}}{{{Al{Fd}}}c{}};7{c{{Cf{e}}}{}{}}0{{{Al{c}}}Cj{}}{Fdc{}}``{{{Al{Ah{Fj{c}}}}}{{Al{Ah{Cn{c}}}}}{}}0{{{Al{{Fj{c}}}}}{{Al{{Cn{c}}}}}{}}0{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Fj{c}}}}}Ab{}}{{{Al{{Fj{c}}}}}{{Fj{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}{{Fj{c}}}{}}{{{Al{{Fj{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Ah{Fj{c}}}}}B`{}}{AbB`}{{{Al{{Fj{c}}}}{Al{{Fj{c}}}}}BfFl}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Ah{Fj{c}}}}e}B`{}{{G`{}{{Fn{c}}}}}}{{{Al{{Fj{c}}}}{Al{AhBh}}}Bjl}{{{En{c}}}{{Fj{c}}}{}}{cc{}}{{{Al{{Cn{c}}}}}{{Fj{c}}}Bb}{g{{Cf{ic}}}{}{}{{Gb{c}{{Fn{e}}}}}{}}{e{{Fj{c}}}{}{{G`{}{{Fn{c}}}}}}{{}Ab}{ce{}{}}{{{Al{{Fj{c}}}}}Bf{}}{{{Al{{Fj{c}}}}}{{Gd{c}}}{}}{{{Al{Ah{Fj{c}}}}}{{Gf{c}}}{}}{{{Al{{Fj{c}}}}}Ab{}}{{}{{Fj{c}}}{}}{{{Al{Ah{Fj{c}}}}}{{Bl{c}}}{}}{{{Al{Ah{Fj{c}}}}c}B`{}}0{{{Al{Ah{Fj{c}}}}Ab}B`{}}{{{Al{c}}}e{}{}}{c{{Cf{e}}}{}{}}0{{{Al{c}}}Cj{}}{Ab{{Fj{c}}}{}}`````````{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Cn{Gh}}}}Gh}{{Gj{B`}}}}{{{Al{Gl}}}Gl}{{{Al{Gn}}}Gn}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Gl}}{Al{Gl}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{Gn{{Ej{GhGh}}}}{{{Al{Gl}}{Al{AhBh}}}Bj}{{{Al{Gn}}{Al{AhBh}}}Bj}{cc{}}{GhGl}1{{{Al{{H`{}{{Fn{c}}}}}}Ab}cHb}0{{{Al{Gl}}}Gh}{{}Ab}0`{{{Al{AhGn}}}{{Al{AhEb}}}}{ce{}{}}0{{{Al{Hd}}}Bf}{{{Al{Gn}}}Bf}{{{Al{Gl}}}Bf}{{{Al{c}}}Bf{}}{{{Al{Hd}}}Ab}{{}Gl}{{}Gn}{{{Al{Hf}}}Ab}{{GhGh}Gn}{{HhEb}Gh}{{{Al{Gl}}}{{Bl{Gh}}}}{{{Al{c}}}e{}{}}0{c{{Cf{e}}}{}{}}000{{{Al{c}}}Cj{}}0{c{{Gj{Hj}}}{{F`{Hl}}}}0``````{Hn{{`{HnGh}}}}0{Hn{{`{HnI`}}}}0{g{{Cf{Ibc}}}Id{}{{Gb{c}{{Fn{e}}}}}}{{{Al{AhGb}}}{{Cf{B`c}}}Id}{{{Ij{}{{If{c}}{Ih{e}}}}}e{}{{Il{}{{Fn{c}}}}}}{{{Al{{Cn{c}}}}}{{Al{Ah{Cn{c}}}}}j}`{{InIn}In}000{{{Al{In}}{Al{In}}}Bf}0```{{{Al{{Hb{}{{J`{c}}}}}}}Bf{}}{{{Hb{}{{J`{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hEf}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Jb{ceg}}}}}{{Al{{Cn{{Jd{ceg}}}}}}}{}{}{}}{{{Al{Ah{Jb{ceg}}}}}{{Al{Ah{En{{Jd{ceg}}}}}}}{}{}{}}{ce{}{}}{{{En{{Jd{ceg}}}}}{{Jb{ceg}}}{}{}{}}{{{Al{{Jb{ceg}}}}Eb}{{Jf{ceg}}}{}{}{}}{{{Al{{Jb{ceg}}}}Eb}{{Ej{{Jf{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jb{ceg}}}}Eb}{{Ej{{Jh{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jb{ceg}}}}Eb}{{Jh{ceg}}}{}{}{}}{c{{Cf{e}}}{}{}}0{{{Al{c}}}Cj{}}`````{{{Al{Jj}}}{{Al{{Cn{{Jl{c}}}}}}}{}}{{{Al{Jn}}e}Al{}{{K`{{Cn{c}}}}}}{{{Al{AhJn}}e}{{Al{Ah}}}{}{{K`{{Cn{c}}}}}}{{{Al{Kb}}}Bf}{{{Al{{Cn{Fh}}}}}Eb}{{{Al{Kd}}}{{Bl{{Al{c}}}}}{}}0{{{Al{Kf}}{Fb{Ab}}}Kf}0{{e{Al{Ah{En{Fh}}}}Ab}{{Al{Ah{Cn{g}}}}}{Khj}{{G`{}{{Fn{c}}}}}{Kjj}}{{{Al{Kl}}{Al{{Cn{{Ej{GhGh}}}}}}{Al{Ah{En{Gh}}}}}B`}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Kn{c}}}}}{{Kn{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Kn{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{Kn{c}}}}{Al{AhBh}}}Bjl}{cc{}}{{}{{Kn{c}}}{}}0{{{Al{{Kn{c}}}}}{}{}}{{}Ab}{ce{}{}}{{{Al{{Kn{c}}}}}Bf{}}44{{{Al{c}}}e{}{}}{c{{Cf{e}}}{}{}}0{{{Al{c}}}Cj{}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}?><{{{Al{L`}}}Eb};87443```````21{LbLb}{LdLd}{{{Al{{Lf{c}}}}}{{Lf{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{{Lf{c}}}}{Al{{Lf{c}}}}}BdKh}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Lf{c}}}}}EbFf}{AbB`}{{{Al{{Lf{c}}}}{Al{{Lf{c}}}}}BfLh}{{{Al{c}}{Al{e}}}Bf{}{}}00{cc{}}{{{Al{{Lf{c}}}}{Al{{Lf{c}}}}}BfKh}0{{{Al{{Lf{c}}}}{Al{Ahe}}}B`LjBn}{{}Ab}{ce{}{}}{{{Al{{Lf{c}}}}}BfHb}447{{{Al{{Lf{c}}}}{Al{{Lf{c}}}}}{{Bl{Bd}}}Kh}2{{{Al{c}}}e{}{}}{{{Al{{M`{}{{Ll{c}}{Ln{e}}}}}}}c{}{}}{{{Al{Kh}}{Al{Kh}}}Bd}{{{Al{Lh}}{Al{Lh}}}Bf}{{{Al{Kh}}{Al{Kh}}}Bf}0{{{Al{Lj}}{Al{Ahc}}}B`Bn}{{{Al{{Cn{Lj}}}}{Al{Ahc}}}B`Bn}223{c{{Cf{e}}}{}{}}0{{{Al{c}}}Cj{}}{{{Lf{c}}}eHb{}}`{Mbc{}}``````{{{Al{{Mf{}{{Md{c}}}}}}g}{{En{e}}}{}{}{{Ch{{Al{c}}}{{Cb{e}}}}}}{{{Mf{}{{Md{c}}}}g}{{En{e}}}{}{}{{Ch{c}{{Cb{e}}}}}}{{{Al{AhMh}}Abc}B`j}{Mj{{Ej{AbAb}}}}{{{Al{AhMl}}c}B`{}}{{{Al{Mj}}}{{Ej{AbAb}}}}{{AbLd}Mn}","D":"Ib","p":[[17,"Abs"],[10,"AbsDiff",39],[10,"Num",533],[10,"PartialOrd",534],[10,"Copy",535],[10,"Debug",536],[10,"Send",535],[10,"Sync",535],[1,"usize"],[8,"PlHashMap",43],[8,"PlHashSet",43],[0,"mut"],[5,"Arena",59],[1,"reference"],[5,"Node",59],[1,"unit"],[10,"Clone",537],[6,"Ordering",534],[1,"bool"],[5,"Formatter",536],[8,"Result",536],[6,"Option",538],[10,"Hasher",539],[10,"Default",540],[17,"Output"],[10,"FnOnce",541],[6,"Result",542],[10,"FnMut",541],[5,"TypeId",543],[5,"SyncCounter",117],[1,"slice"],[10,"Ord",534],[5,"FastFixedCache",139],[10,"Hash",539],[10,"Eq",534],[5,"FastCachedFunc",139],[10,"Sized",535],[10,"Borrow",544],[5,"SyncUnsafeCell",175],[1,"never"],[1,"u64"],[5,"LowContentionPool",199],[10,"IsFloat",216],[10,"FloorDivMod",222],[1,"tuple"],[5,"Arc",545],[5,"Vec",546],[10,"AsRef",547],[5,"Range",548],[5,"BytesHash",228],[10,"DirtyHash",228],[1,"u8"],[5,"UnitVec",260],[10,"PartialEq",534],[17,"Item"],[10,"IntoIterator",549],[10,"FallibleIterator",368,550],[5,"Iter",551],[5,"IterMut",551],[8,"IdxSize",304],[8,"PolarsResult",552],[5,"NullableIdxSize",304],[5,"ChunkId",304],[10,"Indexable",304],[10,"IsNull",389],[10,"Bounded",304],[10,"NullCount",304],[10,"ToIdx",304],[5,"File",553],[5,"Path",554],[10,"EnumerateIdxTrait",368,555],[1,"u32"],[10,"FromFallibleIterator",368,550],[10,"Error",556],[17,"OwnedItem"],[17,"IntoIterCopied"],[10,"IntoIteratorCopied",368],[10,"Iterator",557],[10,"MinMax",382],[17,"Inner"],[5,"PartitionedHashMap",396],[5,"HashMap",558],[5,"RawEntryBuilder",558],[5,"RawEntryBuilderMut",558],[10,"Slice2Uninit",415],[20,"MaybeUninit",559],[10,"GetSaferUnchecked",415],[10,"SliceIndex",560],[10,"SortedSlice",415],[10,"Extrema",415],[10,"SliceAble",415],[10,"TotalOrd",468],[10,"FromPrimitive",561],[5,"ThreadPool",562],[5,"SyncPtr",431],[5,"MemInfo",454],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",468],[10,"TotalEq",468],[10,"TotalHash",468],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",468],[10,"UnwrapUncheckedRelease",518],[17,"ItemIn"],[10,"ConvertVec",520],[10,"ResizeFaster",520],[10,"IntoRawParts",520],[10,"PushUnchecked",520],[10,"CapacityByFactor",520],[10,"InitHashMaps",43],[8,"PlIndexMap",43],[8,"PlIndexSet",43]],"r":[[0,304],[1,304],[368,555],[369,550],[370,550]],"b":[[283,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[285,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMwBNAAAAAgACgBNAFoAAgBeAAIAYwASAHcACQCCAAAAhQAEAI0ADgCeAAUApgAJALEAAQC0AAMAvAAAAMEADADPAAEA0gAGANoACgDmAA4A9gACAPoACwAHARUAHgEDACMBBgArASQAUQEAAFMBAABVAQQAXAEXAHUBAAB3AQYAfwELAI0BBQCUAQIAmAENAKgBBACuAQAAsQEFALgBAQC7AQMAwAEAAMIBBQDJAQQA0AEAANIBAwDaAQMA4AELAO0BAwDyARUACQIEAA8CAwAUAgEA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
